+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CtJDqcFBJ0
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CtJDqcFBJ0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0ODgzMzgzMTM2NjU3NzAwMAo--
++ divisor=--MTc0ODgzMzgzMTM2NjU3NzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5vjPVfOxkF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5vjPVfOxkF
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ 6 -eq 0 ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console --verbose
++ mkdir -p logs/console logs/jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODgzMzgzMTM4Mzc1OTAwMAo--
++ divisor=--MTc0ODgzMzgzMTM4Mzc1OTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cDZlkUyr1P
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cDZlkUyr1P
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ 6 -eq 0 ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console --verbose
++ mkdir -p logs/console logs/jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ dry_run=false
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--MTc0ODgzMzgzMTQwMjEzODAwMAo--
++ divisor=--MTc0ODgzMzgzMTQwMjEzODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ alias network-configs--helper=network_configs__helper
++ tr -d '\r'
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ grep -v '^\s*$'
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ local 'prompt_message=Enter configuration file to be parsed: '
+ export network_extract__console=logs/console/network-extract.console
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ -z cisco ]]
+ [[ true == true ]]
+ touch logs/console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sm9KKHOixO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sm9KKHOixO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ 6 -eq 0 ]]
++ export 'nl=\n'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console --verbose
++ mkdir -p logs/console logs/jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export divisor=--MTc0ODgzMzgzMTQyMDQxMDAwMAo--
++ divisor=--MTc0ODgzMzgzMTQyMDQxMDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ which awk
++ tr -d '\r'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ grep -v '^\s*$'
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ declare -a execute
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ echo
+ touch logs/console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
++ echo -e --platform=cisco
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
++ which awk
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2qEqImkXd
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2qEqImkXd
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ 6 -eq 0 ]]
++ alias print-message=message
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local awk_bin=/usr/bin/awk
++ alias print-newline=newline
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console --verbose
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias pause=pause
++ alias print-line=print
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ oIFS=' 	
'
+ [[ platform =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ [[ platform =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --search=.cache/ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
++ dirname .cache/resources/cisco/branch-isr-02.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
+ [[ ! -d .cache/resources/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
+++ date +%s%N
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+++ base64
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

++ dirname -- ./scripts/network-extract.shell
version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ config =~ ^(platform|p)$ ]]
+ IFS=' 	
'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ dry_run=false
+ [[ config == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ console_output=false
+ for xitem in "${@}"
+ [[ -z '' ]]
+ local export_objects=false
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console ]]
+ read -r key value
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_DIR=./scripts
++ tr -d '\r'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ mktemp -d
++ grep -v '^#'
++ export divisor=--MTc0ODgzMzgzMTQ0NDA1MTAwMAo--
++ divisor=--MTc0ODgzMzgzMTQ0NDA1MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ which awk
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ alias parse-cisco=main
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ extract =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ [[ -z x ]]
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ export logs_location=logs
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ logs_location=logs
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ mkdir -p logs/console
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XLSCLEwnvk
+ newline
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XLSCLEwnvk
+ local count=1
+ (( i = 0 ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ echo
+ export 'nl=\n'
+ nl='\n'
+ (( i++ ))
+ source ./scripts/devops-resources.shell
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
++ [[ -n '' ]]
++ IFS=,
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
++ [[ 5 -lt 4 ]]
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --platform=cisco
++ alias list-file=list_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-error=log_error
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
++ alias log-info=log_info
++ alias log-warn=log_warn
+ declare -a execute
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ which awk
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ script_filename=network-extract.shell
++ mkdir -p logs/console logs/jobs
+ script_filename=network-extract
+ newline
+ export network_extract__console=logs/console/network-extract.console
+ local count=1
+ network_extract__console=logs/console/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ touch logs/console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ 6 -eq 0 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
++ printf '%*s' 12 ''
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ local 'indent=            '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console ]]
+ [[ true == true ]]
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console ]]
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--access-sw1-west.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
++ echo -e --search=.cache/ips.list
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CtJDqcFBJ0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CtJDqcFBJ0
++ command -v -- ./scripts/network-extract.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ echo -e --verbose
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODgzMzgzMTQ2NDQyMjAwMAo--
++ divisor=--MTc0ODgzMzgzMTQ2NDQyMjAwMAo--
+ source ./scripts/devops-helpers.shell
++ mktemp -d
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ verbose == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
  "model": "",
  "version": "16.9",
+ [[ verbose == \d\e\b\u\g ]]
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ verbose == \d\r\y\-\r\u\n ]]
}
+ [[ verbose == \v\e\r\b\o\s\e ]]

version 16.9
hostname branch-isr-02
+ local verbose=true

+ alias serialize-object=serialize_objects
+ IFS=' 	
'
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ [[ -z '' ]]
 description ISP uplink

+ debug=false
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ [[ -z '' ]]

+ dry_run=false
interface GigabitEthernet0/0/2
+ [[ -z true ]]
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ [[ -z '' ]]

+ export console_output=false
object network BlackWidow-Core
+ console_output=false
 host 172.16.1.6
+ [[ -z '' ]]
 description Branch router uplink NAT
+ local export_objects=false

object network Hydra-Link
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console ]]
 host 198.51.100.75
 description Branch NAT egress
+ [[ -z '' ]]

+ script_helper=false
object-group network Hydra-Edge
 description Remote site uplink
+ [[ false == true ]]
+ local SCRIPT_DIR=./scripts
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 network-object host 192.168.2.12
+ [[ -z .cache/ips.list ]]
 network-object host 198.51.100.75

object network Panther-Gateway
+ search_terms=()
 host 10.0.2.3
+ local script_filename=cisco-configs.awk
 description Secure outbound concentrator
+ declare -a search_terms

+ local script_filepath=./scripts/extract/cisco-configs.awk
object-group network Lantern-DMZ
+ [[ -f .cache/ips.list ]]
 description Protected but public-facing zone
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 network-object host 172.18.1.20
+ [[ .cache/ips.list != *,* ]]
 network-object host 192.168.1.11'
+ mapfile -t search_terms
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
+ alias parse-cisco=main
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
+ [[ -z x ]]
 description Branch router uplink NAT

+ export logs_location=logs
object network Hydra-Link
+ logs_location=logs
 host 198.51.100.75
 description Branch NAT egress
+ mkdir -p logs/console

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ which awk
+ IFS==
+ read -r key value
++ tr -d '\r'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ grep -v '^\s*$'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
++ grep -v '^#'
+ sed '1{/^[[:space:]]*$/d;}'
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cinz7DzRIU

+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cinz7DzRIU
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 description Branch NAT egress

+ export 'nl=\n'
+ nl='\n'
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75
++ sed -e '1s|^\(-\)\{1,\}||'

+ source ./scripts/devops-resources.shell
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ alias pause=pause
+ export network_extract__console=logs/console/network-extract.console
++ alias print-line=print
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ IFS=,
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ extract =~ ^(export|r)$ ]]
+ local count=17
+ ((  count == 0  ))
+ [[ extract =~ ^(extract|x)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
+ local count=1
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ local count=2
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
++ which awk
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ true == true ]]
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --search=.cache/ips.list
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ [[ false == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ case "${target_file}" in
+ [[ platform =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ platform =~ ^(extract|x)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
+ local target_platform=cisco
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ [[ platform =~ ^(search|s)$ ]]
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ platform == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ local search_pattern=.cache/ips.list
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ search == \h\e\l\p ]]
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console
+++ date +%s%N
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+ set -euo pipefail
++ sed -e '1s|^\(-\)\{1,\}||'
+ export LC_ALL=C
+ LC_ALL=C
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--branch-isr-02.cfg.console
++ mktemp -d
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ export divisor=--MTc0ODgzMzgzMTQ4NzkzOTAwMAo--
++ divisor=--MTc0ODgzMzgzMTQ4NzkzOTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ 5 -lt 4 ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

+ [[ config =~ ^(config|c)$ ]]
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ result=0
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n {
+ [[ config =~ ^(extract|x)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ [[ config =~ ^(logger|l)$ ]]
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ [[ config =~ ^(platform|p)$ ]]

version 12.2
hostname campus-sw-access01

+ [[ config =~ ^(search|s)$ ]]
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ [[ config == \h\e\l\p ]]

+ [[ config == \d\e\b\u\g ]]
object-group network Floor-Networks
+ [[ config == \d\r\y\-\r\u\n ]]
 description End-user and service devices
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 192.168.0.1
+ for xitem in "${@}"
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ dirname -- ./scripts/network-extract.shell
+ alias serialize-object=serialize_objects
++ echo -e --verbose
+ result=0
+ print '{
  "vendor": "cisco",
+ exit 0
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5vjPVfOxkF ]]
}
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5vjPVfOxkF

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cm8Ko02Hbt
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cm8Ko02Hbt
+ alias parse-cisco=main
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ export 'nl=\n'
  "version": "12.2",
+ nl='\n'
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ source ./scripts/devops-resources.shell

version 12.2
hostname campus-sw-access01
+ [[ -z x ]]

interface Vlan1
+ export logs_location=logs
 ip address 192.168.0.1 255.255.255.0
++ [[ -n '' ]]
 description Switch Mgmt
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'

++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
object-group network Floor-Networks
+ mkdir -p logs/console
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ [[ 5 -lt 4 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

++ alias detect-vendor=detect_vendor
version 12.2
++ alias exit-error=exit_error
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ alias pause=pause
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias print-line=print
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ [[ verbose =~ ^(platform|p)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ export 'nl=\n'
+ [[ verbose == \d\e\b\u\g ]]
++ which awk
++ nl='\n'
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export logs_location=logs
++ logs_location=logs
+ local verbose=true
++ mkdir -p logs/console logs/jobs
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ newline 2
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ extract =~ ^(console|o)$ ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z .cache/ips.list ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ search_terms=()
+ [[ extract =~ ^(logger|l)$ ]]
+ declare -a search_terms
+ (( i++ ))
+ [[ -f .cache/ips.list ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ .cache/ips.list != *,* ]]
+ echo
+ mapfile -t search_terms
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ newline
+ network_extract__console=logs/console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ touch logs/console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
++ tr -d '\r'
++ echo -e --platform=fortinet
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console
++ which awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local first_search_entry=10.0.0.1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local last_search_entry=203.0.113.25
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
++ export targets_location=targets
+ local 'message=Search Pattern: [ .cache/ips.list ]'
++ targets_location=targets
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --search=.cache/ips.list
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ date +%s%N
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console
+++ base64
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+++ tr -dc a-zA-Z0-9
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ true == true ]]
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--campus-sw-access01.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ search =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ newline
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ [[ search =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ local search_pattern=.cache/ips.list
+ echo
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export divisor=--MTc0ODgzMzgzMTUwODQ4MjAwMAo--
++ divisor=--MTc0ODgzMzgzMTUwODQ4MjAwMAo--
+ [[ logger =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(extract|x)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
+ result=0
+ exit 0
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cDZlkUyr1P ]]
++ alias network-extract--helper=network_extract__helper
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cDZlkUyr1P
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
++ echo -e --verbose
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ mktemp -d
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ script_filename=network-extract.shell
+ [[ -z '' ]]
+ dry_run=false
+ script_filename=network-extract
+ [[ -z true ]]
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
+ export network_extract__console=logs/console/network-extract.console
+ [[ -z '' ]]
+ network_extract__console=logs/console/network-extract.console
+ export console_output=false
+ console_output=false
+ touch logs/console/network-extract.console
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
+ output_dir=.cache/resources/cisco
 host 203.0.113.25
+ [[ ! -d .cache/resources/cisco ]]
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ grep -v '^\s*$'
+ print '{
++ grep -v '^#'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PPkTqfd1KL
 description Guest NAT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PPkTqfd1KL

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10
+ export 'nl=\n'

+ nl='\n'
object-group network Watchtower-DMZ
 description Global secure relay
+ source ./scripts/devops-resources.shell
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.0.2.50'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -n {
  "vendor": "cisco",
++ [[ 5 -lt 4 ]]
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ dirname -- ./scripts/network-extract.shell
++ alias detect-vendor=detect_vendor
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
++ alias exit-error=exit_error

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
++ alias list-file=list_file
 description Guest NAT

+ [[ extract =~ ^(config|c)$ ]]
object network Sentinel-NAT
++ alias log-error=log_error
 host 203.0.113.25
 description Corporate NAT edge
+ [[ extract =~ ^(console|o)$ ]]

+ [[ 6 -eq 0 ]]
object-group network Sector-Wireless
++ alias log-info=log_info
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
 description Staff WiFi clients
+ [[ extract =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
 network-object host 192.168.100.100
 network-object host 10.10.10.10

+ [[ extract =~ ^(extract|x)$ ]]
object-group network Watchtower-DMZ
 description Global secure relay
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console --verbose
++ alias print-message=message
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
 network-object host 192.0.2.50 ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ alias print-newline=newline
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ oIFS=' 	
'
+ [[ extract == \h\e\l\p ]]
++ alias pause=pause
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ echo -en '{
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-line=print
  "vendor": "cisco",
+ IFS==
  "model": "ASA",
+ [[ extract == \v\e\r\b\o\s\e ]]
  "version": "9.12(4)",
+ read -r key value
+ for xitem in "${@}"
  "domain": "global.dmz.example.net",
++ alias print-file=print_file
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ IFS==
hostname dmz-fw2-backup
++ alias relative-configpath=relative_configpath
+ read -r key value
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
++ alias system-metrics=system_metrics
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
++ echo -e --search=.cache/ips.list
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
++ echo -e --platform=fortinet
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
++ which awk
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ export targets_location=targets
+ newline
++ targets_location=targets
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ printf '%*s' 12 ''
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'indent=            '
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ case "${target_file}" in
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--dmz-fw2-backup.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ newline
++ export divisor=--MTc0ODgzMzgzMTUzNjM0MDAwMAo--
+ output_dir=.cache/resources/fortinet
++ divisor=--MTc0ODgzMzgzMTUzNjM0MDAwMAo--
+ local count=1
+ (( i = 0 ))
+ [[ ! -d .cache/resources/fortinet ]]
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ echo
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
++ command -v -- ./scripts/network-extract.shell
+ alias serialize-object=serialize_objects
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ set -euo pipefail
+ exit 0
+ export LC_ALL=C
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sm9KKHOixO ]]
+ LC_ALL=C
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sm9KKHOixO
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ mktemp -d
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ script_filename=network-extract.shell
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ echo -e --platform=fortinet
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ which awk
++ grep -v '^\s*$'
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cWXb5EAmW6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cWXb5EAmW6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ platform =~ ^(export|r)$ ]]
++ alias log-error=log_error
+ [[ platform =~ ^(extract|x)$ ]]
++ alias log-info=log_info
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ print '{
++ alias log-warn=log_warn
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  "vendor": "cisco",
+ local target_platform=fortinet
  "model": "ASA",
  "version": "9.14(3)",
+ [[ platform =~ ^(search|s)$ ]]
  "domain": "edge.dc.example.com",
++ alias print-message=message
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console --verbose
  "hostname": "perimeter-fw1"
+ [[ platform == \h\e\l\p ]]
}

ASA Version 9.14(3)
+ [[ platform == \d\e\b\u\g ]]
++ alias print-newline=newline
hostname perimeter-fw1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
domain-name edge.dc.example.com

+ oIFS=' 	
+ sed '1{/^[[:space:]]*$/d;}'
'
+ for xitem in "${@}"
++ alias pause=pause
interface GigabitEthernet0/0
+ for xitem in "${@}"
+ IFS==
 nameif outside
++ alias print-line=print
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ IFS==
+ read -r key value
 description External Internet-facing Interface
+ read -r key value

++ alias print-file=print_file
interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
++ alias relative-configpath=relative_configpath

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
++ alias system-metrics=system_metrics
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ alias validate-address=validate_address
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
++ alias warning-message=warning
  "model": "ASA",
++ export LC_ALL=C
  "version": "9.14(3)",
++ LC_ALL=C
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ export 'nl=\n'
++ IFS=,

++ nl='\n'
+ message 'Search Pattern: [ .cache/ips.list ]'
++ export cache_location=.cache
ASA Version 9.14(3)
++ cache_location=.cache
hostname perimeter-fw1
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
++ export logs_location=logs
domain-name edge.dc.example.com
++ logs_location=logs

interface GigabitEthernet0/0
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local 'message=Search Pattern: [ .cache/ips.list ]'
++ mkdir -p logs/console logs/jobs
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway
+ local count=17

+ ((  count == 0  ))
object-group network Avengers-DMZ
 description Public access layer
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
 network-object 192.168.2.0 255.255.255.0

+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
object-group network Panther-Edge
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
++ echo -e --search=.cache/ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ newline
 network-object host 172.16.0.5
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'

+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
object network Magneto-Core
+ (( i < count ))
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ echo
+ (( i++ ))

+ (( i < count ))
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ local 'prompt_message=Enter configuration file to be parsed: '

interface GigabitEthernet0/1
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
 nameif inside
 security-level 100
+ [[ -z fortinet ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ [[ true == true ]]

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ newline

object-group network Panther-Edge
 description Internet-facing proxy systems
+ local count=1
+ (( i = 0 ))
 network-object host 203.0.113.25
+ (( i < count ))
 network-object host 172.16.0.5
+ echo

object network Magneto-Core
 host 172.16.0.5
+ (( i++ ))
 description WAN firewall entry point'
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
++ export actions_logfile=./logs/console/run.console
+ (( i = 0 ))
++ actions_logfile=./logs/console/run.console
+ (( i < count ))
++ touch ./logs/console/run.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --config=configs/misc/fw1.cfg
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ export targets_location=targets
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
++ targets_location=targets
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ export targets_logfile=logs/jobs/targets.jobs
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ targets_logfile=logs/jobs/targets.jobs
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ cfg == \c\f\g ]]
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+++ date +%s%N
+++ base64
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console ]]
++ echo -e --extract=.cache/resources/misc/fw1.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ export divisor=--MTc0ODgzMzgzMTU2MjM3MDAwMAo--
++ divisor=--MTc0ODgzMzgzMTU2MjM3MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ command -v -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ grep -v '^\s*$'
++ [[ 5 -lt 4 ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ grep -v '^#'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ dirname -- ./scripts/network-extract.shell
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ result=0
+ exit 0
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2qEqImkXd ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z2qEqImkXd
+ local 'extracted_configuration={
+ [[ extract =~ ^(search|s)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ extract == \h\e\l\p ]]
  "version": "v7.2.5.F",
+ [[ extract == \d\e\b\u\g ]]
  "domain": ""
+ [[ extract == \d\r\y\-\r\u\n ]]
  "hostname": "fg-branch-vpn-01"
+ [[ extract == \v\e\r\b\o\s\e ]]
}
+ for xitem in "${@}"

+ IFS==
#hostname="fg-branch-vpn-01"
+ read -r key value
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
+ local first_search_entry=10.0.0.1
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ local last_search_entry=203.0.113.25
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
+ [[ true == true ]]
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ message 'Search Pattern: [ .cache/ips.list ]'
  "version": "v7.2.5.F",
  "domain": ""
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
  "hostname": "fg-branch-vpn-01"
}
+ local 'message=Search Pattern: [ .cache/ips.list ]'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
+ set -euo pipefail
+ local count=17
  set ip 192.168.2.12 255.255.255.0
+ ((  count == 0  ))
+ export LC_ALL=C
  set alias "User LAN"
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ LC_ALL=C
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
 next
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
end

config firewall address
 edit "Branch-Gateway"
+ newline
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ local count=1
 next
+ (( i = 0 ))
 edit "Branch-Public"
+ (( i < count ))
  set subnet 198.51.100.75 255.255.255.255
+ local SCRIPT_DIR=./scripts
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
+ local script_filename=fortinet-configs.awk
  set subnet 10.0.0.1 255.255.255.255
+ local script_filepath=./scripts/extract/fortinet-configs.awk
  set comment "Main node at Stark Tower"
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
 next
+ echo
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ (( i++ ))
  set comment "QA node in Peter's Lab"
+ (( i < count ))
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ local 'prompt_message=Enter configuration file to be parsed: '
end ]]
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ (( i++ ))
+ (( i < count ))
++ mktemp -d
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
++ which awk
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
+ script_filename=network-extract.shell
end

+ script_filename=network-extract
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ export network_extract__console=logs/console/network-extract.console
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ network_extract__console=logs/console/network-extract.console
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
+ touch logs/console/network-extract.console
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.llumtX1pSF
+ newline 2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.llumtX1pSF
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ local count=2
+ source ./scripts/devops-resources.shell
+ (( i = 0 ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ (( i < count ))
+ declare -a execute
++ [[ -n '' ]]
+ echo
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i++ ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias detect-vendor=detect_vendor
+ [[ true == true ]]
++ alias exit-error=exit_error
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
++ alias list-file=list_file
+ newline
++ alias log-error=log_error
+ local count=1
+ (( i = 0 ))
++ alias log-info=log_info
+ (( i < count ))
+ echo
++ alias log-warn=log_warn
+ (( i++ ))
+ (( i < count ))
++ alias print-message=message
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console
++ alias print-file=print_file
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
++ alias relative-configpath=relative_configpath
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ output_dir=.cache/resources/fortinet
+ local search_pattern=.cache/ips.list
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console
++ export actions_logfile=./logs/console/run.console
+ [[ logger =~ ^(platform|p)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ logger =~ ^(search|s)$ ]]
++ touch ./logs/console/run.console
+ newline
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console
+ local 'indent=            '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
++ echo -e --config=configs/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local script_filename=fortinet-configs.awk
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+++ date +%s%N
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+++ base64
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ which awk
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+++ tr -dc a-zA-Z0-9
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local 'extracted_configuration={
+ result=0
  "vendor": "fortinet",
+ exit 0
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XLSCLEwnvk ]]
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XLSCLEwnvk

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
++ export divisor=--MTc0ODgzMzgzMTU5MjA4NjAwMAo--
  set subnet 192.168.1.11 255.255.255.255
++ divisor=--MTc0ODgzMzgzMTU5MjA4NjAwMAo--
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ source ./scripts/devops-helpers.shell
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ IFS=,
++ [[ 5 -lt 4 ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(config|c)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ [[ extract =~ ^(console|o)$ ]]
+ declare -a execute
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ alias serialize-object=serialize_objects
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
+ set -euo pipefail
end
+ export LC_ALL=C

+ LC_ALL=C
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
++ which awk
 next
+ sed '1{/^[[:space:]]*$/d;}'
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ local first_search_entry=10.0.0.1
}
+ local last_search_entry=203.0.113.25

#hostname="fg-campus-core"
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
#model="FortiGate-200F"

config system interface
+ [[ true == true ]]
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
++ mktemp -d
+ alias parse-cisco=main
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
+ message 'Search Pattern: [ .cache/ips.list ]'
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ -z x ]]
  set comment "Vision’s quantum channel"
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ export logs_location=logs
 next
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ logs_location=logs
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ mkdir -p logs/console
  set comment "Remote sniper node"
+ local count=17
+ ((  count == 0  ))
 next
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 edit "Wanda-Field"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
  set subnet 192.168.100.100 255.255.255.255
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  set comment "Wanda’s chaos relay"
 next
end ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ echo
 next
+ (( i++ ))
 edit "wifi"
+ (( i < count ))
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
++ echo -e --platform=cisco
 edit "Titan-WLAN-Host"
+ local 'prompt_message=Enter configuration file to be parsed: '
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ [[ -z configs/misc/fw1.cfg ]]
end

+ [[ -z cisco ]]
config firewall address
 edit "Cap-HQ"
+ [[ true == true ]]
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
++ sed -e '1s|^\(-\)\{1,\}||'
  set comment "Remote sniper node"
+ newline
 next
 edit "Wanda-Field"
+ local count=1
  set subnet 192.168.100.100 255.255.255.255
+ (( i = 0 ))
  set comment "Wanda’s chaos relay"
+ (( i < count ))
 next
+ echo
end'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ script_filename=network-extract.shell
+ (( i < count ))
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ true == true ]]
+ touch logs/console/network-extract.console
++ printf '%*s' 12 ''
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1a1aeRZDEa
+ local 'indent=            '
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1a1aeRZDEa
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ export 'nl=\n'
+ nl='\n'
+ (( i++ ))
+ (( i < count ))
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
++ [[ -n '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ echo
+ local target_platform=cisco
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ [[ 5 -lt 4 ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ platform == \d\e\b\u\g ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ IFS==
++ alias exit-error=exit_error
+ read -r key value
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ alias list-file=list_file
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ alias log-error=log_error
+ message '                configs/fortinet/fg-testing-config.cfg'
++ alias log-info=log_info
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
++ alias log-warn=log_warn
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
++ alias print-message=message
+ newline
++ alias print-newline=newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias pause=pause
+ (( i++ ))
+ (( i < count ))
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
+ print '{
  "vendor": "fortinet",
++ targets_location=targets
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
++ export targets_logfile=logs/jobs/targets.jobs
}
++ targets_logfile=logs/jobs/targets.jobs

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
++ command -v -- ./scripts/network-extract.shell
  set logtraffic all
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ sed '1{/^[[:space:]]*$/d;}'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ true == true ]]
config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ echo -en '{
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console ]]
  "vendor": "fortinet",
+ [[ search =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console
  "model": "FortiGate-60F",
+ [[ search =~ ^(export|r)$ ]]
  "version": "v7.2.5.F",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console ]]
  "domain": ""
+ [[ search =~ ^(extract|x)$ ]]
  "hostname": "fg-branch-vpn-01"
}

+ case "${target_file}" in
+ [[ search =~ ^(logger|l)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(platform|p)$ ]]
config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
  set dstintf "wan1"
+ read -r key value
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
++ dirname -- ./scripts/network-extract.shell
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ newline 2
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i = 0 ))
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cinz7DzRIU ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cinz7DzRIU
++ export divisor=--MTc0ODgzMzgzMTYxNTcxMzAwMAo--
++ divisor=--MTc0ODgzMzgzMTYxNTcxMzAwMAo--
+ source ./scripts/devops-helpers.shell
++ tr -d '\r'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ which awk
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ grep -v '^#'
+ [[ config =~ ^(logger|l)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fg-testing-config.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ local 'indent=            '
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ platform =~ ^(config|c)$ ]]
+ result=0
+ [[ cfg == \c\f\g ]]
+ exit 0
+ [[ platform =~ ^(console|o)$ ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cm8Ko02Hbt ]]
+ extract_location=.cache/resources/misc/fw3.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cm8Ko02Hbt
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=configs/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

+ local SCRIPT_PATH=./scripts/network-extract.shell
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
++ sed -e '1s|^\(-\)\{1,\}||'

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ logger =~ ^(config|c)$ ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
+ [[ logger =~ ^(console|o)$ ]]
 host 10.0.2.3
+ [[ logger =~ ^(export|r)$ ]]
 description Internal mail & identity services
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]

object network Krypton-Gateway
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console
 host 203.0.113.25
 description Secure NAT boundary for cloud access
+ [[ logger =~ ^(platform|p)$ ]]

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=.cache/resources/misc/switch3.conf
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ tr -d '\r'
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ grep -v '^\s*$'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
++ grep -v '^#'
+ declare -a execute
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console
++ echo -e --platform=cisco
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local count=1
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ local target_platform=cisco
+ local count=1
+ [[ platform =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ echo
+ [[ platform == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ IFS==
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ read -r key value
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console
+ ls -al --color=auto configs/misc/switch1.conf
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
++ printf '%*s' 12 ''
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw1.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PPkTqfd1KL ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PPkTqfd1KL
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ echo -e --verbose
++ dirname .cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
+ output_dir=.cache/resources/misc
 description Shield-controlled wireless network
+ [[ ! -d .cache/resources/misc ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ [[ verbose =~ ^(config|c)$ ]]
 host 10.10.10.10
 description Guest NAT'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
+ newline 2
++ grep -v '^\s*$'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--fw3.cfg.console
++ which awk
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cWXb5EAmW6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cWXb5EAmW6
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ output_dir=.cache/resources/misc
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ ! -d .cache/resources/misc ]]
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute
+ newline 2
++ which awk
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ false == true ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ false == true ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console
+ message '                configs/misc/switch3.conf'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console ]]
+ [[ -n                 configs/misc/switch3.conf ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console
+ local 'message=                configs/misc/switch3.conf'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console ]]
+ echo -e '                configs/misc/switch3.conf'
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch1.conf.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.llumtX1pSF ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.llumtX1pSF
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWzfaH0xSw/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1a1aeRZDEa ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1a1aeRZDEa
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WamlaRE9yS
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WamlaRE9yS
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.59JgmjRbOV
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.59JgmjRbOV
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+++ base64
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.usmRXYyA4b
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.usmRXYyA4b
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias list-file=list_file
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-warn=log_warn
++ alias print-message=message
+++ tr -dc a-zA-Z0-9
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias list-file=list_file
++ alias relative-configpath=relative_configpath
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias system-metrics=system_metrics
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias validate-address=validate_address
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
++ export 'nl=\n'
+ LC_ALL=C
++ nl='\n'
++ alias validate-address=validate_address
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias warning-message=warning
++ mkdir -p logs/console logs/jobs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
++ export divisor=--MTc0ODgzMzgzMjU4MDUyMjAwMAo--
++ divisor=--MTc0ODgzMzgzMjU4MDUyMjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Vl2XO4PWH
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Vl2XO4PWH
+ set -euo pipefail
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export LC_ALL=C
+ LC_ALL=C
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ mktemp -d
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ export targets_location=targets
+ touch logs/console/network-extract.console
++ targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ date +%s%N
+++ base64
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WyzfDaZAOI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WyzfDaZAOI
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+++ tr -dc a-zA-Z0-9
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h8kaaqeLTx
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h8kaaqeLTx
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias list-file=list_file
++ alias log-error=log_error
++ export actions_logfile=./logs/console/run.console
++ alias log-info=log_info
++ actions_logfile=./logs/console/run.console
++ alias log-warn=log_warn
++ touch ./logs/console/run.console
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ set -euo pipefail
++ alias print-line=print
+ export LC_ALL=C
+ LC_ALL=C
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias system-metrics=system_metrics
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias validate-address=validate_address
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ 7 -eq 0 ]]
++ alias log-warn=log_warn
++ alias warning-message=warning
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.isho06rvbk/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias print-message=message
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias print-newline=newline
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ oIFS=' 	
'
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export divisor=--MTc0ODgzMzgzMjYwMzU0MTAwMAo--
++ divisor=--MTc0ODgzMzgzMjYwMzU0MTAwMAo--
+ set -euo pipefail
+ source ./scripts/devops-helpers.shell
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--MTc0ODgzMzgzMjYwMzg2OTAwMAo--
++ divisor=--MTc0ODgzMzgzMjYwMzg2OTAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ set -euo pipefail
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QoBFql0jC5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QoBFql0jC5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ set -euo pipefail
++ [[ 5 -lt 4 ]]
+ export LC_ALL=C
+ alias parse-cisco=main
+ LC_ALL=C
++ alias detect-vendor=detect_vendor
+ alias parse-cisco=main
++ alias exit-error=exit_error
+ [[ -z x ]]
+ export logs_location=logs
+ [[ -z x ]]
+ logs_location=logs
+ export logs_location=logs
+ mkdir -p logs/console
++ alias list-file=list_file
+ logs_location=logs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias log-error=log_error
++ touch ./logs/console/run.console
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ mkdir -p logs/console
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ set -euo pipefail
++ alias system-metrics=system_metrics
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
+++ date +%s%N
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AxBRzVVJsO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AxBRzVVJsO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ base64
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+++ tr -dc a-zA-Z0-9
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ IFS==
+ network_extract__console=logs/console/network-extract.console
+ read -r key value
+ touch logs/console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2mWHATqqWl
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hgajdx5jDR
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2mWHATqqWl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hgajdx5jDR
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TIit0b1mCe
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TIit0b1mCe
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RLmD0bF9nm
++ [[ -n '' ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RLmD0bF9nm
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ export 'nl=\n'
+ nl='\n'
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ alias exit-error=exit_error
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
++ alias log-error=log_error
++ alias detect-vendor=detect_vendor
++ alias log-info=log_info
++ alias list-file=list_file
++ alias exit-error=exit_error
++ alias log-warn=log_warn
++ alias list-file=list_file
++ alias log-error=log_error
++ alias print-message=message
++ alias log-info=log_info
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias print-message=message
++ alias list-file=list_file
++ alias pause=pause
++ alias print-newline=newline
++ alias print-line=print
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias print-file=print_file
++ alias pause=pause
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias relative-configpath=relative_configpath
++ alias print-message=message
++ alias print-message=message
++ alias print-line=print
++ alias print-newline=newline
++ alias print-newline=newline
++ alias print-file=print_file
++ export targets_location=targets
++ alias pause=pause
++ alias system-metrics=system_metrics
++ alias pause=pause
++ targets_location=targets
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-line=print
++ export divisor=--MTc0ODgzMzgzMjYxODY4MTAwMAo--
++ export targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
++ targets_logfile=logs/jobs/targets.jobs
++ alias print-file=print_file
++ divisor=--MTc0ODgzMzgzMjYxODY4MTAwMAo--
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ alias system-metrics=system_metrics
++ export LC_ALL=C
++ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ [[ -n '' ]]
++ export LC_ALL=C
++ alias warning-message=warning
++ LC_ALL=C
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export 'nl=\n'
+++ base64
++ nl='\n'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ logs_location=logs
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ __DEVOPS_HELPERS_SOURCED=1
++ mkdir -p logs/console logs/jobs
++ alias warning-message=warning
++ export 'nl=\n'
++ export LC_ALL=C
++ nl='\n'
++ [[ 5 -lt 4 ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias parse-listings--helper=parse_listings__helper
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.vjinzeqdtw/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export targets_location=targets
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console --export --verbose
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.f77r476gxn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ alias parse-cisco=main
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export divisor=--MTc0ODgzMzgzMjYyNzA4NTAwMAo--
++ divisor=--MTc0ODgzMzgzMjYyNzA4NTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ date +%s%N
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias parse-listings--helper=parse_listings__helper
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list
++ touch ./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias network-extract--helper=network_extract__helper
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODgzMzgzMjYzMTU4ODAwMAo--
++ divisor=--MTc0ODgzMzgzMjYzMTU4ODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
+++ base64
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ alias network-configs--helper=network_configs__helper
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export divisor=--MTc0ODgzMzgzMjYzNjE1MTAwMAo--
++ divisor=--MTc0ODgzMzgzMjYzNjE1MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ alias parse-listings--helper=parse_listings__helper
+ alias parse-cisco=main
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
+ [[ -z x ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ export logs_location=logs
++ alias network-configs--helper=network_configs__helper
+ logs_location=logs
++ targets_location=targets
++ targets_logfile=logs/jobs/targets.jobs
+ mkdir -p logs/console
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_logfile=logs/jobs/targets.jobs
+ IFS==
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ export divisor=--MTc0ODgzMzgzMjYzOTM0NjAwMAo--
++ divisor=--MTc0ODgzMzgzMjYzOTM0NjAwMAo--
+ [[ -z x ]]
+ export logs_location=logs
+ source ./scripts/devops-helpers.shell
+ logs_location=logs
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ mkdir -p logs/console
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+ touch logs/console/network-extract.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jzt0lefvch/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console --export --verbose
++ alias network-configs--helper=network_configs__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+++ date +%s%N
+++ date +%s%N
+++ date +%s%N
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+++ date +%s%N
+ mkdir -p logs/console
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+++ base64
+++ base64
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3ghiaqfmqe/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ export network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(export|r)$ ]]
+ touch logs/console/network-extract.console
++ export divisor=--MTc0ODgzMzgzMjY0OTcyODAwMAo--
+ [[ config =~ ^(extract|x)$ ]]
++ divisor=--MTc0ODgzMzgzMjY0OTcyODAwMAo--
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODgzMzgzMjY0OTg1OTAwMAo--
++ divisor=--MTc0ODgzMzgzMjY0OTg1OTAwMAo--
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export divisor=--MTc0ODgzMzgzMjY1MDIxMjAwMAo--
++ __DEVOPS_HELPERS_SOURCED=1
++ divisor=--MTc0ODgzMzgzMjY1MDIxMjAwMAo--
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ [[ config =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(search|s)$ ]]
++ export divisor=--MTc0ODgzMzgzMjY1MDQ1NDAwMAo--
++ divisor=--MTc0ODgzMzgzMjY1MDQ1NDAwMAo--
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias parse-listings--helper=parse_listings__helper
+ for xitem in "${@}"
++ [[ -n '' ]]
++ alias network-extract--helper=network_extract__helper
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ alias serialize-object=serialize_objects
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-configs--helper=network_configs__helper
+ alias serialize-object=serialize_objects
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ alias serialize-object=serialize_objects
+ mkdir -p logs/console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list
+ alias parse-cisco=main
+ alias parse-cisco=main
++ mktemp -d
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ -z x ]]
+ mkdir -p logs/console
+ export logs_location=logs
+ logs_location=logs
+ alias parse-cisco=main
+ mkdir -p logs/console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --platform=fortinet
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.isho06rvbk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fwybc1hblo/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console --export --verbose
+ set -euo pipefail
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ export LC_ALL=C
+ LC_ALL=C
+ oIFS=' 	
'
+ for xitem in "${@}"
+ oIFS=' 	
'
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.h4tl9gucsw/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ [[ search =~ ^(console|o)$ ]]
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ [[ search =~ ^(export|r)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ script_filename=network-extract
+ script_filename=network-extract
+ script_filename=network-extract.shell
+ [[ search =~ ^(extract|x)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JIDSxzcjQ9
+ export network_extract__console=logs/console/network-extract.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JIDSxzcjQ9
+ script_filename=network-extract
+ [[ search =~ ^(logger|l)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ search =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ export network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list
+ [[ platform =~ ^(console|o)$ ]]
+ touch logs/console/network-extract.console
+ export 'nl=\n'
+ [[ extract =~ ^(console|o)$ ]]
+ touch logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ touch logs/console/network-extract.console
+ [[ search == \h\e\l\p ]]
+ nl='\n'
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ search == \d\e\b\u\g ]]
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ IFS==
+ local target_platform=fortinet
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ IFS==
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
++ alias list-file=list_file
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ extract == \h\e\l\p ]]
++ alias log-warn=log_warn
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hjsTXcnnif
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hjsTXcnnif
++ alias system-metrics=system_metrics
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias warning-message=warning
++ export LC_ALL=C
++ [[ 5 -lt 4 ]]
++ LC_ALL=C
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias print-line=print
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias print-file=print_file
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ echo -e --platform=cisco
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(search|s)$ ]]
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ alias validate-address=validate_address
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
++ export 'nl=\n'
+ [[ config =~ ^(console|o)$ ]]
++ nl='\n'
++ export cache_location=.cache
+ [[ config =~ ^(export|r)$ ]]
++ cache_location=.cache
++ export logs_location=logs
+ [[ config =~ ^(extract|x)$ ]]
++ logs_location=logs
+ [[ config =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(platform|p)$ ]]
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hbgd6nrjoc/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console --export --verbose
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3qmzvlfya4/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5qk40hjmye/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ oIFS=' 	
+ IFS==
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console --export --verbose
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.f77r476gxn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ config =~ ^(config|c)$ ]]
++ touch ./logs/console/run.console
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ platform =~ ^(export|r)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ touch ./logs/console/run.console
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ targets_location=targets
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ search == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(search|s)$ ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kjEFK0j7aY
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kjEFK0j7aY
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --platform=cisco
++ mktemp -d
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
+ [[ extract =~ ^(config|c)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ [[ extract =~ ^(console|o)$ ]]
++ cache_location=.cache
++ export logs_location=logs
+ [[ extract =~ ^(export|r)$ ]]
++ logs_location=logs
+ [[ extract =~ ^(extract|x)$ ]]
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ set -euo pipefail
+ [[ extract =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ [[ extract =~ ^(platform|p)$ ]]
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
+++ date +%s%N
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(config|c)$ ]]
+++ base64
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console
+ read -r key value
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+++ base64
+ [[ extract =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3WTL877gC8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3WTL877gC8
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mktemp -d
++ echo -e --platform=cisco
+ [[ extract =~ ^(config|c)$ ]]
++ alias list-file=list_file
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b9eayIin5l
++ export actions_logfile=./logs/console/run.console
+ [[ extract =~ ^(platform|p)$ ]]
++ actions_logfile=./logs/console/run.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b9eayIin5l
++ touch ./logs/console/run.console
++ echo -e --platform=cisco
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias log-error=log_error
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ export 'nl=\n'
+ [[ config =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
++ alias log-warn=log_warn
+ read -r key value
+ nl='\n'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
++ alias print-newline=newline
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias pause=pause
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ local target_platform=cisco
++ alias print-line=print
+ [[ logger == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
++ alias detect-vendor=detect_vendor
++ alias print-file=print_file
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias exit-error=exit_error
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export divisor=--MTc0ODgzMzgzMjY5NjYzNDAwMAo--
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
++ divisor=--MTc0ODgzMzgzMjY5NjYzNDAwMAo--
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
++ alias list-file=list_file
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias system-metrics=system_metrics
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ IFS==
++ alias log-error=log_error
+ read -r key value
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ [[ config =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(search|s)$ ]]
++ alias validate-address=validate_address
+ [[ config == \h\e\l\p ]]
++ alias print-message=message
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
++ alias warning-message=warning
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export LC_ALL=C
++ export divisor=--MTc0ODgzMzgzMjY5NzA4NjAwMAo--
++ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ divisor=--MTc0ODgzMzgzMjY5NzA4NjAwMAo--
++ echo -e --platform=cisco
++ export 'nl=\n'
++ alias pause=pause
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
++ nl='\n'
++ export cache_location=.cache
+ [[ logger =~ ^(config|c)$ ]]
++ cache_location=.cache
+ IFS==
++ alias print-line=print
++ export logs_location=logs
+ [[ logger =~ ^(console|o)$ ]]
++ logs_location=logs
+ read -r key value
++ [[ -n '' ]]
+ [[ config =~ ^(export|r)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ logger =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias print-file=print_file
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(logger|l)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console
++ alias network-extract--helper=network_extract__helper
+ [[ config == \h\e\l\p ]]
++ alias system-metrics=system_metrics
++ alias parse-listings--helper=parse_listings__helper
+ alias serialize-object=serialize_objects
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(search|s)$ ]]
++ alias validate-address=validate_address
+ [[ logger == \h\e\l\p ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ alias parse-cisco=main
+ alias serialize-object=serialize_objects
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --verbose
++ echo -e --platform=cisco
+ [[ platform =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nwTPMquBwA
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nwTPMquBwA
+ [[ platform =~ ^(extract|x)$ ]]
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ targets_location=targets
+ [[ platform =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ local target_platform=cisco
++ export targets_logfile=logs/jobs/targets.jobs
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ targets_logfile=logs/jobs/targets.jobs
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ echo -e --export
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ -z x ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ platform == \v\e\r\b\o\s\e ]]
+ logs_location=logs
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ mkdir -p logs/console
+ IFS==
++ alias exit-error=exit_error
+ read -r key value
+ read -r key value
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ mktemp -d
++ alias print-newline=newline
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias validate-address=validate_address
+ for xitem in "${@}"
++ alias warning-message=warning
++ export LC_ALL=C
+ IFS==
+ read -r key value
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ export actions_logfile=./logs/console/run.console
++ cache_location=.cache
++ actions_logfile=./logs/console/run.console
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch ./logs/console/run.console
+++ date +%s%N
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console
+++ base64
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ platform =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ [[ platform =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=logs/console/network-extract.console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ read -r key value
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
+ IFS==
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jWjb5TYGBt
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jWjb5TYGBt
+ [[ extract =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ script_filename=network-extract
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ nl='\n'
+ [[ extract =~ ^(extract|x)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ source ./scripts/devops-resources.shell
+ network_extract__console=logs/console/network-extract.console
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ touch logs/console/network-extract.console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ extract =~ ^(logger|l)$ ]]
++ alias list-file=list_file
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias log-error=log_error
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ logger =~ ^(logger|l)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ extract =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console
++ touch ./logs/console/run.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias log-info=log_info
++ export divisor=--MTc0ODgzMzgzMjcxMzM5NDAwMAo--
++ alias log-warn=log_warn
++ divisor=--MTc0ODgzMzgzMjcxMzM5NDAwMAo--
+ [[ extract == \h\e\l\p ]]
++ alias print-message=message
+ source ./scripts/devops-helpers.shell
+ [[ extract == \d\e\b\u\g ]]
++ alias print-newline=newline
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias pause=pause
+ for xitem in "${@}"
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
++ alias print-line=print
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console
++ [[ 5 -lt 4 ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-file=print_file
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias system-metrics=system_metrics
++ export targets_location=targets
+ IFS==
++ targets_location=targets
+ read -r key value
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ export =~ ^(config|c)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
++ alias network-configs--helper=network_configs__helper
++ echo -e --platform=cisco
++ echo -e --export
++ alias network-extract--helper=network_extract__helper
++ alias validate-address=validate_address
++ alias warning-message=warning
+ [[ export =~ ^(console|o)$ ]]
++ export LC_ALL=C
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ LC_ALL=C
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ alias serialize-object=serialize_objects
++ export 'nl=\n'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local export_objects=true
++ echo -e --platform=cisco
++ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ export cache_location=.cache
+ [[ verbose == \d\e\b\u\g ]]
++ cache_location=.cache
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export logs_location=logs
+ local verbose=true
+ [[ 7 -eq 0 ]]
++ logs_location=logs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.boca638g20/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console --export --verbose
+ IFS=' 	
+ read -r key value
'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
+ debug=false
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ oIFS=' 	
++ export targets_location=targets
+ [[ logger =~ ^(logger|l)$ ]]
++ targets_location=targets
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console
++ export targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
'
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --platform=fortinet
+ IFS==
+ alias parse-cisco=main
+ export console_output=false
+ for xitem in "${@}"
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ console_output=false
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ export logs_location=logs
+ IFS==
+ logs_location=logs
+ read -r key value
+ for xitem in "${@}"
+ [[ -z true ]]
+ mkdir -p logs/console
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ read -r key value
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+++ date +%s%N
+++ base64
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ targets_location=targets
++ export divisor=--MTc0ODgzMzgzMjcyNjU1MDAwMAo--
++ divisor=--MTc0ODgzMzgzMjcyNjU1MDAwMAo--
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--MTc0ODgzMzgzMjcyODQ1MjAwMAo--
++ divisor=--MTc0ODgzMzgzMjcyODQ1MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ echo -e --export
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+++ base64
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export targets_location=targets
++ targets_location=targets
+ alias parse-cisco=main
++ export targets_logfile=logs/jobs/targets.jobs
+++ tr -dc a-zA-Z0-9
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3ghiaqfmqe/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console --export --verbose
++ export divisor=--MTc0ODgzMzgzMjczOTE5NDAwMAo--
++ divisor=--MTc0ODgzMzgzMjczOTE5NDAwMAo--
+ source ./scripts/devops-helpers.shell
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+ script_filename=network-extract.shell
++ [[ -n '' ]]
+ script_filename=network-extract
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ export network_extract__console=logs/console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+++ tr -dc a-zA-Z0-9
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ set -euo pipefail
+ script_filename=network-extract.shell
+ export LC_ALL=C
+ script_filename=network-extract
+ LC_ALL=C
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
++ mktemp -d
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODgzMzgzMjc0NjgxODAwMAo--
++ divisor=--MTc0ODgzMzgzMjc0NjgxODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ 7 -eq 0 ]]
++ grep -v '^\s*$'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jzt0lefvch/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console --export --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1ycnznvxfo/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mXjq6OhxAZ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mXjq6OhxAZ
++ alias network-extract--helper=network_extract__helper
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ set -euo pipefail
+ export LC_ALL=C
++ [[ -n '' ]]
+ LC_ALL=C
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ oIFS=' 	
'
+ alias serialize-object=serialize_objects
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ grep -v '^#'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ [[ search =~ ^(console|o)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ IFS==
+ [[ search =~ ^(export|r)$ ]]
+ read -r key value
+ touch logs/console/network-extract.console
+ [[ search =~ ^(extract|x)$ ]]
++ alias list-file=list_file
++ mktemp -d
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias log-error=log_error
+ [[ search =~ ^(search|s)$ ]]
++ alias log-info=log_info
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias log-warn=log_warn
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias print-message=message
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-newline=newline
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -z x ]]
++ export 'nl=\n'
++ nl='\n'
++ mktemp -d
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ search == \d\e\b\u\g ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.vjinzeqdtw/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console --export --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MdxkPtpvcq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MdxkPtpvcq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ 7 -eq 0 ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0wgof60vhf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ source ./scripts/devops-resources.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console --export --verbose
++ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sW9j3gykso
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sW9j3gykso
++ [[ 5 -lt 4 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ alias detect-vendor=detect_vendor
+ nl='\n'
+ oIFS=' 	
+ source ./scripts/devops-resources.shell
'
++ alias exit-error=exit_error
+ for xitem in "${@}"
+ IFS==
++ [[ -n '' ]]
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
++ alias log-error=log_error
++ alias detect-vendor=detect_vendor
++ alias log-info=log_info
++ alias exit-error=exit_error
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias list-file=list_file
++ alias pause=pause
++ alias log-error=log_error
++ alias print-line=print
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-file=print_file
++ alias print-message=message
++ alias print-newline=newline
++ alias relative-configpath=relative_configpath
++ alias pause=pause
++ alias print-line=print
++ alias system-metrics=system_metrics
++ alias print-file=print_file
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(config|c)$ ]]
++ mktemp -d
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
+ script_filename=network-extract.shell
'
+ [[ config =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ [[ search =~ ^(config|c)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ export targets_location=targets
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ touch logs/console/network-extract.console
+ [[ config =~ ^(platform|p)$ ]]
++ targets_location=targets
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(search|s)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ date +%s%N
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oX73O1ErXd
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oX73O1ErXd
+++ base64
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ mktemp -d
++ mktemp -d
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ [[ -n '' ]]
++ targets_location=targets
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export targets_location=targets
++ targets_location=targets
++ alias list-file=list_file
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export divisor=--MTc0ODgzMzgzMjc3OTg2ODAwMAo--
++ divisor=--MTc0ODgzMzgzMjc3OTg2ODAwMAo--
++ alias validate-address=validate_address
+ source ./scripts/devops-helpers.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ [[ -n '' ]]
++ LC_ALL=C
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+ set -euo pipefail
++ alias parse-listings--helper=parse_listings__helper
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-configs--helper=network_configs__helper
+++ date +%s%N
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1g7X3c1sZ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1g7X3c1sZ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ 7 -eq 0 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AmZW4nracm
+ export 'nl=\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AmZW4nracm
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fwybc1hblo/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias network-extract--helper=network_extract__helper
+ nl='\n'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+++ date +%s%N
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ alias serialize-object=serialize_objects
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+++ base64
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ mktemp -d
++ alias relative-configpath=relative_configpath
+ alias parse-cisco=main
++ alias detect-vendor=detect_vendor
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ config =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
++ alias exit-error=exit_error
++ alias warning-message=warning
++ export LC_ALL=C
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(console|o)$ ]]
++ LC_ALL=C
+ [[ config =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ alias list-file=list_file
++ nl='\n'
++ alias log-error=log_error
+++ tr -dc a-zA-Z0-9
++ alias log-info=log_info
++ export cache_location=.cache
++ cache_location=.cache
++ alias log-warn=log_warn
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ tr -dc a-zA-Z0-9
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias print-message=message
++ alias print-newline=newline
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias pause=pause
++ touch ./logs/console/run.console
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bqxjwrbzXM
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bqxjwrbzXM
++ export divisor=--MTc0ODgzMzgzMjc5MDE4NjAwMAo--
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ divisor=--MTc0ODgzMzgzMjc5MDE4NjAwMAo--
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console --export --verbose
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(export|r)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ script_filename=network-extract.shell
++ [[ -n '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ script_filename=network-extract
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ export network_extract__console=logs/console/network-extract.console
+ oIFS=' 	
+ [[ config =~ ^(export|r)$ ]]
++ export divisor=--MTc0ODgzMzgzMjc5MDQ0NjAwMAo--
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
++ divisor=--MTc0ODgzMzgzMjc5MDQ0NjAwMAo--
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-helpers.shell
+ touch logs/console/network-extract.console
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias exit-error=exit_error
+ [[ config == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias list-file=list_file
++ alias parse-listings--helper=parse_listings__helper
'
++ alias log-error=log_error
++ export actions_logfile=./logs/console/run.console
++ alias log-info=log_info
++ actions_logfile=./logs/console/run.console
++ alias parse-listings--helper=parse_listings__helper
++ alias log-warn=log_warn
++ touch ./logs/console/run.console
++ alias print-message=message
++ alias print-newline=newline
+ [[ config =~ ^(config|c)$ ]]
++ alias pause=pause
++ alias network-configs--helper=network_configs__helper
++ alias print-line=print
++ alias network-configs--helper=network_configs__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ alias print-file=print_file
+ [[ search == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ set -euo pipefail
++ alias relative-configpath=relative_configpath
+ IFS==
+ export LC_ALL=C
+ [[ config =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
+ LC_ALL=C
+ set -euo pipefail
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias system-metrics=system_metrics
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export LC_ALL=C
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
++ LC_ALL=C
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
++ export 'nl=\n'
+ [[ extract == \d\e\b\u\g ]]
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
+ alias parse-cisco=main
+ set -euo pipefail
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ export LC_ALL=C
+ LC_ALL=C
+ export logs_location=logs
+ [[ -z x ]]
+ logs_location=logs
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ mkdir -p logs/console
++ mktemp -d
++ mktemp -d
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
++ targets_location=targets
+ IFS==
+ [[ config == \d\e\b\u\g ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ read -r key value
++ export actions_logfile=./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G4vCOZFBMh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G4vCOZFBMh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ actions_logfile=./logs/console/run.console
+ export 'nl=\n'
+ nl='\n'
+ [[ 7 -eq 0 ]]
+ source ./scripts/devops-resources.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fkfelvadn0/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ -n '' ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console --export --verbose
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ read -r key value
++ alias exit-error=exit_error
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias list-file=list_file
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ touch ./logs/console/run.console
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+++ date +%s%N
++ touch ./logs/console/run.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ config == \d\r\y\-\r\u\n ]]
++ LC_ALL=C
+ [[ config == \v\e\r\b\o\s\e ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ IFS==
+ read -r key value
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ mktemp -d
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IA7FcjplFz
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IA7FcjplFz
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BXdlaHvnMR
+ script_filename=network-extract.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BXdlaHvnMR
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DMY22YsO8
+ script_filename=network-extract
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DMY22YsO8
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export network_extract__console=logs/console/network-extract.console
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ network_extract__console=logs/console/network-extract.console
+ export 'nl=\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list
+ nl='\n'
+++ date +%s%N
+ touch logs/console/network-extract.console
+ nl='\n'
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+++ tr -dc a-zA-Z0-9
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias print-message=message
++ alias log-info=log_info
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias list-file=list_file
++ alias pause=pause
++ alias log-error=log_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
+++ base64
++ alias log-info=log_info
+ set -euo pipefail
++ echo -e --platform=cisco
++ alias print-file=print_file
++ alias print-message=message
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ export LC_ALL=C
++ alias log-warn=log_warn
+ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ alias print-message=message
++ alias print-newline=newline
++ alias system-metrics=system_metrics
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-file=print_file
++ alias print-line=print
++ alias validate-address=validate_address
++ alias relative-configpath=relative_configpath
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias print-file=print_file
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export targets_location=targets
++ export LC_ALL=C
++ targets_location=targets
++ LC_ALL=C
++ alias warning-message=warning
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export LC_ALL=C
++ export 'nl=\n'
++ LC_ALL=C
++ nl='\n'
++ mktemp -d
++ export cache_location=.cache
++ cache_location=.cache
++ export 'nl=\n'
++ export logs_location=logs
++ logs_location=logs
++ nl='\n'
++ mkdir -p logs/console logs/jobs
++ export cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
++ cache_location=.cache
++ export actions_logfile=./logs/console/run.console
++ export logs_location=logs
++ actions_logfile=./logs/console/run.console
++ logs_location=logs
++ touch ./logs/console/run.console
++ mkdir -p logs/console logs/jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5qk40hjmye/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BPFCZVfzOq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BPFCZVfzOq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export divisor=--MTc0ODgzMzgzMjgwNzYwMjAwMAo--
++ divisor=--MTc0ODgzMzgzMjgwNzYwMjAwMAo--
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-helpers.shell
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias list-file=list_file
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias log-error=log_error
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias network-extract--helper=network_extract__helper
++ export divisor=--MTc0ODgzMzgzMjgwOTkxNzAwMAo--
+++ date +%s%N
++ divisor=--MTc0ODgzMzgzMjgwOTkxNzAwMAo--
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.h4tl9gucsw/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ source ./scripts/devops-helpers.shell
++ alias pause=pause
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console --export --verbose
+ alias serialize-object=serialize_objects
++ [[ -n '' ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(search|s)$ ]]
+++ date +%s%N
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+++ base64
++ alias network-extract--helper=network_extract__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+++ tr -dc a-zA-Z0-9
+ logs_location=logs
++ export targets_location=targets
+ mkdir -p logs/console
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ export actions_logfile=./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0xMUFRqxYV
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0xMUFRqxYV
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ alias parse-cisco=main
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
++ [[ -n '' ]]
+ logs_location=logs
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ mkdir -p logs/console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list
++ alias list-file=list_file
++ alias print-line=print
+ [[ platform =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias print-file=print_file
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ search =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(console|o)$ ]]
++ alias pause=pause
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias print-line=print
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias relative-configpath=relative_configpath
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
+++ date +%s%N
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ export divisor=--MTc0ODgzMzgzMjgxODI1MzAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
++ divisor=--MTc0ODgzMzgzMjgxODI1MzAwMAo--
+ [[ platform =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(extract|x)$ ]]
++ export divisor=--MTc0ODgzMzgzMjgxODUyODAwMAo--
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ divisor=--MTc0ODgzMzgzMjgxODUyODAwMAo--
++ alias warning-message=warning
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(console|o)$ ]]
++ export LC_ALL=C
++ alias warning-message=warning
+ [[ platform =~ ^(platform|p)$ ]]
++ LC_ALL=C
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ export LC_ALL=C
+ local target_platform=cisco
+ [[ search =~ ^(extract|x)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ config =~ ^(platform|p)$ ]]
++ export cache_location=.cache
++ [[ -n '' ]]
++ [[ -n '' ]]
++ cache_location=.cache
+ [[ search =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export logs_location=logs
+ [[ search =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list
++ logs_location=logs
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ mkdir -p logs/console logs/jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+++ base64
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(extract|x)$ ]]
++ LC_ALL=C
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ export 'nl=\n'
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias network-configs--helper=network_configs__helper
+ read -r key value
++ nl='\n'
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ export network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(export|r)$ ]]
+ touch logs/console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ alias network-extract--helper=network_extract__helper
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ alias parse-cisco=main
+ alias serialize-object=serialize_objects
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --platform=fortinet
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ script_filename=network-extract
++ export cache_location=.cache
++ cache_location=.cache
+ export network_extract__console=logs/console/network-extract.console
+ [[ config == \d\r\y\-\r\u\n ]]
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ search =~ ^(console|o)$ ]]
++ export logs_location=logs
+ touch logs/console/network-extract.console
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ IFS==
+ [[ search == \d\e\b\u\g ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -z x ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ export logs_location=logs
+ IFS==
+ read -r key value
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ read -r key value
++ export divisor=--MTc0ODgzMzgzMjgyNTE2MjAwMAo--
++ divisor=--MTc0ODgzMzgzMjgyNTE2MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.arhrwskmva/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+++ date +%s%N
++ alias parse-listings--helper=parse_listings__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+++ date +%s%N
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console
++ alias network-configs--helper=network_configs__helper
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ date +%s%N
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+++ base64
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ base64
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.boca638g20/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console --export --verbose
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ export targets_location=targets
+ [[ platform =~ ^(platform|p)$ ]]
++ targets_location=targets
+ local target_platform=fortinet
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODgzMzgzMjgzNDk2MDAwMAo--
++ divisor=--MTc0ODgzMzgzMjgzNDk2MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(config|c)$ ]]
++ export divisor=--MTc0ODgzMzgzMjgzNDc0NzAwMAo--
++ divisor=--MTc0ODgzMzgzMjgzNDc0NzAwMAo--
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q88jvy9bkx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config == \v\e\r\b\o\s\e ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
++ export divisor=--MTc0ODgzMzgzMjgzNTE3NjAwMAo--
++ divisor=--MTc0ODgzMzgzMjgzNTE3NjAwMAo--
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ source ./scripts/devops-helpers.shell
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias network-extract--helper=network_extract__helper
++ __DEVOPS_HELPERS_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ set -euo pipefail
+ local target_config=.cache/resources/misc/fw1.cfg
+ export LC_ALL=C
+ [[ config =~ ^(console|o)$ ]]
++ export actions_logfile=./logs/console/run.console
+ alias serialize-object=serialize_objects
+ LC_ALL=C
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console
++ actions_logfile=./logs/console/run.console
++ echo -e --platform=cisco
+ [[ config =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ alias serialize-object=serialize_objects
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
+ [[ -z x ]]
+ [[ logger == \h\e\l\p ]]
+ export logs_location=logs
+ [[ logger == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ logger == \d\r\y\-\r\u\n ]]
+ mkdir -p logs/console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
++ touch ./logs/console/run.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+++ date +%s%N
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -z x ]]
+ for xitem in "${@}"
+ export logs_location=logs
+ logs_location=logs
+ IFS==
+ read -r key value
+ mkdir -p logs/console
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --platform=cisco
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+++ base64
+ mkdir -p logs/console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0wgof60vhf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1ycnznvxfo/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local first_search_entry=10.0.1.2
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ] ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ ((  count == 0  ))
+ for xitem in "${@}"
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
++ echo -e --platform=cisco
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Uq86Xb8VL7
+ [[ platform =~ ^(extract|x)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Uq86Xb8VL7
+ [[ platform =~ ^(config|c)$ ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ export =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ nl='\n'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(platform|p)$ ]]
+ local verbose=true
+ IFS==
+ newline
+ read -r key value
+ local target_platform=cisco
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local export_objects=true
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ local target_platform=cisco
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
'
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
+ [[ platform == \h\e\l\p ]]
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias exit-error=exit_error
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS=' 	
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
'
+ debug=false
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ echo
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
+ [[ -z '' ]]
+ (( i++ ))
+ [[ export =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ (( i < count ))
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ dry_run=false
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
++ export divisor=--MTc0ODgzMzgzMjg0NTcxOTAwMAo--
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(config|c)$ ]]
+ debug=false
++ alias log-error=log_error
+ [[ export == \h\e\l\p ]]
+ local target_platform=fortinet
++ divisor=--MTc0ODgzMzgzMjg0NTcxOTAwMAo--
+ [[ -z '' ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export == \d\e\b\u\g ]]
++ alias log-info=log_info
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias print-message=message
+ export console_output=false
+ [[ export == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ platform == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
++ alias print-newline=newline
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ for xitem in "${@}"
+ read -r key value
+ console_output=false
++ alias pause=pause
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console ]]
+ IFS==
++ alias print-line=print
+ [[ -z '' ]]
+ IFS==
+ export console_output=false
+ script_helper=false
+ [[ -z fortinet ]]
+ read -r key value
+ read -r key value
++ alias print-file=print_file
+ [[ false == true ]]
+ [[ true == true ]]
+ IFS==
+ console_output=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias relative-configpath=relative_configpath
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]]
+ search_terms=()
+ read -r key value
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias system-metrics=system_metrics
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ search_terms=()
+ echo
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]]
+ [[ export =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ platform == \h\e\l\p ]]
++ alias validate-address=validate_address
+ [[ export =~ ^(export|r)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list != *,* ]]
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ local export_objects=true
+ source ./scripts/devops-helpers.shell
++ alias warning-message=warning
+ mapfile -t search_terms
+ [[ export =~ ^(extract|x)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ export LC_ALL=C
+ [[ platform == \d\r\y\-\r\u\n ]]
++ LC_ALL=C
++ [[ -n '' ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
++ export 'nl=\n'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ nl='\n'
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ export cache_location=.cache
+ script_filename=network-extract
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ export network_extract__console=logs/console/network-extract.console
++ cache_location=.cache
+ network_extract__console=logs/console/network-extract.console
++ __DEVOPS_HELPERS_SOURCED=1
++ export logs_location=logs
++ logs_location=logs
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ touch logs/console/network-extract.console
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
++ mkdir -p logs/console logs/jobs
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ for xitem in "${@}"
+ IFS==
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ echo -e --verbose
+ network_extract__console=logs/console/network-extract.console
++ alias network-extract--helper=network_extract__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console
+ touch logs/console/network-extract.console
++ tr -d '\r'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ echo -e --verbose
++ grep -v '^#'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ logger =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ config =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ search =~ ^(search|s)$ ]]
+ dry_run=false
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local verbose=true
+ [[ -z '' ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ export console_output=false
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS=' 	
+ console_output=false
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
'
+ [[ logger == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console ]]
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ debug=false
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local first_search_entry=10.0.2.3
+ local first_search_entry=10.0.0.1
+ script_helper=false
+ [[ -z '' ]]
+ [[ logger =~ ^(config|c)$ ]]
+ dry_run=false
+ read -r key value
+ local last_search_entry=10.0.2.3
+ IFS==
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ -z true ]]
+ read -r key value
+ [[ false == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local last_search_entry=10.0.0.1
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]]
+ [[ -z '' ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]]
+ export console_output=false
+ console_output=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list != *,* ]]
+ [[ -z true ]]
+ mapfile -t search_terms
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console ]]
+ local verbose=true
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
+ IFS=' 	
'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ] ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ script_helper=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
+ debug=false
+ [[ false == true ]]
+ IFS==
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ read -r key value
+ dry_run=false
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ] ]]
+ search_terms=()
+ export console_output=false
+ declare -a search_terms
+ console_output=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list != *,* ]]
+ [[ -z true ]]
+ ((  count == 0  ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ mapfile -t search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ local count=1
+ script_helper=false
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ ((  count == 0  ))
+ [[ false == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ export logs_location=logs
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
+ logs_location=logs
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ local count=1
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ search_terms=()
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ declare -a search_terms
+ [[ verbose == \d\e\b\u\g ]]
+ mkdir -p logs/console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
++ export divisor=--MTc0ODgzMzgzMjg2NDI2NjAwMAo--
++ divisor=--MTc0ODgzMzgzMjg2NDI2NjAwMAo--
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i = 0 ))
+ echo
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
++ [[ -n '' ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -z cisco ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ true == true ]]
+ echo
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
++ alias parse-listings--helper=parse_listings__helper
+ newline
++ echo -e --export
+ local count=1
+ (( i = 0 ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ echo
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ export targets_location=targets
++ targets_location=targets
+ (( i++ ))
++ export targets_logfile=logs/jobs/targets.jobs
++ alias network-configs--helper=network_configs__helper
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ local verbose=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
++ alias network-extract--helper=network_extract__helper
++ tr -d '\r'
+ [[ -z '' ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ for xitem in "${@}"
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ IFS==
++ echo -e --export
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ alias serialize-object=serialize_objects
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ read -r key value
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ output_dir=reports/10.0.1.2/fortinet
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]]
+ alias parse-cisco=main
++ grep -v '^\s*$'
+ [[ -z x ]]
+++ date +%s%N
+ export logs_location=logs
+ logs_location=logs
++ grep -v '^#'
+ mkdir -p logs/console
++ grep -v '^\s*$'
++ grep -v '^#'
+++ base64
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local verbose=true
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ export == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ IFS=' 	
+ [[ extract =~ ^(extract|x)$ ]]
'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ export == \d\e\b\u\g ]]
+ debug=false
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list != *,* ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ mapfile -t search_terms
++ command -v -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ local first_search_entry=172.16.0.5
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ script_filename=network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local last_search_entry=172.16.0.5
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ script_filename=network-extract
+ console_output=false
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ script_filename=network-extract.shell
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ script_filename=network-extract
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list != *,* ]]
+ local first_search_entry=172.16.1.6
+ mapfile -t search_terms
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]'
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ] ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ true == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]'
+ network_extract__console=logs/console/network-extract.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]'
+ touch logs/console/network-extract.console
+ [[ logger =~ ^(console|o)$ ]]
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ ((  count == 0  ))
+ [[ logger =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ] ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ newline
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ ((  count == 0  ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local first_search_entry=10.10.10.10
+ newline
+ local last_search_entry=10.10.10.10
+ local count=1
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ echo
+ newline
++ export divisor=--MTc0ODgzMzgzMjg3Nzc2NzAwMAo--
+ (( i++ ))
++ divisor=--MTc0ODgzMzgzMjg3Nzc2NzAwMAo--
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
++ [[ 5 -lt 4 ]]
+ echo
+ local count=1
++ echo -e --export
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ (( i++ ))
+ script_filename=network-extract.shell
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ (( i < count ))
+ echo
++ alias parse-listings--helper=parse_listings__helper
+ (( i++ ))
+ script_filename=network-extract
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ export network_extract__console=logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ network_extract__console=logs/console/network-extract.console
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ -z cisco ]]
++ alias network-configs--helper=network_configs__helper
+ [[ true == true ]]
+ touch logs/console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias network-extract--helper=network_extract__helper
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ echo -e --verbose
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --verbose
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local target_platform=cisco
+ [[ extract =~ ^(extract|x)$ ]]
++ tr -d '\r'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ logger == \h\e\l\p ]]
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ oIFS=' 	
'
+ network_extract__console=logs/console/network-extract.console
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(config|c)$ ]]
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ echo -e --platform=cisco
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ tr -d '\r'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ set -euo pipefail
+ export LC_ALL=C
+ [[ cfg == \c\f\g ]]
+ LC_ALL=C
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ output_dir=reports/10.0.2.3/cisco
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local script_filename=fortinet-configs.awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ local verbose=true
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS=' 	
'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local verbose=true
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export =~ ^(console|o)$ ]]
+ debug=false
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ [[ -z '' ]]
+ local first_search_entry=172.18.1.20
+ dry_run=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
'
+ local last_search_entry=172.18.1.20
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ read -r key value
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ -z true ]]
+ [[ 7 -eq 0 ]]
+ [[ -z '' ]]
+ local target_platform=cisco
+ [[ -z '' ]]
+ export console_output=false
+ [[ platform =~ ^(search|s)$ ]]
+ debug=false
+ console_output=false
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ -z '' ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
'
+ export console_output=false
+ IFS==
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console ]]
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]'
+ [[ -z '' ]]
+ script_helper=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ] ]]
+ [[ false == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list ]]
+ search_terms=()
++ mktemp -d
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list ]]
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list != *,* ]]
+ [[ -z '' ]]
+ mapfile -t search_terms
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ export console_output=false
++ command -v -- ./scripts/network-extract.shell
+ console_output=false
+ script_helper=false
+ [[ false == true ]]
+ [[ -z true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ search_terms=()
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ declare -a search_terms
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]]
++ which awk
+ [[ cfg == \c\f\g ]]
+ ((  count == 0  ))
+ script_filename=network-extract.shell
+ local first_search_entry=10.0.1.2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]]
+ [[ export =~ ^(logger|l)$ ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list != *,* ]]
+ [[ platform == \h\e\l\p ]]
+ local last_search_entry=10.0.1.2
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ mapfile -t search_terms
+ [[ 7 -eq 0 ]]
+ search_terms=()
+ [[ platform == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ script_filename=network-extract
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.3qmzvlfya4/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ true == true ]]
+ declare -a search_terms
+ export network_extract__console=logs/console/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ touch logs/console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console --export --verbose
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]'
+ oIFS=' 	
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-configs--ips.list ]'
'
+ local count=1
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ ((  count == 0  ))
+ [[ extract =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ IFS==
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.f77r476gxn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ read -r key value
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ echo
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console --export --verbose
+ local 'prompt_message=Enter configuration file to be parsed: '
+ IFS==
+ read -r key value
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ echo
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
+ touch logs/console/network-extract.console
+ (( i < count ))
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eczexfetpg/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
+ local count=1
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
++ echo -e --platform=cisco
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ output_dir=reports/10.0.0.1/cisco
+ [[ cfg == \c\f\g ]]
++ tr -d '\r'
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5qk40hjmye/network-configs--ips.list =~ ^-*(h|help)$ ]]
'
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ for xitem in "${@}"
+ local count=1
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
++ grep -v '^\s*$'
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list
++ grep -v '^\s*$'
++ grep -v '^#'
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ IFS=,
++ echo -e --verbose
++ echo 10.0.1.2
++ grep -v '^#'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.arhrwskmva/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HPeChJnQVe
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console --export --verbose
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HPeChJnQVe
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ declare -a execute
+ output_dir=reports/172.16.0.5/cisco
+ oIFS=' 	
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ ! -d reports/172.16.0.5/cisco ]]
'
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
+ IFS==
+ local script_filename=cisco-configs.awk
+ read -r key value
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ export 'nl=\n'
+ nl='\n'
+ local first_search_entry=172.31.255.254
+ source ./scripts/devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
+ local last_search_entry=172.31.255.254
+ [[ logger =~ ^(console|o)$ ]]
+ output_dir=reports/172.16.1.6/cisco
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ [[ logger =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ [[ -n '' ]]
++ mktemp -d
++ mktemp -d
+ [[ logger =~ ^(extract|x)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ output_dir=reports/10.10.10.10/cisco
+ [[ platform =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ [[ extract == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list ]'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list ] ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local target_platform=cisco
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-configs--ips.list ]'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
++ alias list-file=list_file
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ local count=1
++ alias log-error=log_error
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ local first_search_entry=192.0.2.50
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias log-info=log_info
+ local last_search_entry=192.0.2.50
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ search =~ ^(export|r)$ ]]
++ which awk
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ true == true ]]
++ alias log-warn=log_warn
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ newline
+ IFS==
++ alias print-message=message
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ local count=1
+ [[ conf == \c\o\n\f ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]'
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ] ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ (( i = 0 ))
++ which awk
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]'
++ alias pause=pause
+ (( i < count ))
++ alias print-line=print
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local first_search_entry=10.0.0.1
+ oIFS=' 	
+ [[ search == \d\r\y\-\r\u\n ]]
+ local last_search_entry=10.0.0.1
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]'
'
++ dirname -- ./scripts/network-extract.shell
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ (( i++ ))
++ alias print-file=print_file
+ (( i < count ))
+ local export_objects=true
+ for xitem in "${@}"
+ local count=1
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export == \d\e\b\u\g ]]
+ ((  count == 0  ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
++ alias system-metrics=system_metrics
+ [[ -z cisco ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ] ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ newline
+ local count=1
+ local count=1
+ newline
+ ((  count == 0  ))
+ (( i = 0 ))
+ (( i < count ))
++ alias validate-address=validate_address
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
++ alias warning-message=warning
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ export LC_ALL=C
+ [[ verbose =~ ^(extract|x)$ ]]
++ LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(logger|l)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ echo
+ (( i++ ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ export 'nl=\n'
+ (( i < count ))
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ nl='\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list
++ export cache_location=.cache
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
++ cache_location=.cache
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ (( i++ ))
++ export logs_location=logs
+ (( i < count ))
++ logs_location=logs
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local count=1
++ mkdir -p logs/console logs/jobs
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ dirname reports/10.0.1.2/misc/switch1.conf
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ verbose =~ ^(platform|p)$ ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ local count=1
+ [[ verbose == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ echo
+ IFS=' 	
'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -z '' ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ debug=false
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -z '' ]]
+ dry_run=false
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ local awk_bin=/usr/bin/awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D4kfdlx5JU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D4kfdlx5JU
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wacQxsIpy6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wacQxsIpy6
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ export 'nl=\n'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ nl='\n'
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-info=log_info
+ output_dir=reports/10.0.1.2/misc
++ alias log-error=log_error
++ alias log-warn=log_warn
+ [[ ! -d reports/10.0.1.2/misc ]]
++ alias log-info=log_info
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias log-warn=log_warn
++ alias pause=pause
++ alias print-message=message
++ alias print-line=print
++ alias print-newline=newline
++ alias print-file=print_file
++ alias pause=pause
++ alias relative-configpath=relative_configpath
++ alias print-line=print
++ alias print-file=print_file
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ alias warning-message=warning
++ nl='\n'
++ export LC_ALL=C
++ export cache_location=.cache
++ LC_ALL=C
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ export 'nl=\n'
++ nl='\n'
++ mkdir -p logs/console logs/jobs
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ IFS=,
++ echo 10.0.2.3
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ local 'indent=            '
+ local SCRIPT_DIR=./scripts
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list
+ [[ true == true ]]
+ [[ search == \h\e\l\p ]]
+ local script_filename=cisco-configs.awk
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ export actions_logfile=./logs/console/run.console
+ local script_filename=cisco-configs.awk
+ [[ logger =~ ^(extract|x)$ ]]
+ local export_objects=true
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ logger =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ actions_logfile=./logs/console/run.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ export =~ ^(extract|x)$ ]]
++ touch ./logs/console/run.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ newline
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ declare -a execute
+ echo
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
++ which awk
+ [[ logger == \d\e\b\u\g ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ cfg == \c\f\g ]]
+ IFS==
+ for xitem in "${@}"
++ command -v -- ./scripts/network-extract.shell
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ conf == \c\o\n\f ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ read -r key value
+ for xitem in "${@}"
+ export console_output=false
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ for xitem in "${@}"
+ console_output=false
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ IFS==
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ -z true ]]
+ [[ config =~ ^(config|c)$ ]]
+ read -r key value
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ search =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ script_helper=false
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ newline
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ cfg == \c\f\g ]]
++ which awk
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ which awk
++ which awk
+ [[ false == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ which awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]]
+ [[ search =~ ^(search|s)$ ]]
+ search_terms=()
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list
+ read -r key value
+ declare -a search_terms
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list != *,* ]]
+ for xitem in "${@}"
+ mapfile -t search_terms
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ dirname reports/172.31.255.254/misc/switch1.conf
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ dirname -- ./scripts/network-extract.shell
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --export
++ echo -e --verbose
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
++ grep -v '^\s*$'
+ output_dir=reports/172.31.255.254/misc
+ [[ ! -d reports/172.31.255.254/misc ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ IFS=,
++ grep -v '^#'
+ [[ config =~ ^(config|c)$ ]]
++ echo 10.10.10.10
++ IFS=,
++ export targets_location=targets
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ targets_location=targets
+ [[ config =~ ^(console|o)$ ]]
++ echo 10.0.0.1
+ [[ config =~ ^(export|r)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ IFS==
+ read -r key value
+ declare -a execute
++ IFS=,
+ set -euo pipefail
++ IFS=,
+ export LC_ALL=C
+ LC_ALL=C
+ output_dir=reports/192.0.2.50/cisco
++ echo 172.16.0.5
++ echo 172.16.1.6
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute
+ output_dir=reports/10.0.0.1/fortinet
+ [[ export =~ ^(config|c)$ ]]
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ printf '%*s' 12 ''
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+++ date +%s%N
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ mktemp -d
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ declare -a execute
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+++ date +%s%N
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'indent=            '
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'extracted_configuration={
+ [[ verbose == \h\e\l\p ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ verbose == \d\e\b\u\g ]]
  "version": "v7.2.5.F",
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ verbose == \v\e\r\b\o\s\e ]]
}
+ local verbose=true
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')

+ IFS=' 	
#hostname="fg-branch-vpn-01"
'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -z '' ]]

+ debug=false
config firewall address
 edit "Spidey-Sandbox"
+ [[ -z '' ]]
  set subnet 10.0.1.2 255.255.255.255
+ dry_run=false
  set comment "QA node in Peter'\''s Lab"
+++ base64
 next
+ [[ -z true ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ console_output=false
+ for xitem in "${@}"
+ [[ -z true ]]
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console ]]
+ read -r key value
+ [[ -z '' ]]
+ script_helper=false
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ newline
+++ date +%s%N
++ which awk
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ local count=1
+ (( i = 0 ))
+ declare -a execute
+ (( i < count ))
+ echo
+++ base64
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
end'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ [[ false == true ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+++ tr -dc a-zA-Z0-9
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
 next
+++ tr -dc a-zA-Z0-9
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
end ]]
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ export divisor=--MTc0ODgzMzgzMjkzNjIyOTAwMAo--
++ divisor=--MTc0ODgzMzgzMjkzNjIyOTAwMAo--
+ output_dir=reports/172.18.1.20/cisco
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6rxu652JUA
+ source ./scripts/devops-helpers.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6rxu652JUA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ export 'nl=\n'
+ nl='\n'
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ source ./scripts/devops-resources.shell
++ which awk
++ export divisor=--MTc0ODgzMzgzMjkzNjc1MTAwMAo--
++ divisor=--MTc0ODgzMzgzMjkzNjc1MTAwMAo--
+ local first_search_entry=192.168.0.1
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ local last_search_entry=192.168.0.1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ export divisor=--MTc0ODgzMzgzMjkzODA1NDAwMAo--
+ [[ extract =~ ^(logger|l)$ ]]
++ divisor=--MTc0ODgzMzgzMjkzODA1NDAwMAo--
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(platform|p)$ ]]
++ alias log-error=log_error
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias log-info=log_info
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias log-warn=log_warn
+ [[ extract == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias print-message=message
+ for xitem in "${@}"
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ IFS==
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-newline=newline
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
++ dirname -- ./scripts/network-extract.shell
++ alias pause=pause
++ alias print-line=print
++ dirname -- ./scripts/network-extract.shell
++ alias print-file=print_file
++ IFS=,
++ alias relative-configpath=relative_configpath
++ alias network-extract--helper=network_extract__helper
++ printf '%*s' 12 ''
++ alias parse-listings--helper=parse_listings__helper
++ echo 10.0.1.2
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ echo -e --verbose
  "domain": ""
++ alias system-metrics=system_metrics
+ alias serialize-object=serialize_objects
++ printf '%*s' 12 ''
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ alias network-configs--helper=network_configs__helper

config firewall address
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ echo -e --platform=cisco
++ alias validate-address=validate_address
++ alias network-configs--helper=network_configs__helper
++ alias warning-message=warning
+ [[ -n {
  "vendor": "fortinet",
+ local awk_bin=/usr/bin/awk
+ local 'indent=            '
  "model": "FortiGate-60F",
++ export LC_ALL=C
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ local 'indent=            '
  "version": "v7.2.5.F",
++ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+ [[ true == true ]]
  "domain": ""
+ [[ true == true ]]
+ declare -a execute
++ export 'nl=\n'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
++ nl='\n'
  "hostname": "fg-branch-vpn-01"
}
++ export cache_location=.cache

++ cache_location=.cache
#hostname="fg-branch-vpn-01"
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
++ export logs_location=logs
#model="FortiGate-60F"
++ logs_location=logs
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
++ mkdir -p logs/console logs/jobs
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
+ alias serialize-object=serialize_objects
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ alias parse-cisco=main
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ tr -d '\r'

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
++ command -v -- ./scripts/network-extract.shell
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ newline
++ alias network-extract--helper=network_extract__helper
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ alias parse-cisco=main
+ echo
+ (( i < count ))
+ [[ -z x ]]
+ echo
+ export logs_location=logs
+ logs_location=logs
+ (( i++ ))
+ (( i < count ))
+ mkdir -p logs/console
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
++ grep -v '^\s*$'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ printf '%*s' 12 ''
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
++ grep -v '^#'
++ echo -e --platform=fortinet
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'indent=            '
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ sed '1{/^[[:space:]]*$/d;}'
+ local awk_bin=/usr/bin/awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ alias parse-cisco=main
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ set -euo pipefail
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ export LC_ALL=C
+ local script_filename=fortinet-configs.awk
+ [[ -z x ]]
+ LC_ALL=C
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ which awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ export logs_location=logs
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ logs_location=logs
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ verbose =~ ^(export|r)$ ]]
+ mkdir -p logs/console
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ (( i = 0 ))
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ script_filename=network-extract
+ newline
+ echo
+ export network_extract__console=logs/console/network-extract.console
+ (( i++ ))
+ network_extract__console=logs/console/network-extract.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'extracted_configuration={
+ touch logs/console/network-extract.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ] ]]
  "vendor": "cisco",
+ [[ search =~ ^(logger|l)$ ]]
  "model": "",
+ IFS==
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
+ echo
  "version": "16.9",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local target_platform=cisco
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \v\e\r\b\o\s\e ]]
  "domain": "",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ [[ verbose =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ platform =~ ^(search|s)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
  "hostname": "branch-isr-02"
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
++ printf '%*s' 12 ''
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ local verbose=true
+ script_filename=network-extract.shell
+ IFS=' 	
+ [[ platform == \d\e\b\u\g ]]
+ script_filename=network-extract
}

'
+ export network_extract__console=logs/console/network-extract.console
version 16.9
+ [[ platform == \d\r\y\-\r\u\n ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ platform == \v\e\r\b\o\s\e ]]
hostname branch-isr-02
+ touch logs/console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local 'indent=            '
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z '' ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ debug=false
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ which awk
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local first_search_entry=192.168.0.100

interface GigabitEthernet0/0/2
+ local last_search_entry=192.168.0.100
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]]
++ which awk
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
++ mktemp -d
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]'
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ [[ platform =~ ^(console|o)$ ]]
 ip address 10.0.2.3 255.255.255.0
++ which awk
 description Dev VLAN

+ [[ platform =~ ^(export|r)$ ]]
+ local count=1
object network Panther-Gateway
+ newline
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list != *,* ]]
+ local count=1
+ mapfile -t search_terms
+ ((  count == 0  ))
 host 10.0.2.3
+ (( i = 0 ))
+ local target_platform=fortinet
+ (( i < count ))
+ local count=1
 description Secure outbound concentrator'
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline 2
+ [[ platform == \h\e\l\p ]]
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ local count=1
+ (( i = 0 ))
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'

+ local count=2
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -z cisco ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
version 16.9
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
hostname branch-isr-02

+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
 description Dev VLAN

object network Panther-Gateway
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ (( i = 0 ))
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
++ export targets_location=targets
++ targets_location=targets
+ newline
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local count=1
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
+ echo
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jzt0lefvch/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ (( i = 0 ))
+ (( i < count ))
+ oIFS=' 	
'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ read -r key value
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ 7 -eq 0 ]]
++ printf '%*s' 12 ''
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fwybc1hblo/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console --export --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
++ sed -e '1s|^\(-\)\{1,\}||'

version 16.9
+ oIFS=' 	
'
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ for xitem in "${@}"
 description Dev VLAN
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LBgEmWir5T
+ IFS==
+ script_filename=network-extract.shell

+ read -r key value
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LBgEmWir5T
object network Panther-Gateway
+ local 'indent=            '
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ true == true ]]
+ script_filename=network-extract
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export network_extract__console=logs/console/network-extract.console
+ export 'nl=\n'
+ network_extract__console=logs/console/network-extract.console
+ nl='\n'
+ newline
+ source ./scripts/devops-resources.shell
+ touch logs/console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console
+ [[ -n {
+ local count=1
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
++ [[ -n '' ]]

++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ (( i = 0 ))
hostname branch-isr-02
+ (( i < count ))
++ [[ 5 -lt 4 ]]

interface GigabitEthernet0/0/2
+ echo
++ dirname -- ./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVi9drTQIN
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVi9drTQIN

++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ tr -d '\r'
object network Panther-Gateway
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 host 10.0.2.3
 description Secure outbound concentrator'
++ IFS=,
++ echo 172.31.255.254
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ IFS=,
++ alias exit-error=exit_error
+++ date +%s%N
+ (( i++ ))
+ (( i < count ))
++ echo 10.0.0.1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ export 'nl=\n'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias list-file=list_file
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias log-error=log_error
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "version": "12.4",
  "domain": "",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "hostname": "access-sw1-west"
++ grep -v '^\s*$'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ sed '1{/^[[:space:]]*$/d;}'
}
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
+ execute=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+++ base64
++ alias log-info=log_info
++ grep -v '^#'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias print-line=print
+ nl='\n'
+ [[ logger =~ ^(export|r)$ ]]
+ source ./scripts/devops-resources.shell
++ alias print-file=print_file
+ [[ logger =~ ^(extract|x)$ ]]
++ IFS=,
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ echo 192.0.2.50
++ [[ 5 -lt 4 ]]

version 12.4
+ [[ logger =~ ^(logger|l)$ ]]
+ declare -a execute
hostname access-sw1-west

+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ logger =~ ^(search|s)$ ]]
+ declare -a execute
++ alias exit-error=exit_error
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'extracted_configuration={
+ for xitem in "${@}"
  "vendor": "cisco",
  "model": "ASA",
+ local 'extracted_configuration={
+ IFS==
  "version": "9.14(3)",
+ newline
  "domain": "edge.dc.example.com",
++ alias list-file=list_file
  "hostname": "perimeter-fw1"
  "vendor": "cisco",
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
}
object-group network MGMT-ACCESS
++ alias log-error=log_error
+ [[ logger =~ ^(console|o)$ ]]
 description Management objects
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ (( i = 0 ))
+ [[ logger =~ ^(export|r)$ ]]
 network-object host 192.168.0.1
+ newline 2
  "model": "",
 network-object host 192.168.0.100

+ [[ 7 -eq 0 ]]
  "version": "16.9",
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ declare -a execute
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
++ alias system-metrics=system_metrics
++ alias log-info=log_info
  "domain": "",
 network-object host 10.10.10.10
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.vjinzeqdtw/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "hostname": "branch-isr-02"
++ alias log-warn=log_warn
+ [[ logger =~ ^(logger|l)$ ]]
+ echo
 ip address 10.0.0.1 255.255.255.0

+ (( i++ ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
++ alias print-message=message
+ [[ logger =~ ^(platform|p)$ ]]
object-group network Mutant-WiFi
 description Internal Network Interface
+ [[ logger =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
}
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console --export --verbose
+ [[ logger == \h\e\l\p ]]
++ alias validate-address=validate_address
+ [[ logger == \d\e\b\u\g ]]
+ local first_search_entry=10.0.2.3
+ local count=2
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))

+ (( i < count ))

+ echo
 description Controlled guest devices
object network Stark-Tower
+ local last_search_entry=10.0.2.3
++ alias print-newline=newline
+ (( i++ ))
+ [[ false == true ]]
+ local SCRIPT_DIR=./scripts
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
 host 10.0.0.1
++ alias warning-message=warning
+ [[ true == true ]]
version 16.9
++ alias pause=pause
hostname branch-isr-02
 network-object host 10.10.10.10'
 description Core services gateway'
+ oIFS=' 	
+ [[ true == true ]]
++ alias print-line=print
++ export LC_ALL=C
'
+ for xitem in "${@}"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
+ result=0
+ for xitem in "${@}"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ] ]]
++ LC_ALL=C

+ echo
+ IFS==
+ result=0
+ local script_filename=cisco-configs.awk
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ IFS==
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
+ [[ -n {
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
interface GigabitEthernet0/0/0
  "vendor": "cisco",
++ export 'nl=\n'
+ [[ -n {
  "model": "ASA",
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
++ alias print-file=print_file
 ip address 172.16.1.6 255.255.255.0
+ read -r key value
  "vendor": "cisco",
 description ISP uplink
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias relative-configpath=relative_configpath
  "version": "9.14(3)",
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
  "domain": "edge.dc.example.com",
++ export divisor=--MTc0ODgzMzgzMjk2NDA0MDAwMAo--

+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
  "hostname": "perimeter-fw1"
++ divisor=--MTc0ODgzMzgzMjk2NDA0MDAwMAo--
+ [[ search =~ ^(config|c)$ ]]
  "model": "ASA",
  "vendor": "cisco",
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ read -r key value
}
+ [[ search =~ ^(console|o)$ ]]
  "model": "",
+ source ./scripts/devops-helpers.shell
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ search =~ ^(export|r)$ ]]
  "version": "9.14(3)",
++ alias system-metrics=system_metrics
  "version": "12.4",
  "domain": "edge.dc.example.com",

  "domain": "",
+ [[ search =~ ^(extract|x)$ ]]
object network BlackWidow-Core
+ (( i < count ))
ASA Version 9.14(3)
++ nl='\n'
  "hostname": "perimeter-fw1"
++ [[ -n '' ]]
 host 172.16.1.6
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ which awk
}
 description Branch router uplink NAT'
+ local count=1
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(logger|l)$ ]]
+ ((  count == 0  ))
  "hostname": "access-sw1-west"
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ which awk
++ __DEVOPS_HELPERS_SOURCED=1
hostname perimeter-fw1
++ export cache_location=.cache
+ [[ true == true ]]
+ [[ search =~ ^(platform|p)$ ]]

++ [[ 5 -lt 4 ]]
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
}
+ result=0
domain-name edge.dc.example.com

+ [[ -n {
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
  "vendor": "cisco",

+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias validate-address=validate_address
version 12.4
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
ASA Version 9.14(3)
+ [[ search =~ ^(search|s)$ ]]
hostname perimeter-fw1
+ [[ config =~ ^(console|o)$ ]]
domain-name edge.dc.example.com
  "model": "",
+ serialize_objects
++ cache_location=.cache
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
++ alias warning-message=warning
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
  "version": "16.9",
++ which awk
interface GigabitEthernet0/1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list

+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
  "domain": "",
++ export LC_ALL=C
hostname access-sw1-west
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ search =~ ^(export|r)$ ]]

+ [[ config =~ ^(export|r)$ ]]
object-group network MGMT-ACCESS
++ LC_ALL=C
 nameif inside
  "hostname": "branch-isr-02"
object-group network Panther-Edge
+ newline
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ search =~ ^(extract|x)$ ]]
 description Management objects
 description Internet-facing proxy systems
+ [[ search == \d\e\b\u\g ]]
+ newline
}
+ [[ search == \d\r\y\-\r\u\n ]]
++ export logs_location=logs
 network-object host 192.168.0.1
+ local count=1
 network-object host 203.0.113.25
++ logs_location=logs
+ [[ search == \v\e\r\b\o\s\e ]]
+ local count=1
 network-object host 192.168.0.100
 security-level 100
 network-object host 172.16.0.5
+ [[ search =~ ^(logger|l)$ ]]
 ip address 10.0.0.1 255.255.255.0
+ for xitem in "${@}"
+ (( i = 0 ))
++ mkdir -p logs/console logs/jobs
+ (( i = 0 ))
 network-object host 10.10.10.10
+ [[ search =~ ^(platform|p)$ ]]

 description Internal Network Interface
+ IFS==
object network Magneto-Core
+ (( i < count ))
+ (( i < count ))


++ export 'nl=\n'
+ [[ search =~ ^(search|s)$ ]]
+ echo
 host 172.16.0.5
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
++ alias network-configs--helper=network_configs__helper

+ (( i++ ))
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
object-group network Mutant-WiFi
version 16.9
+ read -r key value
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ echo
++ nl='\n'
++ alias network-extract--helper=network_extract__helper
++ export cache_location=.cache
+ (( i++ ))
++ cache_location=.cache
+ (( i < count ))
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --export
+ local 'prompt_message=Enter configuration file to be parsed: '
 description Controlled guest devices
 description WAN firewall entry point'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
 network-object host 10.10.10.10 ]]
+ [[ -z cisco ]]
+ alias serialize-object=serialize_objects
+ result=0
object network Stark-Tower
 host 10.0.0.1
+ [[ -n {
 description Core services gateway ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ (( i < count ))
 network-object host 172.16.0.5
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ [[ true == true ]]
++ echo -e --export
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list
+ mkdir -p logs/console
++ echo -e --export
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fkfelvadn0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list
+ [[ config =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list
++ echo -e --platform=cisco
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console
+ IFS==
++ echo -e --platform=fortinet
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local export_objects=true
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --verbose
+ [[ export =~ ^(search|s)$ ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ export == \h\e\l\p ]]
++ touch ./logs/console/run.console
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ config =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ LC_ALL=C
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ search == \v\e\r\b\o\s\e ]]
+ console_output=false
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ echo -e --export
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_helper=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]]
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --export
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ IFS=' 	
'
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ config == \d\e\b\u\g ]]
+ debug=false
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local export_objects=true
+ [[ -z true ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WdCgZbI6g5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WdCgZbI6g5
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config == \h\e\l\p ]]
+ export 'nl=\n'
+ [[ config == \d\e\b\u\g ]]
+ nl='\n'
+ [[ config == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+++ date +%s%N
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ export console_output=false
+ [[ config =~ ^(extract|x)$ ]]
+ console_output=false
++ [[ -n '' ]]
+ [[ -z true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias exit-error=exit_error
+ IFS==
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ [[ config =~ ^(platform|p)$ ]]
++ alias log-info=log_info
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias log-warn=log_warn
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ alias print-message=message
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ script_helper=false
++ alias print-newline=newline
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ alias pause=pause
++ echo -e --export
+ [[ config =~ ^(export|r)$ ]]
++ alias print-line=print
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-file=print_file
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
+++ base64
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]]
++ tr -d '\r'
+ search_terms=()
++ alias system-metrics=system_metrics
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias validate-address=validate_address
+ [[ config =~ ^(search|s)$ ]]
++ alias warning-message=warning
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --export
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ export actions_logfile=./logs/console/run.console
+ [[ extract == \v\e\r\b\o\s\e ]]
++ actions_logfile=./logs/console/run.console
+ [[ export =~ ^(search|s)$ ]]
++ touch ./logs/console/run.console
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ set -euo pipefail
+ for xitem in "${@}"
++ tr -d '\r'
+ export LC_ALL=C
+ IFS==
+ LC_ALL=C
+ read -r key value
+ set -euo pipefail
++ export divisor=--MTc0ODgzMzgzMzAwNDIxOTAwMAo--
+ export LC_ALL=C
++ divisor=--MTc0ODgzMzgzMzAwNDIxOTAwMAo--
+ LC_ALL=C
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ local first_search_entry=172.16.0.5
+ [[ export =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ export == \h\e\l\p ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ local last_search_entry=172.16.0.5
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ [[ logger =~ ^(export|r)$ ]]
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]'
+ for xitem in "${@}"
++ grep -v '^\s*$'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-configs--ips.list ]'
+ IFS==
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --export
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local count=1
+ ((  count == 0  ))
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
++ mktemp -d
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ echo
+ [[ platform =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local target_platform=cisco
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
++ echo -e --verbose
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
++ alias network-extract--helper=network_extract__helper
+ (( i = 0 ))
++ targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --verbose
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ set -euo pipefail
+ alias serialize-object=serialize_objects
+ [[ extract == \v\e\r\b\o\s\e ]]
+ export LC_ALL=C
+ [[ verbose == \d\e\b\u\g ]]
+ LC_ALL=C
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ [[ export =~ ^(export|r)$ ]]
'
+ read -r key value
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ local export_objects=true
+ IFS==
+ [[ export =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ read -r key value
+ debug=false
+ local first_search_entry=192.168.1.10
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ dry_run=false
+ local last_search_entry=192.168.1.10
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ export =~ ^(console|o)$ ]]
+ export console_output=false
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ export =~ ^(export|r)$ ]]
+ console_output=false
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CLehoaeOb1
+ local export_objects=true
+ [[ true == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CLehoaeOb1
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ [[ extract =~ ^(extract|x)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ nl='\n'
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1a0CZz6MW
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1a0CZz6MW
+ [[ -z '' ]]
+ script_helper=false
++ [[ -n '' ]]
+ [[ extract =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ IFS==
++ alias detect-vendor=detect_vendor
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ for xitem in "${@}"
++ mktemp -d
+ nl='\n'
+ [[ false == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ] ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]]
+ search_terms=()
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ declare -a search_terms
++ alias list-file=list_file
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
++ alias log-error=log_error
+ source ./scripts/devops-resources.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list != *,* ]]
+ read -r key value
+ local count=1
+ read -r key value
+++ date +%s%N
++ alias log-info=log_info
++ alias log-warn=log_warn
+ mapfile -t search_terms
++ alias print-message=message
++ [[ -n '' ]]
++ alias print-newline=newline
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias pause=pause
+ ((  count == 0  ))
++ [[ 5 -lt 4 ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ alias print-line=print
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-file=print_file
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
++ alias exit-error=exit_error
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias system-metrics=system_metrics
+ local verbose=true
+ IFS=' 	
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console
'
++ alias list-file=list_file
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
++ echo -e --platform=cisco
+ console_output=false
+ [[ -z true ]]
+++ base64
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console ]]
++ alias validate-address=validate_address
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias warning-message=warning
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]]
++ export LC_ALL=C
++ LC_ALL=C
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --export
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list != *,* ]]
++ echo -e --platform=cisco
+++ tr -dc a-zA-Z0-9
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ alias log-error=log_error
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
++ alias pause=pause
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias print-file=print_file
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ platform =~ ^(config|c)$ ]]
+ [[ false == true ]]
++ alias system-metrics=system_metrics
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ [[ platform =~ ^(export|r)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias warning-message=warning
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ export LC_ALL=C
+ [[ platform == \d\r\y\-\r\u\n ]]
++ LC_ALL=C
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ echo -e --platform=fortinet
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --verbose
+ script_filename=network-extract.shell
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ script_filename=network-extract
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ufrOohCUQT
+ for xitem in "${@}"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ufrOohCUQT
+ IFS==
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ touch ./logs/console/run.console
+ export 'nl=\n'
+ read -r key value
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ tr -d '\r'
++ export divisor=--MTc0ODgzMzgzMzAyNDEzMjAwMAo--
++ divisor=--MTc0ODgzMzgzMzAyNDEzMjAwMAo--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ grep -v '^\s*$'
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ network_extract__console=logs/console/network-extract.console
++ alias detect-vendor=detect_vendor
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ [[ platform =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_platform=cisco
++ alias list-file=list_file
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ export =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ grep -v '^#'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ (( i++ ))
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
++ alias print-message=message
+ [[ logger =~ ^(export|r)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
++ alias print-newline=newline
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ grep -v '^#'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ platform == \h\e\l\p ]]
+ local target_platform=cisco
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias pause=pause
+ local target_platform=cisco
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ echo -e --platform=fortinet
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias print-file=print_file
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ local verbose=true
+ [[ cfg == \c\f\g ]]
+ IFS=' 	
+ [[ platform =~ ^(config|c)$ ]]
+ final_output=reports/172.16.0.5/misc/fw3.cfg
++ export targets_location=targets
++ targets_location=targets
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ logger == \v\e\r\b\o\s\e ]]
++ targets_logfile=logs/jobs/targets.jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
+ for xitem in "${@}"
+ IFS==
+ IFS==
'
+ read -r key value
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ export console_output=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ console_output=false
++ export actions_logfile=./logs/console/run.console
+ [[ verbose =~ ^(logger|l)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
+ local first_search_entry=192.168.2.12
++ touch ./logs/console/run.console
+ [[ platform =~ ^(export|r)$ ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
++ alias validate-address=validate_address
+ script_helper=false
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \h\e\l\p ]]
++ alias warning-message=warning
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]]
++ export LC_ALL=C
+ local last_search_entry=192.168.2.12
++ LC_ALL=C
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
++ export 'nl=\n'
++ nl='\n'
+ [[ true == true ]]
++ export cache_location=.cache
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ cache_location=.cache
+ [[ platform =~ ^(console|o)$ ]]
+ local first_search_entry=192.168.1.11
+ [[ platform =~ ^(export|r)$ ]]
+ local last_search_entry=192.168.1.11
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]'
+ [[ platform =~ ^(search|s)$ ]]
+ declare -a search_terms
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ] ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]]
++ export logs_location=logs
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]'
++ logs_location=logs
++ echo -e --verbose
+ [[ platform == \d\e\b\u\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ mkdir -p logs/console logs/jobs
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local verbose=true
+ IFS=' 	
+ (( i++ ))
'
+ script_filename=network-extract.shell
+ (( i < count ))
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list != *,* ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ for xitem in "${@}"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ] ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ IFS==
+ [[ -z cisco ]]
+ mapfile -t search_terms
+++ date +%s%N
+ [[ true == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
+ local target_platform=fortinet
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(search|s)$ ]]
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ newline
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -z '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ debug=false
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ logger == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
+ dry_run=false
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -z true ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --export
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ platform == \h\e\l\p ]]
+++ base64
+ [[ platform == \d\e\b\u\g ]]
+ newline
+ [[ platform == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console
+ (( i = 0 ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ -z '' ]]
+ (( i < count ))
+ read -r key value
+ for xitem in "${@}"
+ export console_output=false
+ console_output=false
+ IFS==
+ read -r key value
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ echo
+ [[ 7 -eq 0 ]]
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.f77r476gxn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console --export --verbose
+ local 'prompt_message=Enter configuration file to be parsed: '
+ search_terms=()
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ local first_search_entry=10.10.10.10
+ [[ true == true ]]
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ oIFS=' 	
+ [[ platform =~ ^(config|c)$ ]]
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ declare -a search_terms
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ] ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ local target_platform=fortinet
+ newline
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ local count=1
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ ((  count == 0  ))
+ mapfile -t search_terms
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jzt0lefvch/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo
+ (( i++ ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console --export --verbose
+ oIFS=' 	
'
++ tr -d '\r'
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ read -r key value
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ newline
+ [[ verbose =~ ^(extract|x)$ ]]
+ output_dir=reports/172.16.0.5/misc
+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
++ export targets_location=targets
+ (( i < count ))
+ [[ ! -d reports/172.16.0.5/misc ]]
++ targets_location=targets
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo
++ export divisor=--MTc0ODgzMzgzMzA0MjY1OTAwMAo--
++ divisor=--MTc0ODgzMzgzMzA0MjY1OTAwMAo--
+ source ./scripts/devops-helpers.shell
++ grep -v '^\s*$'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(config|c)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ echo -e --export
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ logger =~ ^(console|o)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ logger =~ ^(export|r)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
++ alias parse-listings--helper=parse_listings__helper
++ export actions_logfile=./logs/console/run.console
+ [[ logger =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ export =~ ^(config|c)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ logger == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local verbose=true
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS=' 	
++ alias network-extract--helper=network_extract__helper
'
+ [[ -z '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ grep -v '^#'
+ [[ logger == \d\e\b\u\g ]]
+ debug=false
+ alias serialize-object=serialize_objects
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ touch ./logs/console/run.console
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console ]]
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ cfg == \c\f\g ]]
+ [[ false == true ]]
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
+ search_terms=()
+ declare -a search_terms
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+++ base64
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
+ script_filename=network-extract.shell
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export network_extract__console=logs/console/network-extract.console
+ IFS==
+ network_extract__console=logs/console/network-extract.console
+ read -r key value
+ touch logs/console/network-extract.console
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
+ [[ logger =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ output_dir=reports/192.168.1.11/cisco
+ [[ ! -d reports/192.168.1.11/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ [[ export =~ ^(config|c)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ export =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(logger|l)$ ]]
+ mapfile -t search_terms
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ] ]]
++ export targets_location=targets
+ [[ export == \h\e\l\p ]]
++ targets_location=targets
+ [[ logger =~ ^(export|r)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ echo -e --export
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ output_dir=reports/192.168.1.10/fortinet
+ [[ logger =~ ^(export|r)$ ]]
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ local first_search_entry=192.168.0.1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console
+ local last_search_entry=192.168.0.1
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname -- ./scripts/network-extract.shell
+ IFS==
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ] ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
+ local count=1
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
+ IFS==
+ ((  count == 0  ))
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ IFS==
+ local count=1
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ ((  count == 0  ))
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ export divisor=--MTc0ODgzMzgzMzA1NzI2OTAwMAo--
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ read -r key value
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eczexfetpg/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ divisor=--MTc0ODgzMzgzMzA1NzI2OTAwMAo--
+ echo
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ oIFS=' 	
'
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
+ [[ logger =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
++ alias parse-listings--helper=parse_listings__helper
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
+++ date +%s%N
++ alias network-configs--helper=network_configs__helper
++ grep -v '^\s*$'
+++ base64
+ newline
+ local count=1
+ (( i = 0 ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ (( i < count ))
+ alias serialize-object=serialize_objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ grep -v '^#'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
+ IFS==
+ read -r key value
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local SCRIPT_DIR=./scripts
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ export == \h\e\l\p ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ local count=1
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ output_dir=reports/192.168.2.12/cisco
+ [[ export =~ ^(search|s)$ ]]
+ [[ ! -d reports/192.168.2.12/cisco ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ which awk
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ local export_objects=true
+ script_helper=false
++ echo -e --verbose
+ [[ export =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(logger|l)$ ]]
+ set -euo pipefail
++ echo -e --export
+ export LC_ALL=C
+ LC_ALL=C
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ (( i++ ))
+ newline
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ search_terms=()
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]]
++ export divisor=--MTc0ODgzMzgzMzA2ODY2NjAwMAo--
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list != *,* ]]
++ divisor=--MTc0ODgzMzgzMzA2ODY2NjAwMAo--
+ mapfile -t search_terms
+ local first_search_entry=172.18.1.20
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=172.18.1.20
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --export
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-configs--ips.list ]'
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
+ [[ config == \h\e\l\p ]]
+ ((  count == 0  ))
+ [[ config == \d\e\b\u\g ]]
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
++ mktemp -d
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
++ alias network-configs--helper=network_configs__helper
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
++ which awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
++ command -v -- ./scripts/network-extract.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/switch3.conf
+ local count=1
+ alias serialize-object=serialize_objects
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ tr -d '\r'
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 192.168.1.11
++ grep -v '^\s*$'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ declare -a execute
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ output_dir=reports/10.10.10.10/cisco
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ grep -v '^#'
+ [[ export =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
++ echo -e --verbose
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --verbose
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ [[ export =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LWn9IU2R84
+ local verbose=true
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LWn9IU2R84
+ IFS=' 	
+ [[ export =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export =~ ^(config|c)$ ]]
'
+ [[ export == \h\e\l\p ]]
+ export 'nl=\n'
+ [[ export =~ ^(export|r)$ ]]
+ nl='\n'
+ [[ export == \d\e\b\u\g ]]
+ source ./scripts/devops-resources.shell
+ [[ export == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(extract|x)$ ]]
+ newline
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ [[ -z x ]]
+ (( i = 0 ))
+ local target_config=.cache/resources/misc/switch3.conf
+ (( i = 0 ))
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
++ [[ -n '' ]]
++ echo -e --platform=fortinet
+ local SCRIPT_DIR=./scripts
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ -z '' ]]
+ export logs_location=logs
+ local script_filename=fortinet-configs.awk
+ logs_location=logs
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ mkdir -p logs/console
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ echo
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ export =~ ^(search|s)$ ]]
+ (( i++ ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ export =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local export_objects=true
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ debug=false
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ config =~ ^(extract|x)$ ]]
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(extract|x)$ ]]
++ which awk
++ alias exit-error=exit_error
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ IFS=,
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias list-file=list_file
++ echo 172.16.0.5
+ IFS==
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
++ alias log-error=log_error
+ dry_run=false
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ export =~ ^(platform|p)$ ]]
+ export console_output=false
+ console_output=false
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local first_search_entry=192.168.100.100
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local last_search_entry=192.168.100.100
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ alias log-info=log_info
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
++ alias log-warn=log_warn
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias print-message=message
+ declare -a execute
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-newline=newline
+ IFS==
+ read -r key value
+ set -euo pipefail
++ dirname -- ./scripts/network-extract.shell
+ export LC_ALL=C
+ LC_ALL=C
++ alias pause=pause
++ alias print-line=print
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]]
++ alias print-file=print_file
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]]
++ alias relative-configpath=relative_configpath
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list != *,* ]]
+ local awk_bin=/usr/bin/awk
+ mapfile -t search_terms
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ IFS=' 	
'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ alias system-metrics=system_metrics
+ dry_run=false
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]'
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ] ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console ]]
++ export 'nl=\n'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z '' ]]
++ nl='\n'
+ script_helper=false
++ export cache_location=.cache
+ [[ false == true ]]
++ cache_location=.cache
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ export logs_location=logs
++ logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]]
++ mkdir -p logs/console logs/jobs
+ search_terms=()
+ declare -a search_terms
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
++ which awk
++ which awk
++ printf '%*s' 12 ''
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --verbose
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ platform == \h\e\l\p ]]
+ local 'indent=            '
+ ((  count == 0  ))
+ [[ platform == \d\e\b\u\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ for xitem in "${@}"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local verbose=true
+ IFS==
++ echo -e --verbose
+ IFS=' 	
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zh0biHQADO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zh0biHQADO
+ [[ 7 -eq 0 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fkfelvadn0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ local count=1
+ source ./scripts/devops-resources.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
+ local script_filename=cisco-configs.awk
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ 5 -lt 4 ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ alias detect-vendor=detect_vendor
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
++ dirname -- ./scripts/network-extract.shell
+ newline
++ tr -d '\r'
+ oIFS=' 	
+ local count=1
'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ for xitem in "${@}"
+ (( i++ ))
++ alias list-file=list_file
+ (( i < count ))
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
'
++ alias log-error=log_error
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias log-info=log_info
+ debug=false
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias log-warn=log_warn
+ IFS==
+ script_filename=network-extract.shell
+ [[ -z '' ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ read -r key value
++ alias print-message=message
+ script_filename=network-extract
+ newline
+ dry_run=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ -z true ]]
+ network_extract__console=logs/console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
++ grep -v '^\s*$'
++ alias relative-configpath=relative_configpath
+ output_dir=reports/192.168.0.1/cisco
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ local verbose=true
++ alias system-metrics=system_metrics
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]]
++ alias validate-address=validate_address
+ search_terms=()
+ declare -a search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ grep -v '^#'
++ tr -d '\r'
++ alias warning-message=warning
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ touch logs/console/network-extract.console
++ export LC_ALL=C
+ echo
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
++ which awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console ]]
++ grep -v '^\s*$'
+ [[ -z '' ]]
+ [[ extract =~ ^(console|o)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ -z cisco ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ extract =~ ^(platform|p)$ ]]
+ output_dir=reports/172.16.1.6/fortinet
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FmaloPXeVL
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FmaloPXeVL
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ grep -v '^#'
+ export 'nl=\n'
+ IFS==
+ nl='\n'
+ read -r key value
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
++ alias list-file=list_file
+ newline
+ local count=1
++ alias log-error=log_error
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias log-info=log_info
+ (( i++ ))
++ alias log-warn=log_warn
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ alias print-message=message
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ alias print-newline=newline
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ true == true ]]
++ alias pause=pause
++ alias print-line=print
+ newline
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias print-file=print_file
+ echo
+ (( i++ ))
+ print '{
++ alias relative-configpath=relative_configpath
+ (( i < count ))
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ print '{
  "vendor": "cisco",
  "domain": "edge.dc.example.com",
  "model": "ASA",
  "hostname": "perimeter-fw1"
  "version": "9.14(3)",
}
  "domain": "edge.dc.example.com",

  "hostname": "perimeter-fw1"
ASA Version 9.14(3)
}
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'

hostname perimeter-fw1
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]

+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ alias system-metrics=system_metrics
domain-name edge.dc.example.com
interface GigabitEthernet0/1
 nameif inside
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
 security-level 100
+ local awk_bin=/usr/bin/awk
 ip address 10.0.0.1 255.255.255.0

 description Internal Network Interface
object-group network Panther-Edge

 description Internet-facing proxy systems
object network Stark-Tower
 network-object host 203.0.113.25
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
 network-object host 172.16.0.5
 host 10.0.0.1

 description Core services gateway'
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ -n {
++ alias validate-address=validate_address
  "vendor": "cisco",
  "model": "ASA",
+ [[ -n {
  "vendor": "cisco",
  "version": "9.14(3)",
  "model": "ASA",
  "domain": "edge.dc.example.com",
  "version": "9.14(3)",
  "hostname": "perimeter-fw1"
  "domain": "edge.dc.example.com",
+ local awk_bin=/usr/bin/awk
++ IFS=,
  "hostname": "perimeter-fw1"
++ alias warning-message=warning
}
}


ASA Version 9.14(3)
ASA Version 9.14(3)
hostname perimeter-fw1
+ local awk_bin=/usr/bin/awk
hostname perimeter-fw1
++ echo 172.18.1.20
domain-name edge.dc.example.com
domain-name edge.dc.example.com


object-group network Panther-Edge
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
interface GigabitEthernet0/1
++ export LC_ALL=C
 nameif inside
 description Internet-facing proxy systems
 security-level 100
++ LC_ALL=C
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
 network-object host 203.0.113.25

 network-object host 172.16.0.5
object network Stark-Tower

++ export 'nl=\n'
+ [[ export =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
 host 10.0.0.1
object network Magneto-Core
+ output_dir=reports/192.168.0.100/cisco
 description Core services gateway ]]
++ nl='\n'
 host 172.16.0.5
+ [[ export =~ ^(console|o)$ ]]
 description WAN firewall entry point ]]
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ config =~ ^(config|c)$ ]]
++ export actions_logfile=./logs/console/run.console
+ echo -en '{
+ [[ search =~ ^(config|c)$ ]]
++ actions_logfile=./logs/console/run.console
  "vendor": "cisco",
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local parent_dir=reports/10.0.1.2/fortinet
  "model": "ASA",
++ export 'nl=\n'
+ declare -a execute
+ echo -en '{
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ config =~ ^(config|c)$ ]]
  "version": "9.14(3)",
++ export cache_location=.cache
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
  "domain": "edge.dc.example.com",
  "vendor": "cisco",
  "hostname": "perimeter-fw1"
  "model": "ASA",
}
  "version": "9.14(3)",

  "domain": "edge.dc.example.com",
ASA Version 9.14(3)
hostname perimeter-fw1
++ cache_location=.cache
  "hostname": "perimeter-fw1"
domain-name edge.dc.example.com
}

++ export logs_location=logs
interface GigabitEthernet0/1
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'

++ logs_location=logs
 nameif inside
ASA Version 9.14(3)
++ touch ./logs/console/run.console
hostname perimeter-fw1
++ mkdir -p logs/console logs/jobs
domain-name edge.dc.example.com
 security-level 100
 ip address 10.0.0.1 255.255.255.0

 description Internal Network Interface
+ [[ export =~ ^(config|c)$ ]]

object network Stark-Tower
object-group network Panther-Edge
 description Internet-facing proxy systems
 host 10.0.0.1
 network-object host 203.0.113.25
 description Core services gateway'
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ result=0
+ [[ -n {
+ [[ export =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local export_objects=true
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
  "domain": "",
+ local target_config=.cache/resources/misc/switch3.conf
  "hostname": ""
+ [[ export =~ ^(logger|l)$ ]]
}
++ nl='\n'
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ [[ config =~ ^(export|r)$ ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ [[ export =~ ^(console|o)$ ]]

+ [[ config =~ ^(extract|x)$ ]]
interface Vlan10

 ip address 10.0.1.2 255.255.255.0 ]]
+ [[ export =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
+ script_filename=network-extract
 host 172.16.1.6
 description Branch router uplink NAT'
+ export network_extract__console=logs/console/network-extract.console
+ print '{
+ network_extract__console=logs/console/network-extract.console
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ touch logs/console/network-extract.console

version 12.4
+ [[ -n {
  "vendor": "cisco",
hostname access-sw1-west
  "model": "",

  "version": "16.9",
object-group network MGMT-ACCESS
 description Management objects
++ which awk
  "domain": "",
 network-object host 192.168.0.1
  "hostname": "branch-isr-02"
 network-object host 192.168.0.100
}
 network-object host 10.10.10.10


version 16.9
object-group network Mutant-WiFi
hostname branch-isr-02
++ export cache_location=.cache
 description Controlled guest devices

 network-object host 10.10.10.10'
++ cache_location=.cache
interface GigabitEthernet0/0/0
+ [[ config =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ [[ -n {
+ echo -en '{
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "model": "",
  "version": "12.4",
  "version": "16.9",
  "domain": "",
  "domain": "",
  "hostname": "access-sw1-west"
  "hostname": "branch-isr-02"
}
}


++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
+ [[ search =~ ^(extract|x)$ ]]
version 16.9
++ targets_location=targets
version 12.4
hostname branch-isr-02
+ local export_objects=true
hostname access-sw1-west
++ export logs_location=logs
+ [[ config =~ ^(extract|x)$ ]]

++ logs_location=logs
++ export targets_logfile=logs/jobs/targets.jobs

object-group network MGMT-ACCESS
interface GigabitEthernet0/0/0
+ [[ config =~ ^(logger|l)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
 description Management objects
 ip address 172.16.1.6 255.255.255.0
 network-object host 192.168.0.1
 description ISP uplink
 network-object host 192.168.0.100

 network-object host 10.10.10.10
object network BlackWidow-Core

 host 172.16.1.6
object-group network Mutant-WiFi
 description Branch router uplink NAT'
+ [[ search =~ ^(logger|l)$ ]]
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ printf '%*s' 12 ''
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ config =~ ^(platform|p)$ ]]
}

version 12.4
hostname access-sw1-west
+ [[ config =~ ^(search|s)$ ]]

object-group network MGMT-ACCESS
 description Management objects
+ [[ config == \h\e\l\p ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ mkdir -p logs/console logs/jobs
+ [[ export =~ ^(logger|l)$ ]]
 network-object host 10.10.10.10

object-group network Mutant-WiFi
+ [[ export =~ ^(platform|p)$ ]]
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ config == \d\e\b\u\g ]]
+ [[ export =~ ^(search|s)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ local 'indent=            '
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ newline
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ print '{
+ [[ true == true ]]
  "vendor": "cisco",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ newline
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ local 'indent=            '
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ true == true ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ local awk_bin=/usr/bin/awk
++ export actions_logfile=./logs/console/run.console
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+++ date +%s%N
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
+ echo
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ local count=1
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ newline 2
+ [[ extract =~ ^(export|r)$ ]]
+ newline 2
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
+++ base64
+ [[ extract == \h\e\l\p ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ IFS==
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q88jvy9bkx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ read -r key value
+ (( i < count ))
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ echo
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ false == true ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+++ tr -dc a-zA-Z0-9
+ oIFS=' 	
'
++ echo -e --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ newline 2
+ (( i < count ))
+ local count=2
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ mkdir -p reports/10.0.1.2/fortinet/.objects
++ echo -e --platform=fortinet
+ newline 2
+ newline
++ export actions_logfile=./logs/console/run.console
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ local count=1
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ (( i = 0 ))
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ echo
++ export targets_location=targets
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
++ targets_location=targets
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ export targets_logfile=logs/jobs/targets.jobs
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ targets_logfile=logs/jobs/targets.jobs
+ local SCRIPT_DIR=./scripts
+ local count=2
+ (( i = 0 ))
+ serialize_objects
+ (( i < count ))
++ export targets_location=targets
+ echo
++ targets_location=targets
+ local count=2
+ (( i++ ))
++ actions_logfile=./logs/console/run.console
++ export targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
++ touch ./logs/console/run.console
+ local script_filename=cisco-configs.awk
+ echo
+ (( i++ ))
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ message '                .cache/resources/misc/switch1.conf'
++ targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ newline
+ local count=1
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ (( i = 0 ))
++ export divisor=--MTc0ODgzMzgzMzExMjg0MzAwMAo--
+ (( i < count ))
++ divisor=--MTc0ODgzMzgzMzExMjg0MzAwMAo--
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ echo
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/switch1.conf'
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ echo -e '                .cache/resources/misc/switch1.conf'
++ [[ -n '' ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ __DEVOPS_HELPERS_SOURCED=1
+ local count=2
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ echo
+ [[ true == true ]]
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ (( i++ ))
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ alias network-configs--helper=network_configs__helper
+ output_dir=reports/192.168.0.1/cisco
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ [[ verbose == \h\e\l\p ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local verbose=true
+ newline
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ IFS=' 	
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ local count=1
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ newline
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ (( i = 0 ))
'
+ (( i < count ))
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ echo
+ [[ -z '' ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ debug=false
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ verbose =~ ^(logger|l)$ ]]
++ which awk
+ alias parse-cisco=main
+++ date +%s%N
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ verbose =~ ^(platform|p)$ ]]
+ mkdir -p logs/console
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+++ date +%s%N
+ [[ verbose == \h\e\l\p ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i < count ))
+ echo
+ [[ verbose == \d\e\b\u\g ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ [[ -z '' ]]
+ [[ config =~ ^(export|r)$ ]]
+ newline
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ echo
+ local count=1
+ (( i < count ))
+ (( i++ ))
+ [[ config =~ ^(logger|l)$ ]]
+ dry_run=false
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local verbose=true
+ local count=1
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+++ base64
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+++ base64
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ [[ platform == \h\e\l\p ]]
+ (( i++ ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+++ tr -dc a-zA-Z0-9
+ [[ config == \d\r\y\-\r\u\n ]]
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ IFS=' 	
'
+++ tr -dc a-zA-Z0-9
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console ]]
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ dirname -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ read -r key value
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ result=0
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n {
+ for xitem in "${@}"
  "vendor": "cisco",
+ IFS==
+ read -r key value
  "model": "",
+ output_dir=reports/10.0.2.3/misc
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ ! -d reports/10.0.2.3/misc ]]
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ script_helper=false
++ export targets_location=targets
+ [[ -z true ]]
++ targets_location=targets
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z '' ]]
+ local parent_dir=reports/10.0.2.3/cisco
+ script_helper=false
+ [[ false == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]]
+ [[ extract == \d\e\b\u\g ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]]
+ search_terms=()
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list != *,* ]]
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ case "${target_platform}" in
+ print '{
  "vendor": "cisco",
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
  "model": "",
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ extract == \v\e\r\b\o\s\e ]]
version 16.9
+ for xitem in "${@}"
+ mapfile -t search_terms
+ awk -v divisor=--MTc0ODgzMzgzMjU4MDUyMjAwMAo-- '
hostname branch-isr-02
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }
                    /^[[:space:]]*$/ { next }
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;

object-group network Lantern-DMZ
                        next;
                      }
 description Protected but public-facing zone
                    }
                    (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
 network-object host 172.18.1.20
                      next;
 network-object host 192.168.1.11'
                    }
                    {
                      blk = blk divisor " " $0;
                    }
                    END {
                      if (blk != "" && !seen[blk]++) print blk;
+ [[ -n {
                    }
  "vendor": "cisco",
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
  "model": "",
  "version": "16.9",
  "domain": "",
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
++ basename reports/10.0.2.3/cisco/branch-isr-02
 network-object host 172.18.1.20
++ IFS=,
 network-object host 192.168.1.11 ]]
+ echo -en '{
++ echo 192.168.0.100
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

++ sed -e '1s|^\(-\)\{1,\}||'
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
++ export divisor=--MTc0ODgzMzgzMzEyNDU4NTAwMAo--
+ local SCRIPT_DIR=./scripts
++ divisor=--MTc0ODgzMzgzMzEyNDU4NTAwMAo--
+ IFS==
+ source ./scripts/devops-helpers.shell
+ local script_filename=cisco-configs.awk
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ __DEVOPS_HELPERS_SOURCED=1
+ declare -a execute
++ [[ 5 -lt 4 ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ export divisor=--MTc0ODgzMzgzMzEyNDI4MDAwMAo--
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=--MTc0ODgzMzgzMzEyNDI4MDAwMAo--
+ read -r key value
+ serialize_objects
++ alias network-configs--helper=network_configs__helper
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local 'extracted_configuration={
+ local count=1
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/devops-helpers.shell
++ command -v -- ./scripts/network-extract.shell
+ alias serialize-object=serialize_objects
+++ base64
++ which awk
+++ tr -dc a-zA-Z0-9
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jzt0lefvch/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console --export --verbose
++ echo -e --platform=cisco
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ false == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console
+ newline 2
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(platform|p)$ ]]
  "vendor": "cisco",
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
  "model": "",
+ newline
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ newline
+ [[ logger == \h\e\l\p ]]
  "hostname": "dmz-fw2-backup"
+ local count=2
+ [[ logger == \d\e\b\u\g ]]
+ (( i = 0 ))
+ local count=1
}
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]

+ echo
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ [[ config =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ config == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ true == true ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ -z x ]]
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ export logs_location=logs
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ logs_location=logs
+ serialize_objects
+ mkdir -p logs/console
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ newline
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ newline
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ mkdir -p reports/10.0.2.3/cisco/.objects
+ local count=1
+ (( i = 0 ))
  "version": "",
  "domain": "",
+ (( i < count ))
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ local 'extracted_configuration={
+ (( i = 0 ))
domain-name global.dmz.example.net
  "hostname": ""
+ [[ extract =~ ^(config|c)$ ]]
+ (( i = 0 ))
  "vendor": "fortinet",
+ [[ extract =~ ^(console|o)$ ]]
+ echo
  "model": "FortiGate-60F",
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ echo

  "version": "v7.2.5.F",
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
}
+ [[ verbose =~ ^(config|c)$ ]]

object-group network Watchtower-DMZ
+ (( i < count ))
  "domain": ""
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ (( i++ ))
+ echo
  "hostname": "fg-branch-vpn-01"
+ [[ extract =~ ^(logger|l)$ ]]
+ search_terms=()
interface Vlan1
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i++ ))
++ which awk
+ declare -a search_terms
+ [[ false == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ sed '/^[[:space:]]*$/d'
 ip address 172.31.255.254 255.255.255.0'
}
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ export divisor=--MTc0ODgzMzgzMzEzNTAzMTAwMAo--
 description Global secure relay
+ [[ true == true ]]
+ [[ false == true ]]
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ echo -e --platform=cisco
++ tr -d '\r'
+ (( i < count ))

+ [[ extract == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
#hostname="fg-branch-vpn-01"
+ [[ extract == \d\e\b\u\g ]]
+ result=0
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

++ divisor=--MTc0ODgzMzgzMzEzNTAzMTAwMAo--
config firewall address
+ [[ -n {
+ [[ false == true ]]
  "vendor": "cisco",
  "model": "",
 network-object host 192.0.2.50'
+ [[ true == true ]]
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
  "version": "",
+ source ./scripts/devops-helpers.shell
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
++ [[ -n '' ]]
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ IFS=,
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ echo 192.168.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ readonly __DEVOPS_HELPERS_SOURCED=1
 edit "IronMan-HQ"
+ declare -a execute
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ echo -e --export
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ grep -v '^#'
++ grep -v '^#'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ touch logs/console/network-extract.console
+ newline
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
++ which awk
}
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ alias serialize-object=serialize_objects
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ serialize_objects
+ serialize_objects
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ result=0
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ platform =~ ^(extract|x)$ ]]
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ platform =~ ^(logger|l)$ ]]
}
+ [[ platform =~ ^(platform|p)$ ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
++ alias parse-listings--helper=parse_listings__helper
+ local target_platform=cisco
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ platform =~ ^(search|s)$ ]]

+ [[ platform == \h\e\l\p ]]
+ local parent_dir=reports/172.16.0.5/cisco
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local awk_bin=/usr/bin/awk
+ [[ search == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ result=0

+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
config firewall address
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
ASA Version 9.12(4)
+ alias parse-cisco=main
+ [[ platform =~ ^(config|c)$ ]]
+ serialize_objects
 edit "IronMan-HQ"
+ local first_search_entry=192.0.2.50
  set subnet 10.0.0.1 255.255.255.255
+ [[ 0 -ne 0 ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ read -r key value
+ local parent_dir=reports/10.0.0.1/cisco
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ local first_search_entry=192.168.100.100
+ local script_filename=cisco-configs.awk
hostname dmz-fw2-backup
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ local script_filepath=./scripts/extract/cisco-configs.awk
domain-name global.dmz.example.net
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ serialize_objects
+ local last_search_entry=192.0.2.50
  set comment "Main node at Stark Tower"
 next
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
end ]]
+ [[ -z x ]]
+ export logs_location=logs
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]

+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ local last_search_entry=192.168.100.100
object-group network Watchtower-DMZ
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
 description Global secure relay
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
 network-object host 192.0.2.50 ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ print '{
  "vendor": "cisco",
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
  "model": "",
+ logs_location=logs
  "version": "",
  "domain": "",
+ [[ export =~ ^(config|c)$ ]]
+ mkdir -p logs/console
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ extract =~ ^(console|o)$ ]]
  "model": "",
+ [[ platform =~ ^(logger|l)$ ]]
  "version": "",
+ [[ extract =~ ^(export|r)$ ]]
  "domain": "",
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
  "hostname": ""
}
+ local target_platform=cisco

+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(export|r)$ ]]
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(search|s)$ ]]
interface Vlan1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]'
+ local export_objects=true
+ [[ platform == \h\e\l\p ]]
 ip address 172.31.255.254 255.255.255.0 ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ] ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]'
+ [[ platform == \d\e\b\u\g ]]
+ echo -en '{
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-configs--ips.list ]'
+ [[ extract =~ ^(logger|l)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
+ [[ export =~ ^(logger|l)$ ]]
++ basename reports/172.16.0.5/cisco/perimeter-fw1
 ip address 172.31.255.254 255.255.255.0'
+ [[ export =~ ^(platform|p)$ ]]
+ local count=1
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ ((  count == 0  ))
+ [[ export == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ newline
+ [[ export == \v\e\r\b\o\s\e ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]'
+ for xitem in "${@}"
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ] ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ (( i = 0 ))
+ IFS==
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ read -r key value
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
++ which awk
++ basename reports/10.0.0.1/cisco/perimeter-fw1
+ case "${target_platform}" in
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
++ dirname reports/10.0.1.2/misc/switch1.conf
++ printf '%*s' 12 ''
  "hostname": "fg-branch-vpn-01"
}
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ sed '1{/^[[:space:]]*$/d;}'
  set comment "Main node at Stark Tower"
+ awk -v divisor=--MTc0ODgzMzgzMjYwMzU0MTAwMAo-- '
 next
                  BEGIN {
end'
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ 7 -eq 0 ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1ycnznvxfo/network-configs--ips.list =~ ^-*(h|help)$ ]]
                    blk = $0;
+ [[ -n {
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
                    next;
+ alias parse-cisco=main
  "vendor": "fortinet",
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
  "model": "FortiGate-60F",
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console --export --verbose
                  }
  "version": "v7.2.5.F",
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
  "domain": ""
                  {
  "hostname": "fg-branch-vpn-01"
                    blk = blk divisor " " $0;
                  }
}
                  END {

#hostname="fg-branch-vpn-01"
                    if (blk != "" && !seen[blk]++) print blk "\n";
#model="FortiGate-60F"
+ newline
                  }
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ oIFS=' 	
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
+ echo

'
+ local 'indent=            '
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ [[ true == true ]]
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ for xitem in "${@}"
  "domain": ""
+ IFS==
+ set -euo pipefail
  "hostname": "fg-branch-vpn-01"
+ read -r key value
+ export LC_ALL=C
}
+ LC_ALL=C

++ printf '%*s' 12 ''
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ local parent_dir=reports/172.18.1.20/cisco
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z fortinet ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ echo
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i++ ))
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ echo
  "model": "ASA",
  "version": "9.12(4)",
++ echo -e --verbose
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ echo -e --platform=cisco
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ sed '/^[[:space:]]*$/d'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list
+ local parent_dir=reports/172.16.1.6/cisco
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/10.0.1.2/misc
+ local parent_dir=reports/10.10.10.10/cisco
++ mktemp -d
+ [[ -z cisco ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
+ newline
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ (( i++ ))
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(platform|p)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ config == \d\e\b\u\g ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ local target_platform=cisco
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ newline 2
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local verbose=true
+ result=0
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ IFS=' 	
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ logger =~ ^(extract|x)$ ]]
'
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ debug=false
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -z '' ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ dry_run=false
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(config|c)$ ]]
+ export console_output=false
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ basename reports/172.16.1.6/cisco/branch-isr-02
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ basename reports/10.10.10.10/cisco/access-sw1-west
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list != *,* ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ true == true ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ search =~ ^(platform|p)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(search|s)$ ]]
+ script_filename=network-extract
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list
+ export network_extract__console=logs/console/network-extract.console
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ script_filename=network-extract.shell
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ (( i < count ))
+ script_filename=network-extract
+ newline 2
+ read -r key value
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.2.3
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console
 network-object host 192.168.0.100
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
 network-object host 10.10.10.10 ]]
+ [[ logger == \h\e\l\p ]]
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ declare -a execute
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ logger =~ ^(search|s)$ ]]
+ touch logs/console/network-extract.console
+ [[ logger == \h\e\l\p ]]
+ touch logs/console/network-extract.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DoNiM5eZzz
+ for xitem in "${@}"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DoNiM5eZzz
+ IFS==
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ newline 2
+ source ./scripts/devops-resources.shell
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ mkdir -p reports/172.16.1.6/cisco/.objects
++ basename reports/10.0.1.2/misc/switch1
+ newline
+ [[ extract =~ ^(config|c)$ ]]
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ [[ extract =~ ^(extract|x)$ ]]
+ read -r key value
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
++ tr -d '\r'
+ [[ platform =~ ^(export|r)$ ]]
+ (( i++ ))
+ local count=2
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ case "${target_platform}" in
+ local count=1
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ local count=2
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
++ [[ -n '' ]]
+ awk -v divisor=--MTc0ODgzMzgzMjYzOTM0NjAwMAo-- '
+ local 'extracted_configuration={
  "vendor": "cisco",
                  BEGIN {
+ [[ extract == \h\e\l\p ]]
  "model": "",
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ [[ extract == \d\e\b\u\g ]]
+ print '{
                  /^{$/ { in_json_header = 1; next }
  "vendor": "cisco",
  "model": "",
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
  "version": "12.4",
                  /^}$/ {
+ [[ extract == \v\e\r\b\o\s\e ]]
  "domain": "",
+ (( i = 0 ))
                    if (in_json_header == 1) {
  "hostname": "access-sw1-west"
                      in_json_header = 0;
+ echo
}
                      next;
+ for xitem in "${@}"
                    }

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
                  }
                  (in_json_header == 1) { next }
 network-object host 192.168.0.1
                  /^[^[:space:]]/ {
 network-object host 192.168.0.100
                    if (blk != "" && !seen[blk]++) print blk "\n";
 network-object host 10.10.10.10'
+ IFS==
                    blk = $0;
                    next;
                  }
                  {
+ read -r key value
                    blk = blk divisor " " $0;
+ [[ -n {
                  }
  "vendor": "cisco",
                  END {
  "model": "",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "version": "12.4",
                  }
  "domain": "",
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ grep -v '^\s*$'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ sed '/^[[:space:]]*$/d'
version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console
+ echo
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger =~ ^(platform|p)$ ]]
+ echo
++ echo -e --export
+ [[ logger =~ ^(search|s)$ ]]
  "version": "12.4",
  "domain": "",
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
  "hostname": "access-sw1-west"
++ [[ 5 -lt 4 ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzgzMjYwMzg2OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ IFS==
                    blk = blk divisor " " $0;
+ read -r key value
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ return 0
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ (( i++ ))
+ [[ true == true ]]
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
}
++ echo -e --export
+ local first_search_entry=192.168.0.1
+ newline 2
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list

+ local last_search_entry=192.168.0.1
++ alias detect-vendor=detect_vendor
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ (( i++ ))
+ [[ config =~ ^(config|c)$ ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ true == true ]]
+ local count=2
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ [[ config =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ (( i++ ))
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ echo
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ] ]]
+ [[ config =~ ^(platform|p)$ ]]
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ true == true ]]
+ local count=1
+ [[ config =~ ^(search|s)$ ]]
+ sed '/^[[:space:]]*$/d'
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
++ echo -e --export
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ newline
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local count=1
+ (( i < count ))
+ for xitem in "${@}"
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ IFS==
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ read -r key value
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ local count=1
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ (( i = 0 ))
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ (( i < count ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ newline
version 12.4
hostname access-sw1-west
+ local count=1
+ [[ true == true ]]
+ mkdir -p reports/10.0.1.2/misc/.objects

+ (( i = 0 ))
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
object-group network MGMT-ACCESS
+ newline
+ (( i < count ))
+ local count=1
+ [[ cfg == \c\f\g ]]
 description Management objects
 network-object host 192.168.0.1
+ (( i = 0 ))
++ alias exit-error=exit_error
 network-object host 192.168.0.100
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ true == true ]]
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ echo
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ (( i++ ))
+ (( i < count ))
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ case "${target_platform}" in
+ case "${target_file}" in
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ export =~ ^(config|c)$ ]]
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eczexfetpg/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ export =~ ^(export|r)$ ]]
+ awk -v divisor=--MTc0ODgzMzgzMjYyNzA4NTAwMAo-- '
                  BEGIN {
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
                    in_json_header = 0;
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local export_objects=true
                    blk = "";
                  }
+ [[ export =~ ^(extract|x)$ ]]
                  /^[[:space:]]*$/ { next }
+ (( i++ ))
++ alias list-file=list_file
                  /^{$/ { in_json_header = 1; next }
+ [[ export =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console
                  /^}$/ {
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ alias log-error=log_error
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
++ alias log-info=log_info
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console
                      next;
+ [[ export =~ ^(platform|p)$ ]]
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ export =~ ^(search|s)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ [[ export == \h\e\l\p ]]
                  {
                    blk = blk divisor " " $0;
+ [[ export == \d\e\b\u\g ]]
                  }
                  END {
+ [[ export == \d\r\y\-\r\u\n ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ export == \v\e\r\b\o\s\e ]]
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ (( i < count ))
+ for xitem in "${@}"
 network-object host 10.10.10.10'
+ result=0
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -n {
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fkfelvadn0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(export|r)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ [[ platform =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
+ oIFS=' 	
+ [[ platform == \h\e\l\p ]]
'
+ [[ platform == \d\e\b\u\g ]]
++ alias print-message=message
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ alias print-newline=newline
+ IFS==
+ IFS==
+ read -r key value
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
+ cat -n reports/172.31.255.254/misc/switch1.conf
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console --export --verbose
+ cat -n
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

+ oIFS=' 	
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
'
interface Vlan100
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ read -r key value
+ [[ true == true ]]
++ alias pause=pause
++ alias print-line=print
+ cat -n
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ alias system-metrics=system_metrics
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ for xitem in "${@}"
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ local count=1
+ IFS==
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ (( i = 0 ))
++ alias validate-address=validate_address
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias warning-message=warning
+ echo
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
++ export LC_ALL=C
++ LC_ALL=C
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
++ export 'nl=\n'
+ result=0
+ serialize_objects
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
++ nl='\n'
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
++ export cache_location=.cache
+ [[ logger =~ ^(console|o)$ ]]
+ local 'indent=            '
+ IFS==
++ cache_location=.cache
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ local count=1
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ case "${target_platform}" in
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ awk -v divisor=--MTc0ODgzMzgzMjYzNjE1MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ (( i++ ))
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ (( i < count ))
                      next;
                    }
                  }
+ return 0
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ logger =~ ^(export|r)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ true == true ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ export logs_location=logs
++ logs_location=logs
                  }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
++ mkdir -p logs/console logs/jobs
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --verbose
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
++ echo -e --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
++ sed -e '1s|^\(-\)\{1,\}||'
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ sed '/^[[:space:]]*$/d'
+ [[ logger =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.100.100/fortinet
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console
+ local export_objects=true
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ logger == \h\e\l\p ]]
+ local parent_dir=reports/192.168.0.1/cisco
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ result=0
+ IFS==
+ read -r key value
+ [[ 0 -ne 0 ]]
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ [[ true == true ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --platform=cisco
+ echo
+ output_dir=reports/192.0.2.50/cisco
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console
+ [[ false == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger == \h\e\l\p ]]
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ newline
++ basename reports/192.168.0.1/cisco/access-sw1-west
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--branch-isr-02.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ case "${target_platform}" in
+ local verbose=true
+ IFS==
+ IFS=' 	
'
+ [[ -z '' ]]
+ awk -v divisor=--MTc0ODgzMzgzMjYzMTU4ODAwMAo-- '
                  BEGIN {
+ output_dir=reports/192.168.0.1/fortinet
+ [[ search =~ ^(export|r)$ ]]
                    in_json_header = 0;
+ debug=false
                    blk = "";
+ [[ ! -d reports/192.168.0.1/fortinet ]]
                  }
+ [[ verbose =~ ^(config|c)$ ]]
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
+ [[ -z '' ]]
                  (in_json_header == 1) { next }
+ dry_run=false
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -z true ]]
                  }
++ echo -e --export
+ case "${target_platform}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console
                ' reports/10.0.1.2/misc/switch1.conf
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ case "${target_file}" in
+ export console_output=false
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--fg-branch-vpn-01.cfg.console
+ console_output=false
+ newline
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console ]]
+ awk -v divisor=--MTc0ODgzMzgzMjYxODY4MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ [[ -z '' ]]
                  /^{$/ { in_json_header = 1; next }
+ script_helper=false
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ [[ false == true ]]
                  }
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
                  (in_json_header == 1) { next }
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]]
+ read -r key value
                  /^[^[:space:]]/ {
+ search_terms=()
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ declare -a search_terms
                  {
++ export actions_logfile=./logs/console/run.console
                    blk = blk divisor " " $0;
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]]
                  }
++ actions_logfile=./logs/console/run.console
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
++ touch ./logs/console/run.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ cat -n
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ command -v -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ [[ export == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ [[ 0 -ne 0 ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(extract|x)$ ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ (( i = 0 ))
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ serialize_objects
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ echo
+ IFS==
+ echo
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ newline 2
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ local verbose=true
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ IFS=' 	
'
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
+ [[ -z '' ]]
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ result=0
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AxBRzVVJsO ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AxBRzVVJsO
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
++ dirname -- ./scripts/network-extract.shell
+ cat -n
++ tr -d '\r'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--branch-isr-02.cfg.console
+ debug=false
+ [[ search =~ ^(console|o)$ ]]
+ newline
+ [[ -z '' ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ local count=1
+ [[ search =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(config|c)$ ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ (( i++ ))
++ echo -e --export
+ [[ export =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ newline
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ return 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ dry_run=false
+ echo
+ [[ -z true ]]
+ [[ -z '' ]]
+ (( i++ ))
+ export console_output=false
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ search =~ ^(platform|p)$ ]]
++ dirname reports/172.31.255.254/misc/switch1.conf
+ result=0
+ [[ 0 -ne 0 ]]
+ serialize_objects
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
++ export targets_location=targets
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console
++ targets_location=targets
+ case "${target_platform}" in
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
++ export targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
++ targets_logfile=logs/jobs/targets.jobs
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ local SCRIPT_DIR=./scripts
+ console_output=false
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z true ]]
+ awk -v divisor=--MTc0ODgzMzgzMjY1MDIxMjAwMAo-- '
+ local script_filename=fortinet-configs.awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
                  BEGIN {
+ local script_filepath=./scripts/extract/fortinet-configs.awk
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ local 'extracted_configuration={
  "vendor": "cisco",
                  }
  "model": "",
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ search =~ ^(search|s)$ ]]
++ echo -e --verbose
+ result=0
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list
+ exit 0
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WamlaRE9yS ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WamlaRE9yS
+ [[ search == \d\r\y\-\r\u\n ]]
+ newline
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --verbose
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ sed '/^[[:space:]]*$/d'
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ [[ 0 -ne 0 ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console
  "version": "",
+ script_helper=false
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
  "domain": "",
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local SCRIPT_DIR=./scripts
+ local first_search_entry=198.51.100.75
  "hostname": ""
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ local script_filename=fortinet-configs.awk
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
+ serialize_objects
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console ]]
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console ]]
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]]
}
+ (( i < count ))
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ search_terms=()

+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ] ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i++ ))
+ [[ export =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ case "${target_file}" in
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ ((  count == 0  ))
+ declare -a search_terms
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
object-group network Metropolis-Internal
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local export_objects=true
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
 description Core internal LAN for application clusters
+ [[ logger == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
 network-object host 10.0.2.3
+ (( i++ ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ IFS==
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local parent_dir=reports/172.31.255.254/misc
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ config =~ ^(platform|p)$ ]]
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
 network-object 192.168.2.0 255.255.255.0
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ config =~ ^(search|s)$ ]]
 network-object host 192.168.2.12
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ -z cisco ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"

object network Kent-Server
+ IFS==
 host 10.0.2.3
+ read -r key value
 description Internal mail & identity services'
+ result=0
+ [[ -n {
++ echo -e --config=.cache/resources/misc/fw1.cfg
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
+ result=0
+ exit 0
 host 10.0.2.3
+++ date +%s%N
 description Internal mail & identity services ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.usmRXYyA4b ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.usmRXYyA4b
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
++ which awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
++ basename reports/172.31.255.254/misc/switch1
+ [[ verbose =~ ^(logger|l)$ ]]
+ result=0
+++ base64
+ (( i++ ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ echo -e --export
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ [[ -z '' ]]
+ debug=false
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ [[ -z '' ]]
+ dry_run=false
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ [[ -z true ]]
+ [[ -z '' ]]
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ [[ -z '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ local count=1
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
+++ tr -dc a-zA-Z0-9
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local first_search_entry=192.168.1.10
+ case "${target_file}" in
+ mapfile -t search_terms
++ command -v -- ./scripts/network-extract.shell
+ cat reports/10.0.1.2/misc/.objects/switch1.list
+ local last_search_entry=192.168.1.10
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]]
+ [[ verbose == \d\e\b\u\g ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ extract =~ ^(console|o)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ extract =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ local first_search_entry=10.0.0.1
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ -z true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local last_search_entry=10.0.0.1
+ [[ extract =~ ^(search|s)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ extract == \h\e\l\p ]]
+ local first_search_entry=192.168.0.100
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local last_search_entry=192.168.0.100
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ newline
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ] ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]'
+ local verbose=true
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-configs--ips.list ]'
+ IFS=' 	
'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ [[ -z '' ]]
+ set -euo pipefail
+ debug=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ] ]]
+ export LC_ALL=C
+ LC_ALL=C
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ (( i < count ))
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ [[ -z '' ]]
++ IFS=,
+ script_helper=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ false == true ]]
+ IFS==
+ (( i = 0 ))
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ echo 192.168.1.10
+ read -r key value
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ dry_run=false
+ (( i < count ))
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
++ which awk
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ] ]]
++ printf '%*s' 12 ''
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ search_terms=()
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ declare -a search_terms
+ [[ -z true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -z cisco ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ true == true ]]
+ echo
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ local 'indent=            '
+ [[ -z '' ]]
+ export console_output=false
+ newline
+ console_output=false
+ [[ true == true ]]
+ [[ -z true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]]
+ (( i = 0 ))
+ search_terms=()
+ newline
+ declare -a search_terms
+ declare -a execute
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]]
+ local count=1
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list != *,* ]]
+ local count=1
+ newline
+ (( i++ ))
+ local count=1
+ echo
++ mktemp -d
+ (( i++ ))
++ IFS=,
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
++ echo 192.168.2.12
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ mapfile -t search_terms
+ (( i = 0 ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ tr -d '\r'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ newline
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ [[ -z cisco ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local count=1
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ declare -a execute
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ dirname reports/172.18.1.20/misc/fw1.cfg
++ grep -v '^\s*$'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ which awk
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list
++ grep -v '^\s*$'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --platform=cisco
++ tr -d '\r'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                .cache/resources/misc/fw3.cfg'
++ grep -v '^#'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
+ newline
+ local count=1
+ local script_filename=cisco-configs.awk
+ (( i = 0 ))
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local SCRIPT_DIR=./scripts
++ which awk
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ grep -v '^#'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ output_dir=reports/172.18.1.20/misc
+ [[ ! -d reports/172.18.1.20/misc ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lX2l9UZfwP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lX2l9UZfwP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local awk_bin=/usr/bin/awk
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ which awk
++ IFS=,
++ alias list-file=list_file
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ echo 10.10.10.10
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ tr -d '\r'
++ alias print-message=message
++ alias print-newline=newline
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
++ alias pause=pause
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
++ alias print-line=print
+ declare -a execute
++ alias print-file=print_file
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
+ local first_search_entry=192.168.1.11
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
++ alias system-metrics=system_metrics
+ local last_search_entry=192.168.1.11
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ] ]]
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ true == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
++ which awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
++ alias validate-address=validate_address
+ local count=1
+ ((  count == 0  ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]'
++ printf '%*s' 12 ''
++ alias warning-message=warning
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ] ]]
++ export LC_ALL=C
++ LC_ALL=C
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ export 'nl=\n'
++ grep -v '^\s*$'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]'
++ nl='\n'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ platform =~ ^(console|o)$ ]]
++ export logs_location=logs
+ local awk_bin=/usr/bin/awk
++ logs_location=logs
+ [[ platform =~ ^(export|r)$ ]]
+ local count=1
++ mkdir -p logs/console logs/jobs
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ [[ platform =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'indent=            '
+ local 'extracted_configuration={
+ [[ platform =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ [[ true == true ]]
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
  "model": "",
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ (( i < count ))
+ local target_platform=cisco
+ newline
+ [[ platform =~ ^(search|s)$ ]]
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ [[ platform == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ (( i++ ))
+ echo
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter configuration file to be parsed: '
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ grep -v '^#'
++ which awk
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z cisco ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ true == true ]]
+ [[ -z fortinet ]]
+ [[ search =~ ^(export|r)$ ]]
+ local first_search_entry=203.0.113.25
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local last_search_entry=203.0.113.25
+ [[ true == true ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ local count=1
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ newline
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ newline
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ local count=1
+ (( i++ ))
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ printf '%*s' 12 ''
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ newline
+ local count=1
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'indent=            '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ newline
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ search =~ ^(search|s)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(console|o)$ ]]
++ IFS=,
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
  "version": "16.9",
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ search == \d\e\b\u\g ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
++ echo 192.168.0.1
+ local count=1
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ touch ./logs/console/run.console
+ local awk_bin=/usr/bin/awk
+ local 'extracted_configuration={
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console

+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ local first_search_entry=192.168.2.12
object-group network Panther-Edge
++ IFS=,
 description Internet-facing proxy systems
+ [[ conf == \c\o\n\f ]]
+ local last_search_entry=192.168.2.12
+ [[ logger =~ ^(platform|p)$ ]]
  "domain": "",
 network-object host 203.0.113.25
  "hostname": "branch-isr-02"
+ [[ search == \d\r\y\-\r\u\n ]]
+ final_output=reports/10.0.0.1/misc/switch1.conf
++ echo 172.16.1.6
 network-object host 172.16.0.5
}
+ [[ 7 -eq 0 ]]
+ extract_location=reports/10.0.0.1/misc/switch1.conf

+ [[ search == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ IFS==
object network Edge-Terminal
+ local parent_dir=reports/10.0.0.1/fortinet
 host 172.16.0.5
+ read -r key value
 description Internet firewall handoff'
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
version 16.9
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.1ycnznvxfo/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ result=0
hostname branch-isr-02
+ [[ -n {
+ local script_filename=cisco-configs.awk
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
  "vendor": "cisco",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "model": "",
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console --export --verbose
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
  "version": "",
  "domain": "",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
  "hostname": ""
+ [[ logger == \h\e\l\p ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ] ]]
}


object-group network Panther-Edge
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
 description Internet-facing proxy systems
+ [[ logger == \d\e\b\u\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
object-group network Lantern-DMZ
 network-object host 203.0.113.25
 description Protected but public-facing zone
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local count=1
+ oIFS=' 	
 network-object host 172.16.0.5
 network-object host 172.18.1.20

+ declare -a execute
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
object network Edge-Terminal
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
++ dirname reports/192.168.1.10/misc/fw1.cfg
++ echo -e --platform=cisco
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print '{
+ (( i++ ))
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
  "vendor": "cisco",
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
  "model": "",
  "version": "",
  "domain": "",
++ which awk
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n {
  "vendor": "cisco",
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
  "model": "",
+ [[ -z fortinet ]]
  "version": "",
+ [[ true == true ]]
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
+ echo -en '{
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ which awk

++ dirname reports/10.0.0.1/misc/switch1.conf
++ printf '%*s' 12 ''
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ which awk
}

+ newline
object-group network Panther-Edge
 description Internet-facing proxy systems
+ local count=1
 network-object host 203.0.113.25
+ (( i = 0 ))
 network-object host 172.16.0.5
'

object network Edge-Terminal
+ (( i < count ))
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ local 'indent=            '
+ [[ true == true ]]
+ output_dir=reports/192.168.0.100/cisco
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ output_dir=reports/192.168.100.100/cisco
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ [[ logger =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ output_dir=reports/10.0.0.1/misc
+ [[ logger =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ ! -d reports/10.0.0.1/misc ]]
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
 network-object host 192.168.1.11'
+ for xitem in "${@}"
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
  "vendor": "fortinet",
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ logger == \h\e\l\p ]]
  "model": "FortiGate-60F",
+ [[ logger == \d\e\b\u\g ]]
  "version": "v7.2.5.F",
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ cfg == \c\f\g ]]
  "domain": ""
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ for xitem in "${@}"
  "hostname": "fg-branch-vpn-01"
}
+ IFS==
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg

+ read -r key value
+ newline
+ for xitem in "${@}"
#hostname="fg-branch-vpn-01"
+ local awk_bin=/usr/bin/awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ (( i++ ))

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ (( i < count ))
  set comment "Wakandan data store"
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
 next
end'
+ IFS==
+ result=0
+ read -r key value
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ IFS==
  "domain": ""
+ [[ platform =~ ^(config|c)$ ]]
  "hostname": "fg-branch-vpn-01"
+ read -r key value
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ -n {
  "vendor": "cisco",
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  "model": "",
+ local parent_dir=reports/192.0.2.50/cisco
  "version": "16.9",
+ [[ platform =~ ^(console|o)$ ]]

++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ [[ verbose =~ ^(extract|x)$ ]]
  set comment "Wakandan data store"
+ [[ verbose =~ ^(logger|l)$ ]]
 next
end ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
  "domain": "",
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(export|r)$ ]]
  "hostname": "branch-isr-02"
+ [[ verbose == \h\e\l\p ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
++ command -v -- ./scripts/network-extract.shell
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ true == true ]]
  "model": "",
  "version": "16.9",
+ [[ platform =~ ^(extract|x)$ ]]
+ mkdir -p reports/172.31.255.254/misc/.objects
  "domain": "",
+ [[ platform =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
}


interface GigabitEthernet0/0/1
version 16.9
 ip address 192.168.2.12 255.255.255.0
hostname branch-isr-02
+ [[ platform =~ ^(platform|p)$ ]]
 description Workstation LAN

++ IFS=,
object-group network Hydra-Edge
++ echo 172.18.1.20
 description Remote site uplink
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 192.168.2.12
++ command -v -- ./scripts/network-extract.shell
 network-object host 198.51.100.75'
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+++ date +%s%N
++ printf '%*s' 12 ''
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ local 'indent=            '
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')

+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
version 16.9
+ local target_platform=cisco
hostname branch-isr-02
+ declare -a execute
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ printf '%*s' 12 ''
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+++ base64
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ newline
config firewall address
+ local count=1
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ local 'indent=            '
+ (( i < count ))
+ echo
+ [[ -n {
+ (( i++ ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

++ dirname -- ./scripts/network-extract.shell
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
++ echo -e --export
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ newline 2
+ output_dir=reports/198.51.100.75/cisco
  "version": "16.9",
  "domain": "",
+ output_dir=reports/203.0.113.25/cisco
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ ! -d reports/198.51.100.75/cisco ]]
  "hostname": "branch-isr-02"
+ [[ ! -d reports/203.0.113.25/cisco ]]
}

+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
version 16.9
+ output_dir=reports/192.168.1.11/fortinet
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
hostname branch-isr-02

+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local SCRIPT_DIR=./scripts
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
++ export divisor=--MTc0ODgzMzgzMzI2MjMwODAwMAo--
 description Workstation LAN
++ divisor=--MTc0ODgzMzgzMzI2MjMwODAwMAo--

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ local script_filename=cisco-configs.awk
+ source ./scripts/devops-helpers.shell
+ local SCRIPT_DIR=./scripts
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ local script_filename=cisco-configs.awk
+ local SCRIPT_DIR=./scripts
  "version": "16.9",
+ local count=2
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "domain": "",
+ local script_filename=cisco-configs.awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(search|s)$ ]]
  "hostname": "branch-isr-02"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ ! -d reports/192.168.1.11/fortinet ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ [[ -n '' ]]
}
++ dirname -- ./scripts/network-extract.shell
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \h\e\l\p ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ __DEVOPS_HELPERS_SOURCED=1

version 16.9
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
hostname branch-isr-02
++ [[ 5 -lt 4 ]]

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i = 0 ))
interface GigabitEthernet0/0/1
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
 ip address 192.168.2.12 255.255.255.0
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ (( i++ ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i < count ))
object-group network Lantern-DMZ
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
 network-object host 192.168.1.11 ]]
+ [[ true == true ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
++ alias network-configs--helper=network_configs__helper
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias network-extract--helper=network_extract__helper
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ alias serialize-object=serialize_objects
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ alias parse-cisco=main
++ which awk
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ echo
  "hostname": "campus-sw-access01"
+ (( i++ ))
+ mkdir -p logs/console
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ newline 2
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(platform|p)$ ]]
}
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]

+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local count=2
version 12.2
+ for xitem in "${@}"
+ (( i = 0 ))
hostname campus-sw-access01
+ (( i < count ))

+ echo
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ (( i++ ))
+ IFS==
+ (( i < count ))
object-group network Floor-Networks
+ echo
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
 description End-user and service devices
+ (( i < count ))
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ local script_filename=cisco-configs.awk
 network-object host 10.10.10.10'
+ [[ export =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ result=0
+ local export_objects=true
+ [[ -n {
+ [[ export =~ ^(extract|x)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ [[ export =~ ^(logger|l)$ ]]
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
  "hostname": "campus-sw-access01"
}
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]

+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
version 12.2
hostname campus-sw-access01
+ newline

object-group network Floor-Networks
++ dirname -- ./scripts/network-extract.shell
+ local count=1
 description End-user and service devices
 network-object host 192.168.0.1
+ (( i = 0 ))
+ (( i < count ))
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ newline 2
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ printf '%*s' 12 ''
+ [[ config == \d\e\b\u\g ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ newline
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ output_dir=reports/192.168.2.12/fortinet
+ [[ search =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ echo
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ print '{
  "vendor": "cisco",
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "model": "",
  "version": "12.2",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "domain": "",
  "hostname": "campus-sw-access01"
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}

version 12.2
hostname campus-sw-access01

+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
object-group network Floor-Networks
 description End-user and service devices
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ echo
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
 network-object host 10.10.10.10'
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
+ print '{
  "vendor": "cisco",
 description End-user and service devices
 network-object host 192.168.0.1
  "model": "",
 network-object host 192.168.0.100
  "version": "16.9",
 network-object host 10.10.10.10'
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ echo -e --verbose
++ IFS=,
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
++ echo 192.168.1.10
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ export network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ network_extract__console=logs/console/network-extract.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ touch logs/console/network-extract.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ sed '1{/^[[:space:]]*$/d;}'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ IFS=,
++ echo 192.168.0.100
++ IFS=,
++ echo 192.168.100.100
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ local count=1
+ (( i = 0 ))
++ command -v -- ./scripts/network-extract.shell
  "domain": "",
+ (( i < count ))
+ echo
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute
  "hostname": "campus-sw-access01"
}

version 12.2
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
hostname campus-sw-access01
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ local SCRIPT_DIR=./scripts
+ declare -a execute

+ local script_filename=fortinet-configs.awk
+ newline
interface Vlan1
+ [[ false == true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ [[ true == true ]]
+ local count=1

+ (( i = 0 ))
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ echo
object-group network Floor-Networks
 description End-user and service devices
+ (( i++ ))
 network-object host 192.168.0.1
+ (( i < count ))
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ false == true ]]
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ result=0
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ -n {
+ [[ search =~ ^(search|s)$ ]]
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
  "vendor": "cisco",
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list
+ [[ export == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
  "model": "",
+ [[ search == \d\e\b\u\g ]]
+ serialize_objects
+ IFS==
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ serialize_objects
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'extracted_configuration={
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
++ which awk
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ result=0
++ which awk
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
++ IFS=,
++ echo 10.0.0.1
++ which awk
++ dirname -- ./scripts/network-extract.shell
++ which awk
++ which awk
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ [[ verbose =~ ^(console|o)$ ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ verbose =~ ^(platform|p)$ ]]
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ [[ verbose =~ ^(search|s)$ ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ 7 -eq 0 ]]
 network-object host 10.10.10.10'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q88jvy9bkx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console --export --verbose
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": ""
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "hostname": "fg-campus-core"
+ [[ verbose == \v\e\r\b\o\s\e ]]
}
+ local verbose=true

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ IFS=' 	
'

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ oIFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ for xitem in "${@}"
+ [[ -z '' ]]
+ dry_run=false
+ IFS==
+ read -r key value
+ [[ -z true ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ -z '' ]]
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ export console_output=false
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ console_output=false
  set comment "Remote sniper node"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ newline 2
+ newline
+ script_helper=false
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ local script_filename=fortinet-configs.awk
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
+ local parent_dir=reports/172.16.0.5/misc
+ local count=2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i = 0 ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list != *,* ]]
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ mapfile -t search_terms
+ echo
+ read -r key value
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ (( i < count ))
+ echo
+ serialize_objects
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/192.168.1.10/fortinet
+ [[ true == true ]]
+ local 'extracted_configuration={
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
  "vendor": "cisco",
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
  "model": "",
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list
  "version": "",
+ newline
  "domain": "",
+ local count=1
  "hostname": ""
}
+ (( i = 0 ))

object-group network Fortress-Wireless
 description Secure wireless access layer
+ (( i < count ))
 network-object host 172.18.1.20
+ echo
 network-object host 192.168.1.10'
+ (( i++ ))
+ (( i < count ))
+ result=0
++ IFS=,
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ -n {
++ echo 203.0.113.25
++ printf '%*s' 12 ''
++ IFS=,
++ echo 192.168.1.11
++ printf '%*s' 12 ''
++ basename reports/172.16.0.5/misc/fw3
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
++ which awk
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ local 'indent=            '
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
++ IFS=,
+ declare -a execute
++ echo 198.51.100.75
  "domain": "",
  "hostname": ""
}
+ local awk_bin=/usr/bin/awk

+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ newline
+ local count=1
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline 2
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
object-group network Fortress-Wireless
++ tr -d '\r'
 description Secure wireless access layer
 network-object host 172.18.1.20
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ declare -a execute
+ (( i < count ))
+ local 'indent=            '
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
 network-object host 192.168.1.10 ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local count=2
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline 2
+ echo
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local count=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local count=2
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ which awk
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i++ ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/misc/fw1.cfg'
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ true == true ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ true == true ]]
++ which awk
+ newline
+ local count=1
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local count=1
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ echo
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ (( i++ ))
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local 'indent=            '
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print '{
  "vendor": "cisco",
+ [[ search =~ ^(config|c)$ ]]
  "model": "",
+ (( i++ ))
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ true == true ]]
  "version": "",
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ search =~ ^(console|o)$ ]]
++ grep -v '^#'
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "domain": "",
  "hostname": ""
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
}
+ [[ search =~ ^(export|r)$ ]]

+ mkdir -p reports/172.16.0.5/misc/.objects
object-group network Fortress-Wireless
+ [[ search =~ ^(extract|x)$ ]]
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ -n {
+ echo
+ [[ search == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ newline
  "model": "",
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
  "version": "",
  "domain": "",
+ [[ search == \v\e\r\b\o\s\e ]]
  "hostname": ""
+ for xitem in "${@}"
}

+ IFS==
object-group network Fortress-Wireless
+ read -r key value
 description Secure wireless access layer
 network-object host 172.18.1.20
+ local count=1
 network-object host 192.168.1.10 ]]
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ (( i < count ))
+ echo -en '{
+ for xitem in "${@}"
+ local count=1
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ echo
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '                .cache/resources/misc/switch1.conf'
+ (( i++ ))
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ [[ false == true ]]
+ local count=1
++ IFS=,
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo 192.168.2.12
+ (( i < count ))
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ local parent_dir=reports/192.168.2.12/cisco
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ serialize_objects
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ declare -a execute
+ sed '1{/^[[:space:]]*$/d;}'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ newline 2
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local count=2
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
++ export divisor=--MTc0ODgzMzgzMzIyNDU4MDAwMAo--
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ basename reports/192.168.2.12/cisco/branch-isr-02
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
++ which awk
++ printf '%*s' 12 ''
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ local 'indent=            '
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
++ tr -d '\r'
++ printf '%*s' 12 ''
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local 'indent=            '
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ [[ false == true ]]
+ [[ true == true ]]
+ newline
+ newline
+ (( i++ ))
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ newline 2
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ serialize_objects
+ local 'indent=            '
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ grep -v '^#'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ newline
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=2
  "model": "",
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ (( i = 0 ))
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo
+ newline
  "version": "12.2",
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ local parent_dir=reports/10.10.10.10/cisco
  "domain": "",
+ (( i++ ))
  "hostname": "campus-sw-access01"
}
+ local awk_bin=/usr/bin/awk

+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i = 0 ))
version 12.2
+ local count=1
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
hostname campus-sw-access01
+ (( i < count ))
+ (( i = 0 ))
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ (( i < count ))
+ (( i < count ))

+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ echo
+ echo
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ case "${target_platform}" in
object-group network Floor-Networks
+ (( i++ ))
+ echo
 description End-user and service devices
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
 network-object host 192.168.0.1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 192.168.0.100
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 network-object host 10.10.10.10'
+ awk -v divisor=--MTc0ODgzMzgzMjcxMzM5NDAwMAo-- '
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  BEGIN {
                    in_json_header = 0;
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                    blk = "";
                  }
+ [[ false == true ]]
+ [[ true == true ]]
                  /^[[:space:]]*$/ { next }
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ newline
                    if (in_json_header == 1) {
+ result=0
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
                      in_json_header = 0;
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
                      next;
                    }
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local count=1
                  }
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -n {
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
                  (in_json_header == 1) { next }
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ newline
+ local 'extracted_configuration={
+ (( i = 0 ))
+ local 'extracted_configuration={
+ newline
  "vendor": "cisco",
  "vendor": "cisco",
+ local count=1
  "model": "ASA",
                  /^[^[:space:]]/ {
+ local target_config=.cache/resources/misc/fw1.cfg
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
  "version": "9.12(4)",
+ [[ config =~ ^(console|o)$ ]]
                    blk = $0;
                    next;
  "domain": "global.dmz.example.net",
                  }
  "vendor": "cisco",
+ [[ config =~ ^(export|r)$ ]]
                  {
  "model": "",
                    blk = blk divisor " " $0;
+ [[ config =~ ^(extract|x)$ ]]
                  }
  "version": "",
                  END {
  "domain": "",
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ config =~ ^(logger|l)$ ]]
  "hostname": ""
                ' reports/172.16.0.5/misc/fw3.cfg
}
+ (( i < count ))

object-group network Fortress-Wireless
+ [[ config =~ ^(platform|p)$ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
  "model": "",
 description Secure wireless access layer
+ [[ config =~ ^(search|s)$ ]]
  "version": "12.2",
 network-object host 172.18.1.20
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ config == \h\e\l\p ]]
  "domain": "",
+ case "${target_platform}" in
  "hostname": "campus-sw-access01"
+ [[ config == \d\e\b\u\g ]]
+ local count=1
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ echo
+ (( i < count ))
+ IFS==
+ (( i++ ))
+ echo
+ read -r key value
+ awk -v divisor=--MTc0ODgzMzgzMjcyODQ1MjAwMAo-- '
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
  "hostname": "dmz-fw2-backup"
                    BEGIN {
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
                      in_json_header = 0;
+ (( i++ ))
+ local 'extracted_configuration={
+ message '             -f ./scripts/extract/cisco-configs.awk \'
                      blk = "";
}
                    }
 network-object host 192.168.1.10'
}
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "vendor": "cisco",
+ echo
  "model": "",
+ (( i < count ))

  "version": "",
                    /^[[:space:]]*$/ { next }
+ result=0

+ serialize_objects
  "domain": "",
+ (( i++ ))
                    /^{$/ { in_json_header = 1; next }
ASA Version 9.12(4)
  "hostname": ""
+ [[ -n {
hostname dmz-fw2-backup
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ cat -n reports/172.18.1.20/misc/fw1.cfg
domain-name global.dmz.example.net
                    /^}$/ {
version 12.2
                      if (in_json_header == 1) {

+ (( i < count ))
                        in_json_header = 0;
  "vendor": "cisco",
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
}
hostname campus-sw-access01
interface GigabitEthernet0/1
  "model": "",


  "version": "",
object-group network Floor-Networks
  "domain": "",
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
  "hostname": ""
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
object-group network Avengers-Office
 nameif inside
 description End-user and service devices
++ printf '%*s' 12 ''
++ basename reports/10.10.10.10/cisco/campus-sw-access01
}
                        next;
 ip address 192.168.100.100 255.255.255.0
 description VLAN access layer
 network-object host 192.168.0.1
                      }
                    }
                    (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
                      next;
                    }
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
                    {
                      blk = blk divisor " " $0;
                    }
 description Inside LAN segment
 network-object host 192.168.0.100
                    END {

 network-object host 10.10.10.10 ]]

object network Titan-WLAN-Host
                      if (blk != "" && !seen[blk]++) print blk;
 host 192.168.100.100
                    }
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
 description Backup inside NAT IP
object-group network Fortress-Wireless
+ local 'indent=            '
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg

+ sed '/^[[:space:]]*$/d'
object-group network Sector-Wireless
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
 description Secure wireless access layer
 network-object host 172.18.1.20
+ newline
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
 network-object host 192.168.1.10 ]]
 description Staff WiFi clients
+ [[ true == true ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ result=0
+ local count=1
+ (( i = 0 ))
 network-object host 192.168.100.100
+ (( i < count ))
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ echo
+ [[ -n {
  "vendor": "cisco",
  "version": "9.12(4)",
+ (( i++ ))
  "model": "",
+ (( i < count ))
  "domain": "global.dmz.example.net",
  "version": "",
  "hostname": "dmz-fw2-backup"
  "domain": "",
+ newline
  "hostname": ""
}
}


ASA Version 9.12(4)
object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
++ echo -e --export
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ print '{
  "vendor": "cisco",
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "model": "",
  "domain": "",
++ echo -e --verbose
  "version": "",
  "hostname": "campus-sw-access01"
}

  "domain": "",
version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
  "hostname": ""
}
 network-object host 192.168.0.1

 network-object host 192.168.0.100
object-group network Fortress-Wireless
 network-object host 10.10.10.10'
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ [[ -n {
  "vendor": "cisco",
  "hostname": "campus-sw-access01"
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
}

 network-object host 192.168.1.10 ]]
version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
+ echo -en '{
  "vendor": "cisco",
 description End-user and service devices
  "model": "",
 network-object host 192.168.0.1
  "version": "",
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
  "domain": "",
  "hostname": ""
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
}

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Fortress-Wireless
 description Secure wireless access layer
+ echo -en '{
 network-object host 172.18.1.20
  "vendor": "cisco",
 network-object host 192.168.1.10'
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/172.16.1.6/fortinet
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ newline
}

object-group network Avengers-Office
+ local count=1
 description VLAN access layer
+ (( i = 0 ))
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ (( i < count ))
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ local parent_dir=reports/192.168.0.1/cisco
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ conf == \c\o\n\f ]]
+ case "${target_platform}" in
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ (( i = 0 ))
+ (( i < count ))
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ result=0
+ awk -v divisor=--MTc0ODgzMzgzMjc3OTg2ODAwMAo-- '
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ 0 -ne 0 ]]
+ echo
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
                  BEGIN {
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ true == true ]]
                    in_json_header = 0;
+ (( i++ ))
+ print '{
                    blk = "";
+ (( i < count ))
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
                  }
                  /^[[:space:]]*$/ { next }
  "vendor": "cisco",
                  /^{$/ { in_json_header = 1; next }
  "model": "ASA",
                  /^}$/ {
  "version": "9.12(4)",
                    if (in_json_header == 1) {
  "domain": "global.dmz.example.net",
                      in_json_header = 0;
  "hostname": "dmz-fw2-backup"
                      next;
}
                    }

                  }
ASA Version 9.12(4)
                  (in_json_header == 1) { next }
hostname dmz-fw2-backup
                  /^[^[:space:]]/ {
domain-name global.dmz.example.net
                    if (blk != "" && !seen[blk]++) print blk "\n";

+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ serialize_objects
+ set -euo pipefail
                    blk = $0;
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ export LC_ALL=C
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
                    next;
interface GigabitEthernet0/1
+ LC_ALL=C
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
                  }
 nameif inside
+ newline
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
                  {
                    blk = blk divisor " " $0;

                  }
object network Titan-WLAN-Host
                  END {
 host 192.168.100.100
                    if (blk != "" && !seen[blk]++) print blk "\n";
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
                  }
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n {
+ echo
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ (( i++ ))

+ (( i < count ))
ASA Version 9.12(4)
+ [[ extract =~ ^(config|c)$ ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ [[ extract =~ ^(console|o)$ ]]

interface GigabitEthernet0/1
 nameif inside
+ sed '/^[[:space:]]*$/d'
 ip address 192.168.100.100 255.255.255.0
+ [[ extract =~ ^(export|r)$ ]]
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
++ basename reports/192.168.0.1/cisco/campus-sw-access01
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ extract =~ ^(extract|x)$ ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
hostname dmz-fw2-backup
+ [[ extract =~ ^(logger|l)$ ]]
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
+ local target_config=.cache/resources/misc/fw3.cfg
 ip address 192.168.100.100 255.255.255.0
+ [[ config =~ ^(console|o)$ ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ [[ extract =~ ^(platform|p)$ ]]
 description Inside LAN segment
  "model": "FortiGate-200F",
+ sed '1{/^[[:space:]]*$/d;}'

object network Titan-WLAN-Host
 host 192.168.100.100
  "version": "",
  "domain": ""
 description Backup inside NAT IP
+ [[ extract =~ ^(search|s)$ ]]

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
  "hostname": "fg-campus-core"
 network-object host 10.10.10.10'
+ [[ export =~ ^(console|o)$ ]]
++ dirname reports/10.0.0.1/misc/switch3.conf
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/misc/.objects/fw3.list
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
end'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
#hostname="fg-campus-core"
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ newline 2
+ newline 2
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
+ newline 2
  set subnet 192.168.1.11 255.255.255.255
+ local count=2
  set comment "Captain America’s secure endpoint"
 next
+ (( i = 0 ))
end ]]
+ (( i < count ))
+ local count=2
+ echo
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=2
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ cat -n
+ echo
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
+ [[ extract =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ echo
  "vendor": "cisco",
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ (( i++ ))
  "model": "ASA",
+ echo
+ [[ extract =~ ^(export|r)$ ]]
  "version": "9.12(4)",
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ (( i < count ))
  "domain": "global.dmz.example.net",
+ local 'extracted_configuration={
  "hostname": "dmz-fw2-backup"
  "vendor": "cisco",
}
  "model": "",

+ (( i++ ))
+ for xitem in "${@}"
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
ASA Version 9.12(4)
+ [[ verbose =~ ^(logger|l)$ ]]
  "version": "16.9",
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
hostname dmz-fw2-backup
  "domain": "",
+ [[ verbose =~ ^(config|c)$ ]]
  "hostname": "branch-isr-02"
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
domain-name global.dmz.example.net
+ (( i < count ))
}
+ IFS==
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ read -r key value
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ export == \d\e\b\u\g ]]
+ local count=1

+ echo

+ output_dir=reports/10.0.0.1/misc
+ [[ true == true ]]
version 16.9
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ newline
+ local count=1
+ cat -n
+ (( i = 0 ))
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
+ (( i < count ))
+ echo
+ [[ ! -d reports/10.0.0.1/misc ]]
hostname branch-isr-02
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --platform=cisco
}

+ echo
object network Hydra-Link
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i++ ))
+ newline 2
+ case "${target_platform}" in

+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ local parent_dir=reports/172.18.1.20/misc
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ cat -n reports/10.0.0.1/misc/switch1.conf
 host 198.51.100.75
 description Branch NAT egress

ASA Version 9.12(4)
+ awk -v divisor=--MTc0ODgzMzgzMjcyNjU1MDAwMAo-- '
object-group network Hydra-Edge
                  BEGIN {
 description Remote site uplink
                    in_json_header = 0;
 network-object host 192.168.2.12
hostname dmz-fw2-backup
 network-object host 198.51.100.75'
domain-name global.dmz.example.net
                    blk = "";
+ local count=2
+ [[ export == \d\r\y\-\r\u\n ]]
+ result=0
+ print '{
+ result=0
                  }
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "vendor": "cisco",
                  /^[[:space:]]*$/ { next }
  "model": "",
  "model": "FortiGate-200F",
+ (( i = 0 ))
+ [[ extract =~ ^(logger|l)$ ]]
  "version": "",
                  /^{$/ { in_json_header = 1; next }
+ [[ 0 -ne 0 ]]
                  /^}$/ {
+ newline
  "domain": ""

  "version": "16.9",
                    if (in_json_header == 1) {
+ (( i < count ))
  "hostname": "fg-campus-core"
+ echo
}

#hostname="fg-campus-core"
                      in_json_header = 0;
+ (( i++ ))
                      next;
                    }
#model="FortiGate-200F"
+ (( i < count ))
                  }
+ local count=1
                  (in_json_header == 1) { next }
object network Sentinel-NAT
  "domain": "",
                  /^[^[:space:]]/ {
 host 203.0.113.25
  "hostname": "branch-isr-02"
}
                    if (blk != "" && !seen[blk]++) print blk "\n";


                    blk = $0;
+ [[ true == true ]]
config firewall address
                    next;
 edit "Cap-HQ"
+ echo
  set subnet 192.168.1.11 255.255.255.255
                  }
 description Corporate NAT edge ]]
                  {
version 16.9
                    blk = blk divisor " " $0;
+ (( i = 0 ))
  set comment "Captain America’s secure endpoint"
                  }
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
                  END {
+ (( i++ ))
hostname branch-isr-02
+ (( i < count ))
                    if (blk != "" && !seen[blk]++) print blk "\n";

                  }
+ (( i < count ))
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ -n {
  "vendor": "fortinet",
+ echo
+ local 'extracted_configuration={
+ [[ true == true ]]
  "model": "FortiGate-200F",
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
}
  "version": "v7.2.5.F",

#hostname="fg-campus-core"
+ sed '/^[[:space:]]*$/d'
object network Hydra-Link
#model="FortiGate-200F"
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ (( i++ ))

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  "domain": ""
  "hostname": "fg-branch-vpn-01"
  set comment "Captain America’s secure endpoint"
 host 198.51.100.75
 next
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
end ]]
}
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ echo -en '{
  "vendor": "fortinet",

  "model": "FortiGate-200F",
  "version": "",
 description Branch NAT egress
#hostname="fg-branch-vpn-01"
+ (( i < count ))

#model="FortiGate-60F"
  "domain": ""
+ newline
object-group network Hydra-Edge
  "hostname": "fg-campus-core"
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
}
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local count=1


+ (( i = 0 ))
 description Remote site uplink
+ sed '1{/^[[:space:]]*$/d;}'
config system interface
+ (( i < count ))
 network-object host 192.168.2.12
 edit "internal"
#hostname="fg-campus-core"
  set ip 192.168.2.12 255.255.255.0
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ newline
+ (( i = 0 ))
#model="FortiGate-200F"
  set alias "User LAN"
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=1
 network-object host 198.51.100.75 ]]
++ basename reports/172.18.1.20/misc/fw1
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ echo

 next
+ [[ extract =~ ^(platform|p)$ ]]
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
end'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ mktemp -d
end

+ echo
+ (( i < count ))
config firewall address
+ echo
+ (( i++ ))
 edit "Branch-Gateway"
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
  set subnet 192.168.2.12 255.255.255.255
+ (( i++ ))
+ (( i < count ))
  set comment "Primary LAN gateway"
+ for xitem in "${@}"
 next
end'
+ (( i < count ))
+ result=0
+ [[ -n {
+ return 0
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ true == true ]]
}
+ newline
+ local count=1

+ (( i < count ))
+ (( i = 0 ))
#hostname="fg-branch-vpn-01"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console
#model="FortiGate-60F"
+ (( i < count ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console ]]
+ IFS==
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))

+ read -r key value
+ print '{
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console ]]
+ [[ verbose =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ echo
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

config system interface
 edit "internal"
ASA Version 9.12(4)
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
 next
end
+ echo -en '{
  "vendor": "cisco",
+ case "${target_file}" in
  "model": "ASA",
+ cat -n
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
+ print '{
  "vendor": "cisco",
 host 203.0.113.25
  "model": "",
+ (( i++ ))
  "version": "16.9",
 description Corporate NAT edge'
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress
++ dirname -- ./scripts/network-extract.shell

object-group network Hydra-Edge
 description Remote site uplink
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ sed '1{/^[[:space:]]*$/d;}'
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]

+ return 0
config firewall address
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
 edit "Branch-Gateway"
+ [[ platform =~ ^(export|r)$ ]]
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console
 next
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console ]]
+ newline
+ local target_platform=cisco
end ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console
+ mkdir -p reports/172.18.1.20/misc/.objects
+ local count=1
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ platform == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ newline 2
+ (( i < count ))
+ IFS==
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_platform}" in
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ case "${target_file}" in
+ local count=2
+ awk -v divisor=--MTc0ODgzMzgzMjc0NjgxODAwMAo-- '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
                    BEGIN {
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
                      in_json_header = 0;
                      blk = "";
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ [[ false == true ]]
                    }
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
                    /^[[:space:]]*$/ { next }
+ (( i < count ))
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
+ [[ true == true ]]
                      if (in_json_header == 1) {
+ echo
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
                        in_json_header = 0;
                        next;
                      }
+ (( i++ ))
+ serialize_objects
                    }
+ (( i < count ))
                    (in_json_header == 1) { next }
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ echo
                    /^#(hostname|model|config-version)=/ { next }
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ (( i++ ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ result=0
                    /^config / { print $0; next }
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ extract == \v\e\r\b\o\s\e ]]
                    /^end$/    { print $0 "\n"; next }
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
                    /^ edit / {
+ (( i < count ))
+ [[ 0 -ne 0 ]]
                      if (blk != "" && !seen[blk]++) print blk;
+ serialize_objects
+ [[ true == true ]]
                      blk = $0;
                      next;
+ [[ true == true ]]
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
                    {
                      blk = blk divisor " " $0;
                    }
                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ cat -n
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ newline
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ local count=1
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ case "${target_platform}" in
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ (( i = 0 ))
+ awk -v divisor=--MTc0ODgzMzgzMjc5MDE4NjAwMAo-- '
                  BEGIN {
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ newline
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local count=1
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
++ dirname reports/10.0.0.1/misc/switch1.conf
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console
+ [[ -n {
++ dirname reports/192.168.1.10/misc/fw1.cfg
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ [[ true == true ]]
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ newline 2
+ newline
end ]]
+ local count=1
+ echo -en '{
  "vendor": "fortinet",
+ (( i = 0 ))
  "model": "FortiGate-60F",
+ (( i < count ))
  "version": "v7.2.5.F",
  "domain": ""
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ echo
  "hostname": "fg-branch-vpn-01"
+ sed '/^[[:space:]]*$/d'
}
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]

+ local count=2
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ (( i = 0 ))
#hostname="fg-branch-vpn-01"
+ [[ true == true ]]
#model="FortiGate-60F"
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))

config system interface
+ newline 2
+ echo
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ (( i < count ))
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ [[ false == true ]]
+ serialize_objects
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ echo
+ local count=2
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ which awk
+ newline
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console
+ (( i++ ))
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--fw3.cfg.console
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ serialize_objects
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
+ (( i++ ))
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ return 0
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local parent_dir=reports/10.0.0.1/misc
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local parent_dir=reports/192.168.1.10/misc
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ newline
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console
+ debug=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat -n
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yq6jSl3con
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yq6jSl3con
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ extract =~ ^(config|c)$ ]]
+ awk -v divisor=--MTc0ODgzMzgzMjc5MDQ0NjAwMAo-- '
+ newline
                  BEGIN {
                    in_json_header = 0;
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline
+ [[ -z '' ]]
                    blk = "";
+ export 'nl=\n'
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ dry_run=false
                  }
+ nl='\n'
                  /^[[:space:]]*$/ { next }
+ local count=1
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ (( i = 0 ))
                      in_json_header = 0;
+ (( i = 0 ))
                      next;
+ (( i < count ))
                    }
+ echo
+ (( i < count ))
                  }
+ (( i++ ))
                  (in_json_header == 1) { next }
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
                  /^[^[:space:]]/ {
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
++ basename reports/10.0.0.1/misc/switch1
+ [[ logger =~ ^(console|o)$ ]]
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/misc/fw1.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ basename reports/192.168.1.10/misc/fw1
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ IFS==
+ read -r key value
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ newline 2
++ echo -e --platform=fortinet
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ local parent_dir=reports/192.168.100.100/cisco
+ (( i++ ))
+ [[ true == true ]]
+ newline
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ IFS=,
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ return 0
++ echo 10.0.0.1
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ (( i++ ))
++ divisor=--MTc0ODgzMzgzMzIyNDU4MDAwMAo--
+ (( i < count ))
+ return 0
+ local first_search_entry=172.16.1.6
+ source ./scripts/devops-helpers.shell
+ local last_search_entry=172.16.1.6
++ [[ -n '' ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ true == true ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local verbose=true
+ [[ config =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ -z '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ debug=false
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ config =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console
++ echo -e --export
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console ]]
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
+ case "${target_file}" in
+ dry_run=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3ghiAqFMQe/network-extract--perimeter-fw1.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ -z true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console ]]
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console ]]
+ export console_output=false
+ case "${target_file}" in
+ console_output=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--perimeter-fw1.cfg.console
+ [[ -z true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ [[ 5 -lt 4 ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ search_terms=()
+ IFS=' 	
+ declare -a search_terms
'
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ [[ -z '' ]]
+ debug=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list != *,* ]]
+ [[ -z '' ]]
+ mapfile -t search_terms
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console ]]
+ set -euo pipefail
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console
++ alias parse-listings--helper=parse_listings__helper
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console
+ export LC_ALL=C
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console ]]
+ [[ config == \d\e\b\u\g ]]
+ LC_ALL=C
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ dry_run=false
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z true ]]
+ echo
+ [[ -z '' ]]
+ (( i++ ))
+ export console_output=false
+ (( i < count ))
+ console_output=false
+ [[ -z true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ [[ -z '' ]]
+ script_helper=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ false == true ]]
+ [[ false == true ]]
+ case "${target_file}" in
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ IFS==
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ read -r key value
++ which awk
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]]
+ alias serialize-object=serialize_objects
++ IFS=,
++ echo 192.168.100.100
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ -z x ]]
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-configs--ips.list ]'
+ serialize_objects
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ export logs_location=logs
+ search_terms=()
+ (( i < count ))
+ logs_location=logs
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list != *,* ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ mapfile -t search_terms
+ mkdir -p logs/console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ cat -n
+ newline 2
+ declare -a execute
+ newline
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ echo
+ local count=2
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WyzfDaZAOI ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WyzfDaZAOI
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ platform =~ ^(export|r)$ ]]
+ newline
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ tr -d '\r'
+ [[ extract == \h\e\l\p ]]
+ case "${target_platform}" in
+ [[ extract == \d\e\b\u\g ]]
++ which awk
+ result=0
+ exit 0
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.59JgmjRbOV ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ awk -v divisor=--MTc0ODgzMzgzMjY0OTcyODAwMAo-- '
+ [[ extract == \v\e\r\b\o\s\e ]]
                  BEGIN {
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.59JgmjRbOV
+ [[ extract =~ ^(extract|x)$ ]]
                    in_json_header = 0;
+ for xitem in "${@}"
                    blk = "";
                  }
+ IFS==
                  /^[[:space:]]*$/ { next }
+ read -r key value
+ [[ -z '' ]]
++ IFS=,
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
++ echo 192.0.2.50
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ESo8qTkx1n
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ESo8qTkx1n
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ tr -d '\r'
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
+ [[ true == true ]]
+ newline
++ alias log-error=log_error
+ local count=1
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ sed '/^[[:space:]]*$/d'
++ grep -v '^\s*$'
++ grep -v '^#'
+ (( i = 0 ))
++ alias pause=pause
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console ]]
++ alias print-line=print
+ return 0
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.isho06rvbK/network-extract--switch1.conf.console
++ alias print-file=print_file
++ echo -e --verbose
++ alias relative-configpath=relative_configpath
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
+ [[ true == true ]]
++ alias validate-address=validate_address
++ which awk
++ alias warning-message=warning
++ echo -e --platform=fortinet
++ export LC_ALL=C
++ LC_ALL=C
+ [[ true == true ]]
++ export 'nl=\n'
++ nl='\n'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console
++ export cache_location=.cache
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ case "${target_file}" in
++ mkdir -p logs/console logs/jobs
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--branch-isr-02.cfg.console
+ [[ extract =~ ^(export|r)$ ]]
+ local parent_dir=reports/192.168.0.100/cisco
+ touch logs/console/network-extract.console
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ local first_search_entry=10.10.10.10
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ newline
+ local last_search_entry=10.10.10.10
+ [[ true == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local count=1
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ echo
+ [[ extract == \h\e\l\p ]]
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ newline
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ local count=1
+ (( i = 0 ))
+ [[ conf == \c\o\n\f ]]
+ (( i < count ))
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ (( i < count ))
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ serialize_objects
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ IFS==
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ case "${target_platform}" in
+ (( i < count ))
+ echo
+ awk -v divisor=--MTc0ODgzMzgzMjY1MDQ1NDAwMAo-- '
                    BEGIN {
+ (( i++ ))
                      in_json_header = 0;
+ (( i < count ))
                      blk = "";
                    }
+ local first_search_entry=10.0.2.3
                    /^[[:space:]]*$/ { next }
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local last_search_entry=10.0.2.3
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
                      }
+ [[ -z cisco ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ true == true ]]
                    }
+ [[ true == true ]]
                    (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ newline
                      next;
++ printf '%*s' 12 ''
                    }
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ local count=1
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
                    {
+ export console_output=false
++ alias detect-vendor=detect_vendor
                      blk = blk divisor " " $0;
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
+ case "${target_platform}" in
                    }
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ] ]]
                    END {
+ local target_platform=fortinet
                      if (blk != "" && !seen[blk]++) print blk;
                    }
+ [[ platform =~ ^(search|s)$ ]]
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ awk -v divisor=--MTc0ODgzMzgzMjY0OTg1OTAwMAo-- '
+ [[ platform == \v\e\r\b\o\s\e ]]
                  BEGIN {
+ (( i < count ))
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
+ for xitem in "${@}"
                    in_json_header = 0;
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
                    blk = "";
                  }
+ local 'indent=            '
                  /^[[:space:]]*$/ { next }
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ (( i++ ))
                    if (in_json_header == 1) {
+ (( i < count ))
                      in_json_header = 0;
                      next;
                    }
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-configs--ips.list ]'
+ local awk_bin=/usr/bin/awk
                  }
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ IFS=,
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local count=1
                  (in_json_header == 1) { next }
+ ((  count == 0  ))
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
                    blk = $0;
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
                    next;
++ echo 192.168.0.1
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ newline
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i = 0 ))
++ dirname reports/172.16.1.6/misc/switch3.conf
+ echo
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ result=0
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ exit 0
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ search_terms=()
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h8kaaqeLTx ]]
+ declare -a search_terms
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list != *,* ]]
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h8kaaqeLTx
+ [[ false == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z cisco ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ cat -n
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local target_platform=fortinet
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ for xitem in "${@}"
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i = 0 ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ echo
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ IFS==
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i++ ))
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ read -r key value
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ (( i < count ))
+ [[ true == true ]]
++ echo -e --platform=cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console
++ printf '%*s' 12 ''
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--access-sw1-west.cfg.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.q88jvy9bkx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ local 'indent=            '
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ exit 0
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QoBFql0jC5 ]]
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QoBFql0jC5
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ cfg == \c\f\g ]]
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ console_output=false
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
++ alias exit-error=exit_error
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ IFS==
+ local parent_dir=reports/10.0.2.3/misc
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ output_dir=reports/172.16.1.6/misc
+ newline
+ [[ ! -d reports/172.16.1.6/misc ]]
+ local count=1
++ alias list-file=list_file
+ (( i = 0 ))
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ echo
+ mapfile -t search_terms
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ serialize_objects
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console ]]
+ result=0
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -z '' ]]
+ [[ 0 -ne 0 ]]
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ newline
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ local count=1
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ search_terms=()
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ local export_objects=true
+ result=0
++ alias log-error=log_error
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ basename reports/10.0.2.3/misc/fw1
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ return 0
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ result=0
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ exit 0
+ IFS==
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ dirname -- ./scripts/network-extract.shell
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Vl2XO4PWH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3Vl2XO4PWH
+ read -r key value
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ mkdir -p reports/10.0.2.3/misc/.objects
+++ date +%s%N
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ read -r key value
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ output_dir=reports/198.51.100.75/cisco
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ logger =~ ^(config|c)$ ]]

+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
config system interface
+ [[ logger =~ ^(export|r)$ ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
 edit "wifi"
+ [[ -z true ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ logger =~ ^(logger|l)$ ]]
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console
end
+ [[ logger =~ ^(platform|p)$ ]]

+ [[ logger =~ ^(search|s)$ ]]
config firewall address
+ local awk_bin=/usr/bin/awk
+ declare -a search_terms
+ cat -n
 edit "Titan-WLAN-Host"
+ [[ logger == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
  set subnet 192.168.100.100 255.255.255.255
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list != *,* ]]
+ [[ logger == \d\e\b\u\g ]]
  set comment "Guest WiFi node"
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
 next
+ [[ logger == \d\r\y\-\r\u\n ]]
+ mapfile -t search_terms
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ for xitem in "${@}"
end
+ [[ export =~ ^(platform|p)$ ]]
+++ base64
+ [[ search =~ ^(config|c)$ ]]

+ IFS==
config firewall address
+ read -r key value
 edit "Wanda-Field"
+ [[ search =~ ^(console|o)$ ]]
  set subnet 192.168.100.100 255.255.255.255
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ case "${target_platform}" in
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
  set comment "Wanda’s chaos relay"
 next
end'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ result=0
+ awk -v divisor=--MTc0ODgzMzgzMjY5NjYzNDAwMAo-- '
                  BEGIN {
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -n {
                    in_json_header = 0;
  "vendor": "fortinet",
                    blk = "";
+ for xitem in "${@}"
                  }
  "model": "FortiGate-200F",
                  /^[[:space:]]*$/ { next }
  "version": "",
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ IFS==
                  }
+ read -r key value
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
  "domain": ""
  "hostname": "fg-campus-core"
}
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ cat -n

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+++ tr -dc a-zA-Z0-9
end
++ dirname reports/10.0.2.3/misc/fw3.cfg

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ local 'extracted_configuration={
+ sed '/^[[:space:]]*$/d'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
}

ASA Version 9.14(3)
++ sed -e '1s|^\(-\)\{1,\}||'
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ newline
++ echo -e --export
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
+ [[ true == true ]]
 network-object host 192.0.2.50
+ local count=1
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console
+ print '{
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console ]]
  "vendor": "fortinet",
+ case "${target_file}" in
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hBGd6nrjOC/network-extract--switch1.conf.console
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

+ (( i < count ))
config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ return 0
end'
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ true == true ]]
++ which awk
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
  "version": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": ""
+ output_dir=reports/10.0.2.3/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console
  "hostname": "fg-campus-core"
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ ! -d reports/10.0.2.3/misc ]]
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
++ export divisor=--MTc0ODgzMzgzMzM4NzYzNTAwMAo--
+ newline
++ divisor=--MTc0ODgzMzgzMzM4NzYzNTAwMAo--
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console ]]
+ source ./scripts/devops-helpers.shell
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console
 next
end
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console ]]

config firewall address
+ case "${target_file}" in
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console
 next
++ [[ -n '' ]]
end ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ echo -en '{
+ echo
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ (( i++ ))
  "version": "",
+ (( i < count ))
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ return 0

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end
+ [[ true == true ]]

config firewall address
 edit "Wanda-Field"
++ alias parse-listings--helper=parse_listings__helper
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console
 next
end'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console ]]
+ print '{
  "vendor": "cisco",
+ case "${target_file}" in
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ alias network-configs--helper=network_configs__helper
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console
 network-object host 192.0.2.50
+ case "${target_platform}" in
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ alias network-extract--helper=network_extract__helper
+ awk -v divisor=--MTc0ODgzMzgzMjY5NzA4NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ [[ -n {
  "vendor": "cisco",
                  /^[[:space:]]*$/ { next }
  "model": "ASA",
                  /^{$/ { in_json_header = 1; next }
  "version": "9.14(3)",
                  /^}$/ {
  "domain": "edge.dc.example.com",
                    if (in_json_header == 1) {
  "hostname": "perimeter-fw1"
                      in_json_header = 0;
}
                      next;

                    }
ASA Version 9.14(3)
                  }
hostname perimeter-fw1
                  (in_json_header == 1) { next }
domain-name edge.dc.example.com
                  /^[^[:space:]]/ {

                    if (blk != "" && !seen[blk]++) print blk "\n";
+ alias serialize-object=serialize_objects
object-group network Avengers-DMZ
                    blk = $0;
                    next;
 description Public access layer
 network-object host 192.0.2.50
                  }
 network-object host 203.0.113.25
                  {
 network-object 192.168.2.0 255.255.255.0 ]]
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

++ command -v -- ./scripts/network-extract.shell
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ sed '/^[[:space:]]*$/d'
+ alias parse-cisco=main
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z x ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ mkdir -p logs/console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger == \v\e\r\b\o\s\e ]]
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias log-warn=log_warn
+ [[ export =~ ^(search|s)$ ]]
++ alias print-message=message
+ [[ export =~ ^(config|c)$ ]]
+ [[ export == \h\e\l\p ]]
++ alias print-newline=newline
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ grep -v '^\s*$'
+ IFS==
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ alias pause=pause
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ alias print-file=print_file
+ [[ export == \d\r\y\-\r\u\n ]]
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^#'
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TIit0b1mCe ]]
++ dirname -- ./scripts/network-extract.shell
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TIit0b1mCe
+ newline 2
+ newline 2
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
++ IFS=,
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
++ echo 172.16.1.6
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ local count=2
+ [[ config =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ local count=2
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console ]]
+ for xitem in "${@}"
+ (( i++ ))
+ echo
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ IFS==
+ read -r key value
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ declare -a execute
+ echo
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ echo -e --export
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console ]]
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ script_filename=network-extract.shell
+ case "${target_file}" in
+ script_filename=network-extract
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ export network_extract__console=logs/console/network-extract.console
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ network_extract__console=logs/console/network-extract.console
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--dmz-fw2-backup.cfg.console
+ touch logs/console/network-extract.console
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ newline
++ alias relative-configpath=relative_configpath
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ local count=1
+ export console_output=false
+ (( i = 0 ))
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ cat -n
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local parent_dir=reports/192.168.1.11/cisco
+ local SCRIPT_DIR=./scripts
++ which awk
++ printf '%*s' 12 ''
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ which awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
++ alias system-metrics=system_metrics
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ console_output=false
+ case "${target_file}" in
+ local first_search_entry=10.10.10.10
+ cat reports/10.0.2.3/misc/.objects/fw1.list
+ local last_search_entry=10.10.10.10
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ alias validate-address=validate_address
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ search_terms=()
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ declare -a search_terms
++ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ cat -n
++ which awk
+ newline
++ echo -e --verbose
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ ((  count == 0  ))
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ return 0
+ [[ 7 -eq 0 ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ result=0
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local 'indent=            '
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ exit 0
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jzt0lefvch/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hgajdx5jDR ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Hgajdx5jDR
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console --export --verbose
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console
+ [[ export == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ [[ export == \d\e\b\u\g ]]
+ exit 0
+ oIFS=' 	
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RLmD0bF9nm ]]
'
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RLmD0bF9nm
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ nl='\n'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list != *,* ]]
++ mkdir -p logs/console logs/jobs
+ newline
+ mapfile -t search_terms
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ false == true ]]
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ verbose =~ ^(platform|p)$ ]]
+ serialize_objects
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ local verbose=true
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ IFS=' 	
'
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ serialize_objects
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ printf '%*s' 12 ''
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list != *,* ]]
+ [[ extract =~ ^(config|c)$ ]]
+ mapfile -t search_terms
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ newline
++ IFS=,
+ local count=1
+ read -r key value
+ local count=1
++ echo 10.0.2.3
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ return 0
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ tr -d '\r'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ logger == \h\e\l\p ]]
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ newline
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console
+ (( i < count ))
+ local count=1
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
+ declare -a execute
+ (( i++ ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch3.conf'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ newline
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
++ grep -v '^\s*$'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console
++ grep -v '^#'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--access-sw1-west.cfg.console
++ IFS=,
++ echo 10.10.10.10
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ declare -a execute
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ tr -d '\r'
+ IFS==
+ read -r key value
++ which awk
+ local parent_dir=reports/192.168.100.100/fortinet
+ local parent_dir=reports/192.0.2.50/cisco
++ echo -e --platform=fortinet
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
++ grep -v '^\s*$'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ mkdir -p reports/192.168.1.11/cisco/.objects
++ tr -d '\r'
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ for xitem in "${@}"
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
++ grep -v '^\s*$'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z fortinet ]]
+ [[ search == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ basename reports/192.0.2.50/cisco/perimeter-fw1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ basename reports/192.168.100.100/fortinet/fg-campus-core
+ [[ -z true ]]
++ grep -v '^#'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
+ script_helper=false
+ [[ false == true ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]]
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console ]]
+ local first_search_entry=10.10.10.10
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hjsTXcnnif ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console
+ local last_search_entry=10.10.10.10
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hjsTXcnnif
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw1.cfg.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local awk_bin=/usr/bin/awk
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local count=1
+ IFS==
+ return 0
+ [[ true == true ]]
+ newline
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local count=1
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo
+ [[ platform =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local first_search_entry=203.0.113.25
+ local target_platform=fortinet
+ local last_search_entry=203.0.113.25
+ [[ platform =~ ^(search|s)$ ]]
++ printf '%*s' 12 ''
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
++ actions_logfile=./logs/console/run.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
++ touch ./logs/console/run.console
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ] ]]
+ read -r key value
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ local 'indent=            '
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ true == true ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ local count=1
+ IFS=' 	
+ ((  count == 0  ))
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ local 'extracted_configuration={
+ newline
+ (( i = 0 ))
+ read -r key value
  "vendor": "cisco",
+ local count=1
  "model": "",
  "version": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ (( i = 0 ))
  "domain": "",
+ (( i = 0 ))
+ echo
  "hostname": ""
+ (( i++ ))
+ (( i < count ))
}
'
+ (( i < count ))

+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console
+ (( i++ ))
interface Vlan2
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
 ip address 172.16.1.6 255.255.255.0'
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
++ tr -d '\r'
+ [[ -n {
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": ""
}
+ local 'prompt_message=Enter configuration file to be parsed: '
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'indent=            '
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'

+ [[ -z fortinet ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ which awk
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
interface Vlan2
+ newline
 ip address 172.16.1.6 255.255.255.0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ newline
+ [[ -z '' ]]
+ (( i = 0 ))
+ local count=1
++ grep -v '^\s*$'
+ (( i = 0 ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ debug=false
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console
+ echo
+ local first_search_entry=203.0.113.25
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console ]]
+ local last_search_entry=203.0.113.25
+ case "${target_file}" in
+ (( i++ ))
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ grep -v '^#'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ echo -e --export
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ config =~ ^(config|c)$ ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ] ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ result=0
+ [[ config =~ ^(export|r)$ ]]
+ local count=1
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ exit 0
+ [[ config =~ ^(search|s)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JIDSxzcjQ9 ]]
+ [[ config == \h\e\l\p ]]
+ print '{
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JIDSxzcjQ9
+ [[ config == \d\e\b\u\g ]]
  "vendor": "cisco",
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
  "model": "",
  "version": "",
  "domain": "",
+ [[ config == \d\r\y\-\r\u\n ]]
  "hostname": ""
+ [[ config == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
}
+ for xitem in "${@}"

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ dry_run=false
+ (( i < count ))
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n {
+ [[ -z true ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -en '{
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z '' ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
  "vendor": "cisco",
+ newline
  "model": "",
+ local count=1
  "version": "",
+ ((  count == 0  ))
+ [[ logger =~ ^(config|c)$ ]]
  "domain": "",
  "hostname": ""
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ export console_output=false
+ console_output=false
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ -z true ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console ]]
+ local count=1
+ [[ -z '' ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ script_helper=false
+ (( i = 0 ))
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ case "${target_platform}" in
+ sed '1{/^[[:space:]]*$/d;}'
+ awk -v divisor=--MTc0ODgzMzgzMjg3Nzc2NzAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }
                    /^[[:space:]]*$/ { next }
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }
                    (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
+ case "${target_platform}" in
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
                    {
                      blk = blk divisor " " $0;
                    }
                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
+ awk -v divisor=--MTc0ODgzMzgzMjg2NDI2NjAwMAo-- '
                  BEGIN {
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ true == true ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ local count=1
+ ((  count == 0  ))
+ [[ logger =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ local count=1
+ [[ logger =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
++ mktemp -d
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_platform}" in
+ echo
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ awk -v divisor=--MTc0ODgzMzgzMjczOTE5NDAwMAo-- '
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ echo
++ echo 198.51.100.75
+ (( i++ ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ (( i < count ))
+ echo
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
object network Panther-Gateway
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
 host 10.0.2.3
 description Secure outbound concentrator'
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ tr -d '\r'

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ [[ true == true ]]
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
+ result=0
 description Secure outbound concentrator ]]
+ [[ 0 -ne 0 ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ export =~ ^(config|c)$ ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ result=0
+ local count=1
+ newline
+ [[ export =~ ^(console|o)$ ]]
+ local count=1
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ echo
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ declare -a execute
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ (( i < count ))
+ newline
+ cat -n reports/172.16.1.6/misc/switch3.conf
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ newline
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ local count=1
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
++ echo -e --export
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ extract =~ ^(config|c)$ ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ extract =~ ^(console|o)$ ]]
  "version": "9.12(4)",
+ [[ extract =~ ^(export|r)$ ]]
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
  "domain": "global.dmz.example.net",
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
  "hostname": "dmz-fw2-backup"
+ [[ extract == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
  "vendor": "cisco",
  "model": "",
+ IFS==
  "version": "",
  "domain": "",
++ grep -v '^#'
+ read -r key value
  "hostname": ""
}
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k949q2XtHY
  "vendor": "cisco",
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k949q2XtHY
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT

ASA Version 9.12(4)
hostname dmz-fw2-backup
 description National Core Routing Zone
+ export 'nl=\n'
+ echo
+ nl='\n'
 network-object host 192.168.1.10
domain-name global.dmz.example.net
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

+ source ./scripts/devops-resources.shell
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ echo -en '{
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
  "vendor": "cisco",
++ [[ 5 -lt 4 ]]
  "model": "",
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
  "version": "",
++ alias detect-vendor=detect_vendor
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
  "domain": "",
  "hostname": ""
}
++ alias exit-error=exit_error

+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list

+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
object network Panther-Gateway
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ case "${target_file}" in
 host 10.0.2.3
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
++ alias list-file=list_file
 description Secure outbound concentrator'
+++ date +%s%N
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+++ base64
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=cisco
+ [[ export =~ ^(config|c)$ ]]
+ output_dir=reports/203.0.113.25/fortinet
+ [[ export =~ ^(console|o)$ ]]
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ cat -n
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ (( i < count ))
+ echo
+ [[ cfg == \c\f\g ]]
+ cat -n
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ (( i++ ))
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
 nameif guest
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ serialize_objects
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
+ (( i++ ))
 nameif guest
+ (( i < count ))
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ result=0
+ (( i = 0 ))
+ [[ -n {
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ export =~ ^(export|r)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ local export_objects=true
+ [[ true == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline 2
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
++ export actions_logfile=./logs/console/run.console
+ sed '1{/^[[:space:]]*$/d;}'
++ actions_logfile=./logs/console/run.console
+ local count=2
+ (( i = 0 ))
++ touch ./logs/console/run.console
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ echo
+ local first_search_entry=192.168.1.10
+ newline
+ local last_search_entry=192.168.1.10
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ (( i < count ))
++ dirname reports/172.16.1.6/misc/switch3.conf
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ echo
+ [[ cfg == \c\f\g ]]
+ newline
+ (( i++ ))
  "vendor": "fortinet",
+ local count=1
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console ]]
++ export divisor=--MTc0ODgzMzgzMzQ1MzA3MzAwMAo--
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ return 0
+ local count=1
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--access-sw1-west.cfg.console
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
  "model": "FortiGate-60F",
++ echo -e --verbose
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
++ divisor=--MTc0ODgzMzgzMzQ1MzA3MzAwMAo--
+ echo
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ echo
+ (( i++ ))
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ platform =~ ^(console|o)$ ]]
+ return 0
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console ]]
  "version": "v7.2.5.F",
+ sed '/^[[:space:]]*$/d'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console
  "domain": ""
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console
+ local target_platform=cisco
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console ]]
+ echo
+ [[ platform =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console
++ [[ -n '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console ]]
+ (( i++ ))
+ case "${target_file}" in
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ] ]]
+ [[ platform == \d\e\b\u\g ]]
  "hostname": "fg-branch-vpn-01"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
++ __DEVOPS_HELPERS_SOURCED=1
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ local count=1
+ ((  count == 0  ))
}
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ IFS==
++ dirname -- ./scripts/network-extract.shell
++ [[ 5 -lt 4 ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ read -r key value

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'

config firewall address
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ alias parse-listings--helper=parse_listings__helper
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias network-configs--helper=network_configs__helper
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/192.168.0.100/cisco
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console
++ alias network-extract--helper=network_extract__helper
+ output_dir=reports/192.168.2.12/misc
+ [[ ! -d reports/192.168.2.12/misc ]]
+ newline
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ echo -e --verbose
++ echo -e --export
+ local parent_dir=reports/172.16.1.6/misc
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
+ [[ true == true ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console
+ (( i < count ))
+ echo
+ alias serialize-object=serialize_objects
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ basename reports/172.16.1.6/misc/switch3
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]]
+ alias parse-cisco=main
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list != *,* ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console
+ mapfile -t search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ [[ -z x ]]
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3qMZvLFYA4/network-extract--perimeter-fw1.cfg.console
+ export logs_location=logs
+ local awk_bin=/usr/bin/awk
+ logs_location=logs
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ mkdir -p logs/console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--fg-campus-core.cfg.console
+ [[ 0 -ne 0 ]]
++ dirname -- ./scripts/network-extract.shell
+ echo
++ which awk
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ cfg == \c\f\g ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+++ date +%s%N
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ result=0
+ exit 0
+ print '{
+ [[ false == true ]]
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
  "vendor": "fortinet",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2mWHATqqWl ]]
  "model": "FortiGate-60F",
+ [[ true == true ]]
  "version": "v7.2.5.F",
+ [[ verbose =~ ^(config|c)$ ]]
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ verbose =~ ^(console|o)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ verbose =~ ^(export|r)$ ]]
config firewall address
 edit "Guardians-Relay"
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ verbose =~ ^(extract|x)$ ]]
  set subnet 192.168.0.1 255.255.255.255
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
  set comment "Backup uplink for Milano crew"
 next
end'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ newline
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ local count=1
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ (( i = 0 ))
+ serialize_objects
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

+ (( i < count ))
#hostname="fg-branch-vpn-01"
+ echo
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ (( i++ ))
config firewall address
+ (( i < count ))
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2mWHATqqWl
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ [[ verbose =~ ^(logger|l)$ ]]
+++ base64
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(console|o)$ ]]
+ local verbose=true
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+++ tr -dc a-zA-Z0-9
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ IFS=' 	
'
+ mkdir -p reports/172.16.1.6/misc/.objects
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ export =~ ^(search|s)$ ]]
+ console_output=false
+ [[ logger =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
++ grep -v '^\s*$'
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -z true ]]
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ grep -v '^#'
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \d\e\b\u\g ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ for xitem in "${@}"
++ IFS=,
+ newline
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ IFS==
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local count=1
+ read -r key value
+ newline
++ echo 203.0.113.25
+ (( i = 0 ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ local count=1
+ echo
+ (( i < count ))
+ declare -a execute
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ result=0
+ local count=1
+ exit 0
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ (( i++ ))
+ mkdir -p reports/10.0.0.1/misc/.objects
+ (( i < count ))
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ mkdir -p reports/192.168.1.10/misc/.objects
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ cat -n
+ [[ false == true ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--branch-isr-02.cfg.console
+ result=0
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ exit 0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b9eayIin5l ]]
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kjEFK0j7aY ]]
+ (( i < count ))
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ return 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kjEFK0j7aY
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ case "${target_file}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b9eayIin5l
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]]
+ newline 2
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ search_terms=()
+ declare -a search_terms
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ mapfile -t search_terms
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ serialize_objects
+ (( i < count ))
+ local count=2
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ false == true ]]
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ serialize_objects
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console ]]
+ local count=1
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i = 0 ))
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ output_dir=reports/10.10.10.10/fortinet
+ [[ ! -d reports/10.10.10.10/fortinet ]]
++ which awk
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ serialize_objects
+ (( i < count ))
+ echo
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ echo
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ echo
+ (( i++ ))
+ cat -n
+ (( i++ ))
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
++ echo -e --verbose
++ tr -d '\r'
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
++ grep -v '^\s*$'
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ return 0
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ [[ true == true ]]
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ echo
+ local awk_bin=/usr/bin/awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console
+ exit 0
+ (( i++ ))
++ grep -v '^#'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mXjq6OhxAZ ]]
+ (( i < count ))
+ (( i++ ))
+ local parent_dir=reports/192.168.1.11/fortinet
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mXjq6OhxAZ
+ (( i < count ))
+ local count=1
+ cat -n
+ (( i = 0 ))
+ (( i < count ))
+ return 0
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ return 0
+ local parent_dir=reports/203.0.113.25/cisco
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ output_dir=reports/203.0.113.25/cisco
+ [[ true == true ]]
+ local parent_dir=reports/198.51.100.75/cisco
+ [[ ! -d reports/203.0.113.25/cisco ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_platform}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console
+ awk -v divisor=--MTc0ODgzMzgzMjgzNDk2MDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
++ dirname reports/192.168.1.10/misc/switch1.conf
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
++ basename reports/192.168.1.11/fortinet/fg-campus-core
++ which awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--campus-sw-access01.cfg.console
+ sed '/^[[:space:]]*$/d'
++ basename reports/198.51.100.75/cisco/branch-isr-02
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzgzMjgyNTE2MjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ [[ verbose =~ ^(config|c)$ ]]
                    blk = "";
+ newline
                  }
                  /^[[:space:]]*$/ { next }
+ [[ verbose =~ ^(console|o)$ ]]
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ verbose =~ ^(export|r)$ ]]
                      in_json_header = 0;
                      next;
+ [[ verbose =~ ^(extract|x)$ ]]
                    }
                  }
                  (in_json_header == 1) { next }
+ [[ verbose =~ ^(logger|l)$ ]]
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ verbose =~ ^(platform|p)$ ]]
                    next;
                  }
+ local first_search_entry=192.168.2.12
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ verbose =~ ^(search|s)$ ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ verbose == \h\e\l\p ]]
                ' reports/192.168.1.10/misc/fw1.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ printf '%*s' 12 ''
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local last_search_entry=192.168.2.12
+ local verbose=true
+ local SCRIPT_DIR=./scripts
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ IFS=' 	
'
+ [[ true == true ]]
+ [[ -z '' ]]
+ debug=false
+ local 'indent=            '
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ echo
+ output_dir=reports/192.168.1.10/misc
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ] ]]
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-configs--ips.list ]'
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -z '' ]]
+ [[ true == true ]]
+ export console_output=false
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ console_output=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console
+ [[ false == true ]]
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ ((  count == 0  ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]]
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console ]]
+ search_terms=()
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ return 0
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ declare -a search_terms
+ case "${target_file}" in
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ local count=1
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list != *,* ]]
+ serialize_objects
+ mapfile -t search_terms
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ -z fortinet ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console ]]
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console
+ [[ false == true ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ case "${target_platform}" in
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'extracted_configuration={
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "vendor": "cisco",
+ newline
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
  "model": "ASA",
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ awk -v divisor=--MTc0ODgzMzgzMjgwOTkxNzAwMAo-- '
+ local count=1
+ awk -v divisor=--MTc0ODgzMzgzMjgwNzYwMjAwMAo-- '
                  BEGIN {
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
                    in_json_header = 0;
                  BEGIN {
                    in_json_header = 0;
+ (( i = 0 ))
                    blk = "";
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
                    blk = "";
                  }
                  }
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^[[:space:]]*$/ { next }
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
++ IFS=,
                  /^}$/ {
                    if (in_json_header == 1) {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      in_json_header = 0;
                      next;
                      next;
                    }
                    }
                  }
                  }
++ echo 10.10.10.10
                  (in_json_header == 1) { next }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                  /^[^[:space:]]/ {
++ dirname -- ./scripts/network-extract.shell
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    blk = $0;
                    next;
                    next;
                  }
                  }
                  {
                  {
                    blk = blk divisor " " $0;
                    blk = blk divisor " " $0;
                  }
                  }
                  END {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ which awk
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ [[ true == true ]]

+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
ASA Version 9.12(4)
+ (( i < count ))
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]

+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console ]]
+ serialize_objects
interface GigabitEthernet0/2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ echo
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ [[ true == true ]]
+ message '                .cache/resources/misc/switch3.conf'
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ [[ -n {
+ local 'message=                .cache/resources/misc/switch3.conf'
  "vendor": "cisco",
  "model": "ASA",
+ echo -e '                .cache/resources/misc/switch3.conf'
  "version": "9.12(4)",
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console
+ (( i++ ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ case "${target_file}" in
+ newline
  "domain": "global.dmz.example.net",
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
  "hostname": "dmz-fw2-backup"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))
++ tr -d '\r'
++ grep -v '^\s*$'
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console ]]
 ip address 198.51.100.75 255.255.255.0
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--campus-sw-access01.cfg.console
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ grep -v '^#'
+ result=0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3WTL877gC8 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3WTL877gC8
+ local SCRIPT_DIR=./scripts
++ which awk
++ dirname -- ./scripts/network-extract.shell
+ local script_filename=cisco-configs.awk
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
 description Outbound Internet NAT interface ]]
+ case "${target_file}" in
+ local parent_dir=reports/192.168.2.12/fortinet
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ result=0
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jWjb5TYGBt ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jWjb5TYGBt
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console ]]
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h4TL9GUcSw/network-extract--fw1.cfg.console
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
++ which awk
+ cat -n
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ case "${target_platform}" in
+ local parent_dir=reports/192.168.0.1/fortinet
+ awk -v divisor=--MTc0ODgzMzgzMjgxODI1MzAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }
                    /^[[:space:]]*$/ { next }
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }
                    (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
                    {
                      blk = blk divisor " " $0;
                    }
                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
++ IFS=,
+ case "${target_platform}" in
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ local SCRIPT_DIR=./scripts
++ echo 10.10.10.10
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ local script_filename=cisco-configs.awk
}
+ awk -v divisor=--MTc0ODgzMzgzMjgxODUyODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }

ASA Version 9.12(4)
                  /^{$/ { in_json_header = 1; next }
hostname dmz-fw2-backup
                  /^}$/ {
domain-name global.dmz.example.net
                    if (in_json_header == 1) {

+ local first_search_entry=192.168.1.10
                      in_json_header = 0;
interface GigabitEthernet0/2
                      next;
 nameif outside
                    }
 ip address 198.51.100.75 255.255.255.0
                  }
 description Outbound Internet NAT interface ]]
                  (in_json_header == 1) { next }
+ local last_search_entry=192.168.1.10
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ echo -en '{
  "vendor": "cisco",
                  {
  "model": "ASA",
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
                    blk = blk divisor " " $0;
                  }
  "version": "9.12(4)",
                  END {
+ local awk_bin=/usr/bin/awk
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
                    if (blk != "" && !seen[blk]++) print blk "\n";
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

                  }
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ case "${target_platform}" in
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ awk -v divisor=--MTc0ODgzMzgzMjgzNTE3NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
                      in_json_header = 0;
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
                  END {
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ declare -a execute
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ [[ true == true ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-configs--ips.list ]'
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local count=1
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ result=0
+ exit 0
+ newline
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MdxkPtpvcq ]]
+ newline
+ sed '/^[[:space:]]*$/d'
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MdxkPtpvcq
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ (( i < count ))
+ echo
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ result=0
+ (( i < count ))
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ exit 0
+ return 0
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ [[ true == true ]]
+ cat -n
+ sed '/^[[:space:]]*$/d'
++ which awk
+ cat -n
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nwTPMquBwA ]]
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nwTPMquBwA
++ which awk
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ IFS=,
++ echo 203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
+ newline
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ local count=1
+ exit 0
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sW9j3gykso ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sW9j3gykso
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ result=0
+ result=0
+ (( i++ ))
+ newline 2
+ newline
+ [[ 0 -ne 0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ newline
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ 0 -ne 0 ]]
+ sed '/^[[:space:]]*$/d'
+ (( i = 0 ))
+ result=0
+ declare -a execute
+ (( i < count ))
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ case "${target_file}" in
+ (( i < count ))
+ local count=2
+ echo
+ local awk_bin=/usr/bin/awk
+ echo
+ (( i < count ))
+ (( i++ ))
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n {
+ return 0
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
  "vendor": "cisco",
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console
+ (( i++ ))
  "model": "",
+ cat -n
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ return 0
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ (( i < count ))
  "version": "",
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console ]]
  "domain": "",
++ export divisor=--MTc0ODgzMzgzMzQ3MTM1NTAwMAo--
+ echo
  "hostname": ""
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
}
+ script_filename=network-extract.shell
+ newline
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ result=0
+ (( i = 0 ))
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console
+ (( i++ ))
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console ]]
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
interface Vlan1
++ divisor=--MTc0ODgzMzgzMzQ3MTM1NTAwMAo--
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console ]]
+ local count=1
+ newline
+ script_filename=network-extract
 ip address 10.0.0.1 255.255.255.0
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ export network_extract__console=logs/console/network-extract.console
+ echo
+ case "${target_file}" in
+ (( i = 0 ))

+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console
+ (( i = 0 ))
object-group network Spider-Net
+ (( i++ ))
+ echo
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
 description Web access switches
+ (( i++ ))
+ (( i < count ))
 network-object host 10.0.0.1
++ which awk
+ (( i < count ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
 network-object 192.168.12.0 255.255.255.0 ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ IFS=,
++ printf '%*s' 12 ''
++ echo 192.168.1.10
+ local 'indent=            '
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ result=0
+ newline
+ newline
+ [[ 0 -ne 0 ]]
+ local count=1
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ (( i < count ))
+ network_extract__console=logs/console/network-extract.console
  "model": "",
  "version": "",
+ echo
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ output_dir=reports/192.168.2.12/fortinet
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
+ echo
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
+ (( i++ ))
 description Web access switches
+ (( i < count ))
 network-object host 10.0.0.1
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ (( i++ ))
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ return 0
 network-object 192.168.12.0 255.255.255.0 ]]
+ (( i < count ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

+ [[ true == true ]]
object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ cat -n
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local awk_bin=/usr/bin/awk
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ which awk
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ case "${target_file}" in
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch1.conf.console
+ (( i < count ))
+ case "${target_platform}" in
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n
+ awk -v divisor=--MTc0ODgzMzgzMjgzNDc0NzAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }
                    /^[[:space:]]*$/ { next }
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }
                    (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
+ [[ true == true ]]
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
+ source ./scripts/devops-helpers.shell
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
+ [[ true == true ]]
                      blk = $0;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console
                      next;
                    }
                    /^ next$/ {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console ]]
                      blk = blk divisor " " $0;
++ [[ -n '' ]]
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console
                      next;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console ]]
                    }
+ case "${target_file}" in
                    {
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw1.cfg.console
                      blk = blk divisor " " $0;
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console ]]
                    }
                    END {
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console
                      if (blk != "" && !seen[blk]++) print blk;
                    }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console ]]
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BoCa638g20/network-extract--campus-sw-access01.cfg.console
+ case "${target_platform}" in
++ command -v -- ./scripts/network-extract.shell
+ awk -v divisor=--MTc0ODgzMzgzMjg0NTcxOTAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }
                    /^[[:space:]]*$/ { next }
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }
                    (in_json_header == 1) { next }
+ sed '/^[[:space:]]*$/d'
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
++ printf '%*s' 12 ''
                    {
                      blk = blk divisor " " $0;
                    }
                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ newline
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ [[ false == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ local export_objects=true
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ return 0
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
+ newline
+ sed '/^[[:space:]]*$/d'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local count=1
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo
+ serialize_objects
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console ]]
+ return 0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ case "${target_file}" in
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ cat -n
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console ]]
+ newline 2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console
++ __DEVOPS_HELPERS_SOURCED=1
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ touch logs/console/network-extract.console
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console ]]
+ local count=2
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ARhRwSkmvA/network-extract--dmz-fw2-backup.cfg.console
++ dirname -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ echo
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ (( i++ ))
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ (( i < count ))
 next
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
end'
+ local 'indent=            '
+ [[ true == true ]]
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
  "hostname": "fg-campus-core"
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ result=0
+ local count=1
+ (( i = 0 ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ result=0
+ echo
+ exit 0
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DMY22YsO8 ]]
+ newline
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0DMY22YsO8
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
}
+ echo
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oX73O1ErXd ]]

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oX73O1ErXd
#hostname="fg-campus-core"
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
#model="FortiGate-200F"
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ result=0
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ exit 0
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G4vCOZFBMh ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G4vCOZFBMh
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'

config system interface
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  set alias "Campus Core Transit"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 next
end
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
+ message '                .cache/resources/misc/switch1.conf'
  set comment "Wireless AP Gateway"
+ newline
+ result=0
 next
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
++ [[ 5 -lt 4 ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ newline
+ local count=1
+ local count=1
end ]]
+ (( i = 0 ))
+ local count=1
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ return 0
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ case "${target_file}" in
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}
+ echo

+ local script_filename=fortinet-configs.awk
+ (( i++ ))
+ output_dir=reports/192.168.1.10/misc
+ local script_filepath=./scripts/extract/fortinet-configs.awk
#hostname="fg-branch-vpn-01"
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i < count ))
+ [[ ! -d reports/192.168.1.10/misc ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
++ alias parse-listings--helper=parse_listings__helper
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ for xitem in "${@}"
+ result=0
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
  "version": "v7.2.5.F",
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

+ declare -a execute
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local parent_dir=reports/198.51.100.75/cisco
config firewall policy
++ alias network-configs--helper=network_configs__helper
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console ]]
+ print '{
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console
  "version": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console ]]
  "domain": ""
  "hostname": "fg-campus-core"
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in

+ case "${target_file}" in
+ result=0
#hostname="fg-campus-core"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0WGoF60vHf/network-extract--fg-campus-core.cfg.console
#model="FortiGate-200F"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--branch-isr-02.cfg.console

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ [[ -n {
  "vendor": "fortinet",
+ exit 0
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1g7X3c1sZ ]]
 next
end
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G1g7X3c1sZ
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
  "version": "",
  "domain": ""
++ which awk
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
  "hostname": "fg-campus-core"
+ case "${target_file}" in
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ command -v -- ./scripts/network-extract.shell
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
++ echo -e --export
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ cat -n
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
interface GigabitEthernet0/0
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ serialize_objects

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console
object network NAT-Edge
 host 203.0.113.25
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console ]]
 description Internet-bound IP NAT

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console
object-group network Avengers-DMZ
 description Public access layer
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console ]]
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ case "${target_file}" in

object-group network Panther-Edge
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--dmz-fw2-backup.cfg.console
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ alias network-extract--helper=network_extract__helper
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
+ [[ 7 -eq 0 ]]
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bqxjwrbzXM ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bqxjwrbzXM
+ result=0
++ dirname reports/10.0.0.1/misc/switch3.conf
+ exit 0
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eczexfetpg/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'extracted_configuration={
+ newline
  "vendor": "cisco",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AmZW4nracm ]]
  "model": "",
+ newline
  "version": "",
+ alias serialize-object=serialize_objects
  "domain": "",
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console --export --verbose
+ local count=1
  "hostname": ""
}

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AmZW4nracm
+ local count=1
+ (( i = 0 ))
interface Vlan20
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i++ ))
++ IFS=,
+ (( i < count ))
 ip address 192.168.1.10 255.255.255.0'
+ (( i < count ))
++ echo 192.168.2.12
+ return 0
+ return 0
+ print '{
  "vendor": "cisco",
  "model": "ASA",
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "version": "9.14(3)",
  "model": "",
  "domain": "edge.dc.example.com",
+ [[ true == true ]]
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
+ [[ true == true ]]
++ echo -e --verbose
  "version": "",
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
  "domain": "",
  "hostname": ""
 host 203.0.113.25
}
 description Internet-bound IP NAT


+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console
object-group network Avengers-DMZ
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console
interface Vlan20
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console ]]
 ip address 192.168.1.10 255.255.255.0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ oIFS=' 	
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console ]]
+ declare -a execute
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console
'
+ local SCRIPT_DIR=./scripts
 description Public access layer
+ case "${target_file}" in
 network-object host 192.0.2.50
+ local script_filename=cisco-configs.awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console
 network-object host 203.0.113.25
+ local script_filepath=./scripts/extract/cisco-configs.awk
 network-object 192.168.2.0 255.255.255.0
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ local parent_dir=reports/10.0.2.3/misc
interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
+ newline 2
+ newline 2
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=198.51.100.75
 description Internet-facing proxy systems
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
 network-object host 203.0.113.25
+ (( i = 0 ))
+ exit 0
+ result=0
+ local count=2
+ (( i < count ))
 network-object host 172.16.0.5 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ alias parse-cisco=main
+ echo -en '{
+ (( i < count ))
  "vendor": "cisco",
+ (( i++ ))
+ exit 0
  "model": "ASA",
+ echo
  "version": "9.14(3)",
++ which awk
+ (( i < count ))
  "domain": "edge.dc.example.com",
+ (( i++ ))
  "hostname": "perimeter-fw1"
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BPFCZVfzOq ]]
}

+ echo
ASA Version 9.14(3)
+ (( i++ ))
hostname perimeter-fw1
+ (( i < count ))
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
+ [[ true == true ]]
+ [[ true == true ]]
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
++ which awk
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ print '{
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
  "vendor": "cisco",
  "model": "",
+ local count=1
+ newline
  "version": "",
+ (( i = 0 ))
+ local count=1
  "domain": "",
+ (( i = 0 ))
  "hostname": ""
+ (( i < count ))
}
+ (( i < count ))

interface Vlan20
+ echo
 ip address 192.168.1.10 255.255.255.0'
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ which awk
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
++ which awk
+ local parent_dir=reports/10.0.0.1/misc
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ exit 0
+ [[ -z x ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IA7FcjplFz ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IA7FcjplFz
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
++ basename reports/10.0.0.1/misc/switch3
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
+ newline 2
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzgzMjk2NDA0MDAwMAo-- '
                  BEGIN {
+ local count=2
                    in_json_header = 0;
+ (( i = 0 ))
                    blk = "";
                  }
+ (( i < count ))
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ echo
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ (( i++ ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ (( i < count ))
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ true == true ]]
                  }
+ (( i++ ))
                  END {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console ]]
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5QK40hjMYe/network-extract--fg-branch-vpn-01.cfg.console
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ case "${target_file}" in
+ [[ verbose =~ ^(export|r)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-branch-vpn-01.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ verbose =~ ^(extract|x)$ ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local verbose=true
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ IFS=' 	
+ echo
+ local last_search_entry=198.51.100.75
'
+ serialize_objects
+ (( i++ ))
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -z '' ]]
+ (( i < count ))
+ debug=false
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ dry_run=false
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BPFCZVfzOq
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Uq86Xb8VL7 ]]
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ case "${target_platform}" in
+ sed '/^[[:space:]]*$/d'
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console ]]
+ awk -v divisor=--MTc0ODgzMzgzMjkzODA1NDAwMAo-- '
+ [[ -z '' ]]
                  BEGIN {
+ script_helper=false
                    in_json_header = 0;
                    blk = "";
+ [[ false == true ]]
                  }
                  /^[[:space:]]*$/ { next }
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ search_terms=()
                    }
                  }
+ declare -a search_terms
                  (in_json_header == 1) { next }
+ newline 2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]]
                  /^[^[:space:]]/ {
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list != *,* ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
+ mapfile -t search_terms
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/misc/switch3.conf
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ newline
+ (( i++ ))
+ (( i < count ))
+ echo
+ local count=1
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ (( i = 0 ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Uq86Xb8VL7
++ printf '%*s' 12 ''
+ [[ export =~ ^(search|s)$ ]]
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
++ IFS=,
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ newline
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ mkdir -p reports/10.0.0.1/misc/.objects
+ local count=1
++ echo 192.168.1.10
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ (( i++ ))
++ basename reports/10.0.2.3/misc/fw3
+ serialize_objects
+ (( i < count ))
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ local 'indent=            '
+ [[ true == true ]]
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ serialize_objects
+ declare -a execute
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ script_filename=network-extract.shell
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ script_filename=network-extract
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ export network_extract__console=logs/console/network-extract.console
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ network_extract__console=logs/console/network-extract.console
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ export == \h\e\l\p ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ export == \d\e\b\u\g ]]
+ touch logs/console/network-extract.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ for xitem in "${@}"
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ IFS==
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ tr -d '\r'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0xMUFRqxYV ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0xMUFRqxYV
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BXdlaHvnMR ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BXdlaHvnMR
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ grep -v '^\s*$'
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
+ [[ false == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ serialize_objects
+ local parent_dir=reports/10.10.10.10/fortinet
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
+ local parent_dir=reports/10.10.10.10/cisco
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
+ local awk_bin=/usr/bin/awk
+ newline
+ local count=1
+ ((  count == 0  ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local parent_dir=reports/10.10.10.10/fortinet
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ (( i = 0 ))
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ (( i < count ))
+ echo
+ mkdir -p reports/10.0.2.3/misc/.objects
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ 7 -eq 0 ]]
+ result=0
++ IFS=,
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eczexfetpg/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo 192.168.2.12
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ serialize_objects
+ case "${target_platform}" in
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ awk -v divisor=--MTc0ODgzMzgzMzAwNDIxOTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
                      next;
                    }
                  }
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
                  }
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console --export --verbose
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ 0 -ne 0 ]]
                  {
+ [[ true == true ]]
                    blk = blk divisor " " $0;
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
                  }
+ oIFS=' 	
                  END {
'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
++ basename reports/10.10.10.10/fortinet/fg-testing-config
                ' reports/10.0.0.1/misc/switch3.conf
++ printf '%*s' 12 ''
++ basename reports/10.10.10.10/fortinet/fg-campus-core
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/192.168.1.10/misc/switch1.conf
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local first_search_entry=198.51.100.75
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local last_search_entry=198.51.100.75
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'extracted_configuration={
+ message '                .cache/resources/misc/fw3.cfg'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
  "version": "",
  "domain": ""
+ local 'message=                .cache/resources/misc/fw3.cfg'
  "hostname": "fg-campus-core"
}
+ echo -e '                .cache/resources/misc/fw3.cfg'

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ newline
config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ local count=1
  set comment "Vision’s quantum channel"
+ (( i = 0 ))
 next
+ (( i < count ))
end'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
+ echo
+ result=0
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ] ]]
#model="FortiGate-200F"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'
+ declare -a execute
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-configs--ips.list ]'

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ local count=1
  set comment "Vision’s quantum channel"
+ ((  count == 0  ))
 next
end ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local parent_dir=reports/203.0.113.25/cisco
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ local 'indent=            '
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ config =~ ^(config|c)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ config =~ ^(extract|x)$ ]]
  "version": "",
+ echo
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ (( i++ ))
+ [[ config =~ ^(logger|l)$ ]]
#model="FortiGate-200F"
+ (( i < count ))

+ [[ config =~ ^(platform|p)$ ]]
config firewall address
+ local parent_dir=reports/192.168.1.10/misc
 edit "Vision-Link"
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ [[ config =~ ^(search|s)$ ]]
 next
+ newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
end'
++ which awk
+ local count=1
+ (( i = 0 ))
+ [[ -n {
+ (( i < count ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ echo
  "version": "",
  "domain": ""
+ (( i++ ))
  "hostname": "fg-campus-core"
+ (( i < count ))
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ return 0
config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ echo -en '{
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ config == \h\e\l\p ]]
  "vendor": "fortinet",
+ [[ true == true ]]
  "model": "FortiGate-200F",
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "version": "",
+ [[ config == \d\e\b\u\g ]]
  "domain": ""
  "hostname": "fg-campus-core"
+ [[ config == \d\r\y\-\r\u\n ]]
}

+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
#hostname="fg-campus-core"
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
#model="FortiGate-200F"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console ]]

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ IFS==
+ case "${target_file}" in
+ read -r key value
config firewall address
+ [[ verbose =~ ^(export|r)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console
+ [[ 0 -ne 0 ]]
 edit "Vision-Link"
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ [[ verbose =~ ^(extract|x)$ ]]
++ basename reports/203.0.113.25/cisco/perimeter-fw1
 next
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
end'
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ newline
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ (( i = 0 ))
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ newline
+ echo
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i++ ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ (( i < count ))
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local verbose=true
+ case "${target_file}" in
+ IFS=' 	
'
+ cat reports/172.16.1.6/misc/.objects/switch3.list
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ basename reports/192.168.1.10/misc/switch1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ cat -n
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch3.list
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzgzMjkzNjIyOTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ mkdir -p reports/203.0.113.25/cisco/.objects
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ cat -n
+ newline 2
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ mkdir -p reports/192.168.1.10/misc/.objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ local count=2
++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Wakanda-Core
+ (( i = 0 ))
 description National Core Routing Zone
+ (( i < count ))
 network-object host 192.168.1.10
++ tr -d '\r'
+ echo
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ search =~ ^(export|r)$ ]]
+ (( i < count ))
+ result=0
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "",
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
  "domain": "",
+ (( i < count ))
  "hostname": ""
}
+ [[ search =~ ^(platform|p)$ ]]

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ local awk_bin=/usr/bin/awk
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ search == \h\e\l\p ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ search == \d\e\b\u\g ]]
+ case "${target_platform}" in
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ case "${target_platform}" in
+ IFS==
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ read -r key value
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console
+ awk -v divisor=--MTc0ODgzMzgzMzExMjg0MzAwMAo-- '
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
                    }
+ awk -v divisor=--MTc0ODgzMzgzMzAyNDEzMjAwMAo-- '
                    /^[[:space:]]*$/ { next }
                    BEGIN {
                    /^{$/ { in_json_header = 1; next }
+ newline
                      in_json_header = 0;
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console ]]
                    /^}$/ {
+ local count=1
                      blk = "";
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console
                      if (in_json_header == 1) {
                    }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console ]]
                    /^[[:space:]]*$/ { next }
                        in_json_header = 0;
                        next;
+ case "${target_file}" in
                      }
                    /^{$/ { in_json_header = 1; next }
+ (( i = 0 ))
                    }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--dmz-fw2-backup.cfg.console
                    (in_json_header == 1) { next }
                    /^}$/ {
+ (( i < count ))
                    /^#(hostname|model|config-version)=/ { next }
                      if (in_json_header == 1) {
                    /^config / { print $0; next }
++ grep -v '^\s*$'
                        in_json_header = 0;
                    /^end$/    { print $0 "\n"; next }
                        next;
                    /^ edit / {
                      }
+ echo
                      if (blk != "" && !seen[blk]++) print blk;
                    }
+ (( i++ ))
                    (in_json_header == 1) { next }
                      blk = $0;
                      next;
+ (( i < count ))
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    }
                    /^end$/    { print $0 "\n"; next }
                    /^ next$/ {
                    /^ edit / {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      next;
                    }
                      blk = "";
                      next;
                    /^ next$/ {
                    }
                      blk = blk divisor " " $0;
                    {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = blk divisor " " $0;
                      blk = "";
                    }
                      next;
                    END {
                    }
                      if (blk != "" && !seen[blk]++) print blk;
                    {
                    }
                      blk = blk divisor " " $0;
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
                    }
                    END {
                      if (blk != "" && !seen[blk]++) print blk;
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ sed '/^[[:space:]]*$/d'
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
++ grep -v '^#'
+ sed '/^[[:space:]]*$/d'
+ print '{
+ sed '/^[[:space:]]*$/d'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
+ return 0
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console
+ return 0
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console ]]
+ [[ extract =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ [[ extract == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
+ local 'indent=            '
end ]]
+ [[ true == true ]]
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ newline
+ local count=1
+ awk -v divisor=--MTc0ODgzMzgzMzA0MjY1OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ (( i = 0 ))
                  /^}$/ {
+ (( i < count ))
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ echo
                  {
+ (( i++ ))
                    blk = blk divisor " " $0;
                  }
                  END {
+ (( i < count ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ result=0
                  }
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local first_search_entry=10.10.10.10
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local last_search_entry=10.10.10.10
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ case "${target_platform}" in
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ awk -v divisor=--MTc0ODgzMzgzMzEyNDU4NTAwMAo-- '
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
                  BEGIN {
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-configs--ips.list ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
                    in_json_header = 0;
+ exit 0
+ case "${target_platform}" in
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6rxu652JUA ]]
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6rxu652JUA
                    blk = $0;
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
                    next;
+ awk -v divisor=--MTc0ODgzMzgzMjkzNjc1MTAwMAo-- '
                  }
                  {
+ local count=1
                  BEGIN {
                    blk = blk divisor " " $0;
                    in_json_header = 0;
                  }
                    blk = "";
+ echo
                  END {
                  }
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ ((  count == 0  ))
                  /^[[:space:]]*$/ { next }
+ print '{
                  /^{$/ { in_json_header = 1; next }
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "vendor": "fortinet",
                  }
  "model": "FortiGate-60F",
+ newline
                  /^}$/ {
  "version": "v7.2.5.F",
+ message '                .cache/resources/misc/fw1.cfg'
+ result=0
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
                ' reports/192.168.1.10/misc/switch1.conf
+ local 'message=                .cache/resources/misc/fw1.cfg'
                    if (in_json_header == 1) {
  "domain": ""
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
                      in_json_header = 0;
+ (( i++ ))
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ local count=1
                      next;
  "hostname": "fg-branch-vpn-01"
                    }
}
                  }
+ (( i = 0 ))

+ [[ 0 -ne 0 ]]
#hostname="fg-branch-vpn-01"
                  (in_json_header == 1) { next }
+ (( i < count ))
#model="FortiGate-60F"
+ echo
                  /^[^[:space:]]/ {
+ newline 2
+ [[ true == true ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ result=0
+ newline
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
                    blk = $0;

+ (( i++ ))
                    next;
+ (( i < count ))
                  }
                  {
config firewall address
+ [[ 0 -ne 0 ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
 edit "Public-Test"
                    blk = blk divisor " " $0;
  set subnet 203.0.113.25 255.255.255.255
                  }
+ [[ true == true ]]
  set comment "Public NAT exposure for Red Skull trap"
+ [[ false == true ]]
+ local count=2
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
                  END {
 next
                    if (blk != "" && !seen[blk]++) print blk "\n";
end'
                  }
+ [[ true == true ]]
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ -n {
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
  "version": "v7.2.5.F",
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ (( i++ ))
  "domain": ""
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ (( i < count ))
++ echo -e --platform=cisco
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
  "hostname": "fg-branch-vpn-01"
+ echo
+ newline
}

+ newline
+ local count=1
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
#hostname="fg-branch-vpn-01"
+ (( i++ ))
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
#model="FortiGate-60F"
+ echo
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ serialize_objects
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ (( i < count ))
+ [[ true == true ]]
  set comment "Public NAT exposure for Red Skull trap"
+ echo
 next
end ]]
+ (( i++ ))
+ (( i < count ))
+ echo -en '{
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
  "version": "v7.2.5.F",
  "domain": ""
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
  "hostname": "fg-branch-vpn-01"
}
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local count=1
+ newline
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i = 0 ))
+ local count=1
+ (( i < count ))

+ (( i = 0 ))
config firewall address
 edit "Public-Test"
+ echo
+ (( i < count ))
+ output_dir=reports/198.51.100.75/misc
  set subnet 203.0.113.25 255.255.255.255
+ echo
  set comment "Public NAT exposure for Red Skull trap"
+ [[ ! -d reports/198.51.100.75/misc ]]
 next
end'
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ (( i++ ))
+ [[ config =~ ^(config|c)$ ]]
+ local count=1
+ (( i < count ))
+ [[ true == true ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ (( i = 0 ))
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ output_dir=reports/198.51.100.75/fortinet
+ [[ config =~ ^(export|r)$ ]]
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ config == \d\e\b\u\g ]]
+ case "${target_file}" in
+ [[ -z cisco ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F77R476gXN/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console ]]
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console
+ case "${target_file}" in
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fWybc1hBlO/network-extract--switch3.conf.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ cat -n
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
+ cat -n
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ case "${target_file}" in
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ newline
+ newline 2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ result=0
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ local target_platform=cisco
+ [[ 0 -ne 0 ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ [[ true == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ echo
+ cat -n
+ [[ platform == \d\e\b\u\g ]]
+ result=0
+ (( i++ ))
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ 0 -ne 0 ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
++ dirname -- ./scripts/network-extract.shell
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ local count=1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ local parent_dir=reports/192.168.2.12/fortinet
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ newline
+ [[ false == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ local count=1
+ echo
+ (( i++ ))
+ result=0
+ (( i++ ))
+ (( i < count ))
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVi9drTQIN ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVi9drTQIN
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i = 0 ))
+ result=0
+ case "${target_file}" in
+ exit 0
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wacQxsIpy6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wacQxsIpy6
+ (( i < count ))
+ newline
+ echo
+ (( i < count ))
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ (( i < count ))
+ return 0
+ echo
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ (( i++ ))
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ return 0
+ [[ true == true ]]
+ serialize_objects
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console ]]
+ local 'extracted_configuration={
+ case "${target_file}" in
  "vendor": "cisco",
  "model": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console
  "version": "",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console
  "domain": "",
+ cat -n
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ cat -n
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console
+ result=0
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ case "${target_file}" in

object-group network Metropolis-Internal
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ [[ extract =~ ^(export|r)$ ]]
 network-object host 192.168.2.12 ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local SCRIPT_DIR=./scripts
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local script_filename=fortinet-configs.awk
+ for xitem in "${@}"
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ IFS==
+ read -r key value
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ cfg == \c\f\g ]]
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
++ which awk
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
++ dirname reports/192.168.1.10/misc/fw3.cfg
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ cat -n
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vJinzEQdTW/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ [[ logger =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console
+ local parent_dir=reports/192.168.1.10/misc
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fg-testing-config.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console
+ output_dir=reports/10.10.10.10/misc
+ [[ ! -d reports/10.10.10.10/misc ]]
++ IFS=,
++ echo 198.51.100.75
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ echo
+ declare -a execute
+ (( i++ ))
+ (( i < count ))
++ IFS=,
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo 198.51.100.75
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ local parent_dir=reports/203.0.113.25/fortinet
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ newline
++ basename reports/192.168.1.10/misc/fw3
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ declare -a execute
+ echo
+ return 0
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
++ echo -e --export
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console ]]
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ which awk
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HPeChJnQVe ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HPeChJnQVe
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LBgEmWir5T ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LBgEmWir5T
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ result=0
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WdCgZbI6g5 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WdCgZbI6g5
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--perimeter-fw1.cfg.console
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzgzMzA1NzI2OTAwMAo-- '
                    BEGIN {
+ mkdir -p reports/192.168.1.10/misc/.objects
                      in_json_header = 0;
                      blk = "";
                    }
                    /^[[:space:]]*$/ { next }
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }
                    (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
                    {
                      blk = blk divisor " " $0;
                    }
                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ sed '/^[[:space:]]*$/d'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local count=1
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ (( i < count ))
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ echo
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console ]]
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ case "${target_file}" in
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--switch1.conf.console
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ serialize_objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D4kfdlx5JU ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D4kfdlx5JU
++ printf '%*s' 12 ''
+ local 'indent=            '
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ newline
+ local 'indent=            '
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ which awk
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ result=0
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ exit 0
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CLehoaeOb1 ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CLehoaeOb1
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ echo -e --verbose
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ logger == \h\e\l\p ]]
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ awk -v divisor=--MTc0ODgzMzgzMzA2ODY2NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local parent_dir=reports/192.168.2.12/misc
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FmaloPXeVL ]]
+ case "${target_platform}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FmaloPXeVL
+ awk -v divisor=--MTc0ODgzMzgzMzEyNDI4MDAwMAo-- '
                    BEGIN {
                      in_json_header = 0;
                      blk = "";
                    }
                    /^[[:space:]]*$/ { next }
                    /^{$/ { in_json_header = 1; next }
                    /^}$/ {
                      if (in_json_header == 1) {
                        in_json_header = 0;
                        next;
                      }
                    }
                    (in_json_header == 1) { next }
                    /^#(hostname|model|config-version)=/ { next }
                    /^config / { print $0; next }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
                    {
                      blk = blk divisor " " $0;
                    }
                    END {
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ sed '/^[[:space:]]*$/d'
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ sed '/^[[:space:]]*$/d'
++ basename reports/192.168.2.12/misc/fw1
+ cat -n
++ echo -e --export
++ IFS=,
++ echo 10.10.10.10
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ declare -a execute
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
++ which awk
+ mkdir -p reports/192.168.2.12/misc/.objects
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ local 'extracted_configuration={
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
  "vendor": "cisco",
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
  "model": "",
  "version": "",
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
  "domain": "",
  "hostname": ""
}
+ local 'extracted_configuration={
+ newline

  "vendor": "fortinet",
+ local count=1
object-group network Krypton-Cloud
+ (( i = 0 ))
  "model": "FortiGate-60F",
 description Cloud-facing external nodes
  "version": "v7.2.5.F",
 network-object host 198.51.100.75
 network-object host 203.0.113.25
  "domain": ""
+ (( i < count ))

  "hostname": "fg-branch-vpn-01"
object network External-Failover
 host 198.51.100.75
+ echo
}
 description Secondary outbound route for edge'

+ (( i++ ))
#hostname="fg-branch-vpn-01"
+ (( i < count ))
+ result=0
#model="FortiGate-60F"
+ result=0
+ [[ -n {
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  "vendor": "cisco",
+ [[ 0 -ne 0 ]]
  "model": "",

+ [[ true == true ]]
config system interface
 edit "wan1"
  "version": "",
  set ip 198.51.100.75 255.255.255.0
+ newline
  set alias "Branch ISP"
  "domain": "",
  "hostname": ""
 next
}
end

+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'

+ local count=1
object-group network Krypton-Cloud
config firewall address
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i = 0 ))
 description Cloud-facing external nodes
 edit "Branch-Public"
 network-object host 198.51.100.75
  set subnet 198.51.100.75 255.255.255.255
 network-object host 203.0.113.25
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
  set comment "Branch NAT"
+ (( i < count ))

object network External-Failover
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
 next
 host 198.51.100.75
end'
 description Secondary outbound route for edge ]]
+ newline
+ result=0
+ local count=1
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ (( i = 0 ))
  "hostname": "fg-branch-vpn-01"
}
+ (( i < count ))

#hostname="fg-branch-vpn-01"
+ echo
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ (( i++ ))
+ (( i < count ))
config system interface
 edit "wan1"
+ echo
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ (( i++ ))
 next
+ (( i < count ))
end

config firewall address
+ return 0
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ [[ true == true ]]
++ tr -d '\r'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ [[ export =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ read -r key value
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw3.list
++ grep -v '^\s*$'
+ print '{
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
 host 198.51.100.75
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
 description Secondary outbound route for edge'
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ [[ -n {
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
  "vendor": "cisco",
+ print '{
+ cat -n
  "vendor": "fortinet",
  "model": "",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "version": "",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
  "domain": "",
  "hostname": ""
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
}
#config-version=FGT_60F-v7.2.5.F-build1517-230421


object-group network Krypton-Cloud
config system interface
 description Cloud-facing external nodes
 edit "wan1"
 network-object host 198.51.100.75
  set ip 198.51.100.75 255.255.255.0
 network-object host 203.0.113.25
  set alias "Branch ISP"

 next
object network External-Failover
end
 host 198.51.100.75

 description Secondary outbound route for edge ]]
config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ local awk_bin=/usr/bin/awk
  "version": "",
  "domain": "",
  "hostname": ""
}

+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
object-group network Krypton-Cloud
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
+ [[ -n {
 description Secondary outbound route for edge'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
++ grep -v '^#'
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ cat -n
config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
+ sed '1{/^[[:space:]]*$/d;}'
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --verbose
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ case "${target_platform}" in
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--MTc0ODgzMzgzMzEzNTAzMTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                  /^}$/ {
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
                      next;
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
                    }
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
                  }
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fg-campus-core.cfg.console
+ local first_search_entry=203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ return 0
+ [[ true == true ]]
+ newline 2
+ [[ true == true ]]
+ local count=2
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ] ]]
+ echo
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ echo
+ (( i++ ))
+ newline 2
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ (( i < count ))
+ local count=1
+ case "${target_file}" in
+ ((  count == 0  ))
+ return 0
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ local count=2
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i = 0 ))
+ newline
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ [[ -z cisco ]]
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console
+ exit 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1a0CZz6MW ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console
+ case "${target_file}" in
+ (( i = 0 ))
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1yCnzNvxfO/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
++ tr -d '\r'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1a0CZz6MW
+ (( i < count ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ serialize_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
++ grep -v '^\s*$'
++ grep -v '^#'
  "vendor": "cisco",
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
object-group network Shield-WiFi
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ case "${target_file}" in
 network-object 192.168.100.0 255.255.255.0

+ cat reports/192.168.2.12/misc/.objects/fw1.list
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ cat -n
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
++ dirname reports/203.0.113.25/misc/fw1.cfg
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ufrOohCUQT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ufrOohCUQT
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ result=0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ] ]]
+ exit 0
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LWn9IU2R84 ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-configs--ips.list ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LWn9IU2R84
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local parent_dir=reports/198.51.100.75/misc
+ newline
+ local parent_dir=reports/198.51.100.75/fortinet
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ newline 2
+ (( i = 0 ))
+ output_dir=reports/203.0.113.25/misc
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ return 0
+ [[ ! -d reports/203.0.113.25/misc ]]
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ echo
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console
+ echo
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ true == true ]]
+ case "${target_file}" in
++ basename reports/198.51.100.75/misc/fw1
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ mkdir -p reports/198.51.100.75/misc/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fKfeLVADn0/network-extract--fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ serialize_objects
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
++ dirname reports/10.10.10.10/misc/fw3.cfg
++ which awk
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ case "${target_platform}" in
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzgzMzI2MjMwODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ awk -v divisor=--MTc0ODgzMzgzMzIyNDU4MDAwMAo-- '
                    BEGIN {
                  /^{$/ { in_json_header = 1; next }
                      in_json_header = 0;
                  /^}$/ {
                      blk = "";
                    if (in_json_header == 1) {
                    }
                      in_json_header = 0;
+ result=0
                      next;
                    /^[[:space:]]*$/ { next }
+ exit 0
                    /^{$/ { in_json_header = 1; next }
                    }
                  }
                  (in_json_header == 1) { next }
                    /^}$/ {
                  /^[^[:space:]]/ {
                      if (in_json_header == 1) {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                        in_json_header = 0;
                    blk = $0;
                        next;
                    next;
                      }
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zh0biHQADO ]]
                  }
                    }
                    (in_json_header == 1) { next }
                  {
                    /^#(hostname|model|config-version)=/ { next }
                    blk = blk divisor " " $0;
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zh0biHQADO
                    /^config / { print $0; next }
                  }
                    /^end$/    { print $0 "\n"; next }
                    /^ edit / {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = $0;
                      next;
                    }
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
                    {
+ sed '/^[[:space:]]*$/d'
                      blk = blk divisor " " $0;
                    }
+ sed '/^[[:space:]]*$/d'
                    END {
+ local parent_dir=reports/10.10.10.10/misc
                      if (blk != "" && !seen[blk]++) print blk;
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
++ basename reports/10.10.10.10/misc/fw3
++ IFS=,
++ echo 203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ which awk
+ result=0
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ mkdir -p reports/10.10.10.10/misc/.objects
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ cat -n
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ cat -n
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ printf '%*s' 12 ''
++ which awk
+ local 'indent=            '
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ return 0
+ (( i = 0 ))
+ (( i < count ))
+ awk -v divisor=--MTc0ODgzMzgzMzM4NzYzNTAwMAo-- '
+ echo
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ (( i++ ))
                  /^[[:space:]]*$/ { next }
+ (( i < count ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                      in_json_header = 0;
                      next;
                    }
                  }
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
                  }
                ' reports/10.10.10.10/misc/fw3.cfg
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ case "${target_file}" in
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console
++ IFS=,
++ echo 203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ [[ true == true ]]
+ declare -a execute
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console ]]
+ result=0
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fw1.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q88jVY9BKX/network-extract--fg-branch-vpn-01.cfg.console
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ cat -n
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lX2l9UZfwP ]]
+ print '{
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lX2l9UZfwP
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
++ printf '%*s' 12 ''
+ exit 0
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DoNiM5eZzz ]]
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DoNiM5eZzz
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console ]]
+ echo
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JZT0lEFVCh/network-extract--fw3.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ESo8qTkx1n ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ESo8qTkx1n
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ serialize_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ local parent_dir=reports/203.0.113.25/misc
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ serialize_objects
++ basename reports/203.0.113.25/misc/fw1
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ mkdir -p reports/203.0.113.25/misc/.objects
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw3
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODgzMzgzMzQ1MzA3MzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ result=0
+ awk -v divisor=--MTc0ODgzMzgzMzQ3MTM1NTAwMAo-- '
+ [[ 0 -ne 0 ]]
                  BEGIN {
+ [[ true == true ]]
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ sed '/^[[:space:]]*$/d'
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
                    next;
                  }
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
                  {
                    blk = blk divisor " " $0;
                  }
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ cat -n
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ true == true ]]
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console ]]
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console ]]
+ exit 0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yq6jSl3con ]]
+ case "${target_file}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yq6jSl3con
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eCZexFetPG/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k949q2XtHY ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k949q2XtHY
