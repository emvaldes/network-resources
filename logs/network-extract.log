+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tovIW5tVbo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tovIW5tVbo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qGAqZGdb0n
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qGAqZGdb0n
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ export 'nl=\n'
+ nl='\n'
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias network-configs--helper=network_configs__helper
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias network-extract--helper=network_extract__helper
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ alias serialize-object=serialize_objects
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yt84WtzNDZ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yt84WtzNDZ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ nl='\n'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ alias parse-listings--helper=parse_listings__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias network-configs--helper=network_configs__helper
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias network-extract--helper=network_extract__helper
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias serialize-object=serialize_objects
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
++ mktemp -d
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose == \h\e\l\p ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-helpers.shell
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ [[ -n '' ]]
+ [[ -z '' ]]
+ dry_run=false
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -z true ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iThy11LyTq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iThy11LyTq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ tr -d '\r'
+ alias parse-cisco=main
++ alias validate-address=validate_address
+ [[ -z x ]]
++ grep -v '^\s*$'
+ export logs_location=logs
+ logs_location=logs
++ alias warning-message=warning
+ mkdir -p logs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local first_search_entry=10.0.0.1
+ touch console/network-extract.console
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
++ export jobs_location=jobs
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
++ jobs_location=jobs
+ local 'message=Search Pattern: [ .cache/ips.list ]'
++ mkdir -p jobs
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --platform=cisco
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ export targets_location=targets
+ [[ logger =~ ^(logger|l)$ ]]
++ targets_location=targets
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --verbose
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ output_dir=.cache/resources/cisco
++ mktemp -d
+ [[ ! -d .cache/resources/cisco ]]
++++ basename ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ false == true ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ source ./scripts/devops-helpers.shell
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xQEuoDrVyI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xQEuoDrVyI
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ alias serialize-object=serialize_objects
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local SCRIPT_DIR=./scripts
++ tr -d '\r'
+ local script_filename=cisco-configs.awk
++ alias system-metrics=system_metrics
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ grep -v '^\s*$'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ -z x ]]
++ export default_devices=devices.list
++ default_devices=devices.list
+ export logs_location=logs
++ export default_matrix=matrix.json
+ logs_location=logs
++ default_matrix=matrix.json
+ mkdir -p logs
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ grep -v '^#'
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
++ export jobs_location=jobs
+ script_filename=network-extract
++ jobs_location=jobs
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ mkdir -p jobs
+ touch console/network-extract.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ newline
+ local count=1
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
++ export console_location=console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ console_location=console
++ mkdir -p console
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export actions_logfile=console/run.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ actions_logfile=console/run.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ touch console/run.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ set -euo pipefail
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ export LC_ALL=C
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ LC_ALL=C
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ mktemp -d
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.smnsS3sdQa
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.smnsS3sdQa
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+++ base64
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local SCRIPT_PATH=./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
++ alias list-file=list_file
++++ basename ./scripts/devops-resources.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias log-error=log_error
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias print-message=message
+ local verbose=true
+ IFS=' 	
'
++ alias print-newline=newline
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console ]]
++ alias pause=pause
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias print-line=print
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ mapfile -t search_terms
  "model": "",
++ alias print-file=print_file
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
++ dirname -- ./scripts/network-extract.shell
++ alias relative-configpath=relative_configpath
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
++ alias system-metrics=system_metrics

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

+ [[ config =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
 network-object host 192.168.0.100
++ alias warning-message=warning
 network-object host 10.10.10.10

+ [[ config =~ ^(console|o)$ ]]
++ export LC_ALL=C
object-group network Mutant-WiFi
++ LC_ALL=C
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ export 'nl=\n'
+ [[ config =~ ^(export|r)$ ]]
++ nl='\n'
+ [[ config =~ ^(extract|x)$ ]]
++ export default_addresses=ips.list
+ [[ config =~ ^(logger|l)$ ]]
++ default_addresses=ips.list
+ [[ config =~ ^(platform|p)$ ]]
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ config =~ ^(search|s)$ ]]
++ export default_matrix=matrix.json
+ [[ config == \h\e\l\p ]]
++ default_matrix=matrix.json
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export cache_location=.cache
+ [[ config == \v\e\r\b\o\s\e ]]
++ cache_location=.cache
+ for xitem in "${@}"
++ export logs_location=logs
+ IFS==
++ logs_location=logs
+ read -r key value
++ mkdir -p logs
++ tr -d '\r'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
++ grep -v '^\s*$'
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
++ grep -v '^#'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+++ echo -n devops-resources.shell
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ which awk
++ alias network-extract--helper=network_extract__helper
++ export jobs_location=jobs
++ jobs_location=jobs
+ alias serialize-object=serialize_objects
++ mkdir -p jobs
+ local first_search_entry=10.0.0.1
+ alias parse-cisco=main
+ local last_search_entry=203.0.113.25
+ newline 2
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ message 'Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ (( i < count ))
+ echo
+ local count=17
+ ((  count == 0  ))
+ (( i++ ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ (( i < count ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ extract =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ extract == \h\e\l\p ]]
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ [[ extract == \d\e\b\u\g ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ for xitem in "${@}"
+ [[ -z cisco ]]
+ IFS==
+ [[ true == true ]]
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --platform=cisco
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ which awk
++ export actions_logfile=console/run.console
+ newline
++ actions_logfile=console/run.console
++ touch console/run.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
++ mktemp -d
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ newline
++ export targets_location=targets
+ local count=1
++ targets_location=targets
+ (( i = 0 ))
+ (( i < count ))
++ export targets_logfile=.cache/targets.jobs
+ echo
++ targets_logfile=.cache/targets.jobs
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --search=.cache/ips.list
+ (( i++ ))
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TO379eyFDX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TO379eyFDX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(extract|x)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ alias detect-vendor=detect_vendor
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias exit-error=exit_error
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --verbose
++ alias print-message=message
+ result=0
++ alias print-newline=newline
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tovIW5tVbo ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias pause=pause
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tovIW5tVbo
++ alias print-line=print
+++ echo -n devops-resources.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ dirname -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ alias parse-cisco=main
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
+ [[ -z x ]]
 network-object host 192.168.2.12
 network-object host 198.51.100.75
+ export logs_location=logs

+ logs_location=logs
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator
+ mkdir -p logs

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
++ export jobs_location=jobs

++ jobs_location=jobs
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
++ mkdir -p jobs
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
++ which awk
 description Branch router uplink NAT
+ sed '1{/^[[:space:]]*$/d;}'

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ [[ config =~ ^(config|c)$ ]]
 network-object host 198.51.100.75

+ local target_config=configs/cisco/perimeter-fw1.cfg
object network Panther-Gateway
 host 10.0.2.3
+ [[ config =~ ^(console|o)$ ]]
 description Secure outbound concentrator

object-group network Lantern-DMZ
+ [[ config =~ ^(export|r)$ ]]
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ config =~ ^(extract|x)$ ]]
 network-object host 192.168.1.11'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

++ tr -d '\r'
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ IFS=,
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ [[ 6 -eq 0 ]]
+ local count=1
+ (( i = 0 ))
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
++ which awk
'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ for xitem in "${@}"
+ [[ -z cisco ]]
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ extract =~ ^(export|r)$ ]]
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ extract =~ ^(extract|x)$ ]]
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --search=.cache/ips.list
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console
+ local 'indent=            '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ targets_logfile=.cache/targets.jobs
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ [[ search =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G3v2fXuWf5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G3v2fXuWf5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++++ basename ./scripts/devops-resources.shell
+ nl='\n'
+++ tr -dc a-zA-Z0-9
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ source ./scripts/devops-resources.shell
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
++ alias exit-error=exit_error
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console
++ alias log-info=log_info
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console ]]
++ alias log-warn=log_warn
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console ]]
++ alias print-message=message
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--branch-isr-02.cfg.console
++ alias print-newline=newline
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ alias pause=pause
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ output_dir=.cache/resources/cisco
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ ! -d .cache/resources/cisco ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

+ [[ logger =~ ^(config|c)$ ]]
interface Vlan1
+ result=0
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ exit 0
object-group network Floor-Networks
 description End-user and service devices
+ [[ logger =~ ^(console|o)$ ]]
 network-object host 192.168.0.1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qGAqZGdb0n ]]
++ alias network-extract--helper=network_extract__helper
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qGAqZGdb0n
+ [[ logger =~ ^(export|r)$ ]]
+ result=0
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ [[ logger =~ ^(logger|l)$ ]]
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ [[ logger =~ ^(platform|p)$ ]]
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ for xitem in "${@}"
+ IFS==
++ command -v -- ./scripts/network-extract.shell
++ export jobs_location=jobs
+ read -r key value
++ jobs_location=jobs
++ mkdir -p jobs
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
+ [[ -z x ]]
hostname campus-sw-access01

+ export logs_location=logs
interface Vlan1
+ logs_location=logs
 ip address 192.168.0.1 255.255.255.0
+ mkdir -p logs
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
++ dirname -- ./scripts/network-extract.shell
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ local SCRIPT_DIR=./scripts
+ [[ extract =~ ^(platform|p)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ local script_filename=cisco-configs.awk
+ [[ extract =~ ^(search|s)$ ]]
+ network_extract__console=console/network-extract.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ touch console/network-extract.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --platform=fortinet
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console --verbose
++ tr -d '\r'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
++ export targets_location=targets
++ targets_location=targets
+ newline
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ which awk
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ false == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ echo -e --search=.cache/ips.list
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console
+ IFS==
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+++ base64
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ echo
+ (( i++ ))
++ mktemp -d
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local awk_bin=/usr/bin/awk
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ printf '%*s' 12 ''
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--campus-sw-access01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+++ echo -n devops-resources.shell
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6BJ0UJZIjd
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6BJ0UJZIjd
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ alias network-configs--helper=network_configs__helper
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ echo -e --verbose
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ alias serialize-object=serialize_objects
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ alias parse-cisco=main
++ logs_location=logs
+ result=0
+ exit 0
++ mkdir -p logs
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yt84WtzNDZ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yt84WtzNDZ
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10
++ export jobs_location=jobs

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Watchtower-DMZ
 description Global secure relay
++ jobs_location=jobs
 network-object host 192.0.2.50'
++ mkdir -p jobs
+ result=0
+ script_filename=network-extract.shell
+ [[ -n {
+ script_filename=network-extract
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ export network_extract__console=console/network-extract.console
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ network_extract__console=console/network-extract.console
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ touch console/network-extract.console

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ tr -d '\r'
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ grep -v '^\s*$'
++ grep -v '^#'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.0.2.50'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
++ command -v -- ./scripts/network-extract.shell
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ 6 -eq 0 ]]
++ export console_location=console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ console_location=console
+ [[ extract =~ ^(extract|x)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console --verbose
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
++ mkdir -p console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ oIFS=' 	
'
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local count=2
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
++ echo -e --search=.cache/ips.list
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
++ echo -e --platform=fortinet
+ local count=1
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local target_platform=fortinet
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local search_pattern=.cache/ips.list
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ set -euo pipefail
+ (( i++ ))
+ export LC_ALL=C
++ export targets_location=targets
+ LC_ALL=C
+ (( i < count ))
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console
++ mktemp -d
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+++ tr -dc a-zA-Z0-9
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
++++ basename ./scripts/devops-resources.shell
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ output_dir=.cache/resources/fortinet
+ [[ config =~ ^(config|c)$ ]]
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LfCKamgwb9
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LfCKamgwb9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ command -v -- ./scripts/network-extract.shell
++ alias list-file=list_file
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias log-error=log_error
+ source ./scripts/devops-helpers.shell
++ alias log-info=log_info
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias log-warn=log_warn
++ [[ -n '' ]]
++ alias print-message=message
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-newline=newline
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias print-line=print
++ printf '%*s' 12 ''
++ alias print-file=print_file
++ alias parse-listings--helper=parse_listings__helper
++ alias relative-configpath=relative_configpath
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
++ alias system-metrics=system_metrics
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ dirname -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias validate-address=validate_address
+ echo
+ (( i++ ))
++ alias warning-message=warning
++ export LC_ALL=C
+ (( i < count ))
+ alias serialize-object=serialize_objects
++ LC_ALL=C
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ export 'nl=\n'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ nl='\n'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ result=0
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ export default_matrix=matrix.json
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ exit 0
++ default_matrix=matrix.json
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ export cache_location=.cache
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iThy11LyTq ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ cache_location=.cache
+ message '                configs/cisco/perimeter-fw1.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iThy11LyTq
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
++ export logs_location=logs
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
++ logs_location=logs
+ newline
++ mkdir -p logs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(console|o)$ ]]
+ IFS=' 	
'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ -z '' ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ export console_output=false
+ console_output=false
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local export_objects=false
+ [[ extract == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_helper=false
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=fortinet
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

++ IFS=,
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
++ export console_location=console
 network-object host 203.0.113.25
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
 network-object 192.168.2.0 255.255.255.0
++ console_location=console

object-group network Panther-Edge
 description Internet-facing proxy systems
++ mkdir -p console
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console --verbose
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ oIFS=' 	
+ declare -a execute__netwowrk_extract
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
+ [[ platform =~ ^(export|r)$ ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ platform =~ ^(extract|x)$ ]]
  "hostname": "perimeter-fw1"
}
+ [[ platform =~ ^(logger|l)$ ]]

ASA Version 9.14(3)
+ [[ platform =~ ^(platform|p)$ ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

+ local target_platform=fortinet
interface GigabitEthernet0/0
 nameif outside
+ [[ platform =~ ^(search|s)$ ]]
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ [[ platform == \h\e\l\p ]]
 description External Internet-facing Interface
+ [[ platform == \d\e\b\u\g ]]

+ [[ platform == \d\r\y\-\r\u\n ]]
interface GigabitEthernet0/1
+ [[ platform == \v\e\r\b\o\s\e ]]
 nameif inside
+ for xitem in "${@}"
++ which awk
 security-level 100
+ IFS==
+ sed '1{/^[[:space:]]*$/d;}'
+ read -r key value
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

+ local first_search_entry=10.0.0.1
object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT
+ local last_search_entry=203.0.113.25

object network Stark-Tower
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
 host 10.0.0.1
 description Core services gateway
+ [[ true == true ]]

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ local count=17
  "hostname": "perimeter-fw1"
+ ((  count == 0  ))
}

ASA Version 9.14(3)
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]

interface GigabitEthernet0/0
 nameif outside
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ newline

interface GigabitEthernet0/1
+ local count=1
 nameif inside
++ echo -e --search=.cache/ips.list
 security-level 100
+ (( i = 0 ))
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ (( i < count ))

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ echo

object-group network Panther-Edge
+ (( i++ ))
 description Internet-facing proxy systems
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -en '{
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ [[ -z fortinet ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ [[ true == true ]]

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
+ newline
 host 203.0.113.25
 description Internet-bound IP NAT

+ local count=1
object network Stark-Tower
 host 10.0.0.1
+ (( i = 0 ))
 description Core services gateway
+ (( i < count ))

object-group network Avengers-DMZ
+ echo
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ (( i++ ))
+ (( i < count ))
 network-object 192.168.2.0 255.255.255.0

+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
object-group network Panther-Edge
 description Internet-facing proxy systems
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'

object network Magneto-Core
 host 172.16.0.5
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
 description WAN firewall entry point'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ search =~ ^(platform|p)$ ]]
+ newline
+ [[ search =~ ^(search|s)$ ]]
+ newline
+ local count=1
+ local search_pattern=.cache/ips.list
+ (( i = 0 ))
+ local count=1
+ [[ search == \h\e\l\p ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ search == \d\e\b\u\g ]]
+ echo
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ (( i < count ))
+ IFS==
+ read -r key value
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ logger =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ logger =~ ^(logger|l)$ ]]
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ logger =~ ^(search|s)$ ]]
+ set -euo pipefail
+ newline
+ [[ logger == \h\e\l\p ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ mktemp -d
++ echo -e --config=configs/misc/fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+++ base64
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ read -r key value
+ local verbose=true
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.73esJKKpuQ
+ IFS=' 	
'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.73esJKKpuQ
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+++ echo -n devops-resources.shell
+ export 'nl=\n'
+ console_output=false
+ nl='\n'
+ [[ -z '' ]]
+ source ./scripts/devops-resources.shell
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
++ [[ -n '' ]]
+ search_terms=()
+ declare -a search_terms
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
+ output_dir=.cache/resources/fortinet
++ alias log-info=log_info
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias log-warn=log_warn
+ [[ ! -d .cache/resources/fortinet ]]
++ alias print-message=message
+ source ./scripts/devops-helpers.shell
++ alias print-newline=newline
++ [[ -n '' ]]
++ alias pause=pause
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-line=print
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ alias system-metrics=system_metrics
++ alias network-configs--helper=network_configs__helper
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ alias network-extract--helper=network_extract__helper
+ [[ true == true ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--perimeter-fw1.cfg.console
++ tr -d '\r'
+ alias serialize-object=serialize_objects
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ grep -v '^\s*$'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
++ grep -v '^#'
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
++ dirname -- ./scripts/network-extract.shell
  "hostname": "fg-branch-vpn-01"
}
+ alias parse-cisco=main

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ [[ -z x ]]
 next
end
+ export logs_location=logs

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ logs_location=logs
  set comment "Branch NAT"
 next
end
+ mkdir -p logs

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

+ [[ extract =~ ^(config|c)$ ]]
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
+ [[ extract =~ ^(console|o)$ ]]
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
+ [[ extract =~ ^(export|r)$ ]]
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ [[ extract =~ ^(extract|x)$ ]]
  set comment "Wakandan data store"
 next
 edit "Public-Test"
+ local extract_location=.cache/resources/misc/fw1.cfg
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ [[ extract =~ ^(logger|l)$ ]]
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ [[ extract =~ ^(platform|p)$ ]]
 next
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract =~ ^(search|s)$ ]]
end'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ for xitem in "${@}"
+ [[ -n {
++ mkdir -p jobs
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ IFS==
  "version": "v7.2.5.F",
+ read -r key value
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
+ local SCRIPT_DIR=./scripts
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ local script_filename=fortinet-configs.awk
+ local first_search_entry=10.0.0.1
  set comment "Wakandan data store"
+ local script_filepath=./scripts/extract/fortinet-configs.awk
 next
 edit "Public-Test"
+ local last_search_entry=203.0.113.25
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
  set subnet 203.0.113.25 255.255.255.255
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ result=0
end ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xQEuoDrVyI ]]
+ echo -en '{
  "vendor": "fortinet",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xQEuoDrVyI
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ message 'Search Pattern: [ .cache/ips.list ]'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
#model="FortiGate-60F"
+ local 'message=Search Pattern: [ .cache/ips.list ]'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ echo -e 'Search Pattern: [ .cache/ips.list ]'
config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
+ local count=17
  set ip 192.168.2.12 255.255.255.0
+ ((  count == 0  ))
  set alias "User LAN"
 next
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
end

+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
config firewall address
 edit "Branch-Gateway"
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
+ newline
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
+ local count=1
end
+ (( i = 0 ))

config firewall address
+ (( i < count ))
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ echo
  set comment "Backup uplink for Milano crew"
+ (( i++ ))
 next
+ (( i < count ))
end'
+ script_filename=network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ script_filename=network-extract
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ which awk
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ newline
+ local count=1
+ touch console/network-extract.console
+ (( i = 0 ))
++ echo -e --platform=cisco
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console --verbose
++ IFS=,
+ [[ platform =~ ^(config|c)$ ]]
+ oIFS=' 	
+ [[ platform =~ ^(console|o)$ ]]
'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ platform =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
++ which awk
++ echo -e --search=.cache/ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ export targets_location=targets
+ [[ logger == \d\e\b\u\g ]]
++ targets_location=targets
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export targets_logfile=.cache/targets.jobs
+ for xitem in "${@}"
++ targets_logfile=.cache/targets.jobs
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ mktemp -d
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ echo -e --config=configs/misc/fw3.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console
+++ tr -dc a-zA-Z0-9
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-branch-vpn-01.cfg.console
++++ basename ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+++ echo -n devops-resources.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
+ [[ verbose =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JcykkpOPGk
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JcykkpOPGk
+ search_terms=()
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ declare -a search_terms
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -f .cache/ips.list ]]
+ export 'nl=\n'
+ [[ .cache/ips.list != *,* ]]
+ source ./scripts/devops-helpers.shell
+ mapfile -t search_terms
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ result=0
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ exit 0
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.smnsS3sdQa ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.smnsS3sdQa
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias parse-listings--helper=parse_listings__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias network-configs--helper=network_configs__helper
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias network-extract--helper=network_extract__helper
+ local SCRIPT_DIR=./scripts
++ alias print-file=print_file
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ alias relative-configpath=relative_configpath
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ tr -d '\r'
++ mkdir -p logs
++ which awk
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
++ export jobs_location=jobs

++ jobs_location=jobs
+ sed '1{/^[[:space:]]*$/d;}'
++ mkdir -p jobs
config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
+ script_filename=network-extract.shell
+ local first_search_entry=10.0.0.1
  set comment "Wireless AP Gateway"
+ script_filename=network-extract
 next
+ local last_search_entry=203.0.113.25
 edit "Titan-WLAN-Host"
+ export network_extract__console=console/network-extract.console
  set subnet 192.168.100.100 255.255.255.255
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ network_extract__console=console/network-extract.console
  set comment "Guest WiFi node"
+ [[ true == true ]]
++ IFS=,
+ touch console/network-extract.console
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ message 'Search Pattern: [ .cache/ips.list ]'
 next
end'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
++ echo -e --platform=cisco
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ ((  count == 0  ))
+ declare -a execute__netwowrk_extract
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ newline 2
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local count=2
+ (( i = 0 ))
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console --verbose
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
+ [[ true == true ]]
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --search=.cache/ips.list
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ extract_location=.cache/resources/misc/fw1.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console
++ export targets_location=targets
+ [[ logger =~ ^(platform|p)$ ]]
++ targets_location=targets
+ [[ logger =~ ^(search|s)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/fw1.cfg
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console
++++ basename ./scripts/devops-resources.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-campus-core.cfg.console
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ verbose =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
config firewall policy
+ [[ verbose =~ ^(console|o)$ ]]
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ verbose =~ ^(export|r)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ verbose =~ ^(platform|p)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ verbose =~ ^(search|s)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
+ [[ verbose == \h\e\l\p ]]
 next
end ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ echo -en '{
+ IFS=' 	
  "vendor": "fortinet",
'
  "model": "FortiGate-60F",
+ [[ -z '' ]]
  "version": "v7.2.5.F",
+ debug=false
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ -z '' ]]
}

+ dry_run=false
#hostname="fg-branch-vpn-01"
+ [[ -z true ]]
#model="FortiGate-60F"
+ [[ -z '' ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ export console_output=false

+ console_output=false
config firewall policy
 edit 13
+ [[ -z '' ]]
  set name "Remote NAT"
  set srcintf "dmz"
+ local export_objects=false
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console ]]
  set logtraffic all
+ [[ -z '' ]]
+ script_helper=false
 next
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
end'
+ [[ -z .cache/ips.list ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ search_terms=()
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ source ./scripts/devops-helpers.shell
+ mapfile -t search_terms
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ dirname -- ./scripts/network-extract.shell
++ [[ 5 -lt 4 ]]
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ alias parse-listings--helper=parse_listings__helper
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TO379eyFDX ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TO379eyFDX
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ local extract_location=.cache/resources/misc/switch1.conf
+ newline
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ (( i++ ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ echo -e --platform=cisco
+ export network_extract__console=console/network-extract.console
+ echo
+ network_extract__console=console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ touch console/network-extract.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw3.cfg
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console ]]
+ declare -a execute__netwowrk_extract
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console
++ which awk
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console --verbose
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ oIFS=' 	
+ local target_platform=cisco
'
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console
+ [[ cfg == \c\f\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ case "${target_file}" in
+ extract_location=.cache/resources/misc/fw3.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fg-testing-config.cfg.console
++ printf '%*s' 12 ''
++ dirname .cache/resources/misc/fw3.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ result=0
+ output_dir=.cache/resources/misc
+ exit 0
+ [[ ! -d .cache/resources/misc ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G3v2fXuWf5 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G3v2fXuWf5
++ echo -e --verbose
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local target_config=configs/misc/switch3.conf
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ config =~ ^(console|o)$ ]]
+ IFS=' 	
'
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ config =~ ^(platform|p)$ ]]
+ export console_output=false
+ console_output=false
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ local export_objects=false
+ [[ config == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ [[ -z .cache/ips.list ]]
+ read -r key value
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ local SCRIPT_DIR=./scripts
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local script_filename=cisco-configs.awk

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ local script_filepath=./scripts/extract/cisco-configs.awk
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
++ which awk
+ print '{
++ echo -e --extract=.cache/resources/misc/switch3.conf
++ tr -d '\r'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
++ grep -v '^\s*$'
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
++ grep -v '^#'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ newline 2
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local first_search_entry=10.0.0.1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local last_search_entry=203.0.113.25
+ IFS==
+ read -r key value
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ echo
+ (( i++ ))
+ message 'Search Pattern: [ .cache/ips.list ]'
+ (( i < count ))
+ echo
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ true == true ]]
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ (( i = 0 ))
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ cat -n .cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
++ which awk
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ (( i++ ))
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ false == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
++ dirname .cache/resources/misc/switch1.conf
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw1.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

+ result=0
object-group network Shield-WiFi
+ exit 0
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6BJ0UJZIjd ]]
 host 10.10.10.10
 description Guest NAT'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6BJ0UJZIjd
+ result=0
++ dirname -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
+ [[ verbose =~ ^(config|c)$ ]]
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ verbose =~ ^(console|o)$ ]]
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ verbose =~ ^(export|r)$ ]]
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
+ [[ verbose =~ ^(extract|x)$ ]]
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
+ [[ verbose =~ ^(logger|l)$ ]]
 description Internet firewall handoff

+ [[ verbose =~ ^(platform|p)$ ]]
object-group network Shield-WiFi
+ local SCRIPT_DIR=./scripts
 description Shield-controlled wireless network
+ [[ verbose =~ ^(search|s)$ ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ local script_filename=cisco-configs.awk
 host 10.10.10.10
 description Guest NAT ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose == \h\e\l\p ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose == \d\e\b\u\g ]]
+ echo -en '{
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
  "model": "",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "version": "",
  "domain": "",
+ local verbose=true
  "hostname": ""
}

+ IFS=' 	
object-group network Wakanda-Core
'
 description National Core Routing Zone
 network-object host 192.168.1.10
+ [[ -z '' ]]
 network-object host 10.0.2.3
+ debug=false
 network-object 10.0.0.0 255.255.255.0
++ which awk

object-group network Panther-Edge
+ [[ -z '' ]]
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ dry_run=false
 network-object host 172.16.0.5

+ [[ -z true ]]
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ -z '' ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ export console_output=false

+ console_output=false
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ -z '' ]]
 network-object 192.168.100.0 255.255.255.0

+ local export_objects=false
object network Panther-Gateway
 host 10.0.2.3
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console ]]
 description Secure outbound concentrator

+ [[ -z '' ]]
object network Edge-Terminal
+ script_helper=false
 host 172.16.0.5
 description Internet firewall handoff
+ [[ false == true ]]

object-group network Shield-WiFi
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ -z .cache/ips.list ]]
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ search_terms=()
 host 10.10.10.10
+ declare -a search_terms
 description Guest NAT'
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ [[ -z configs/misc/switch3.conf ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -z cisco ]]
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ cat -n .cache/resources/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--fw3.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

+ sed '1{/^[[:space:]]*$/d;}'
interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
++ command -v -- ./scripts/network-extract.shell
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LfCKamgwb9 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LfCKamgwb9
++ dirname -- ./scripts/network-extract.shell
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch1.conf.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.73esJKKpuQ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.73esJKKpuQ
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
+ sed '1{/^[[:space:]]*$/d;}'
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PxzKUkA7JP/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JcykkpOPGk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JcykkpOPGk
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mm8OJEG0z9
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mm8OJEG0z9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Hb7DxD6kw
++ alias system-metrics=system_metrics
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Hb7DxD6kw
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias warning-message=warning
++ export LC_ALL=C
++ [[ 5 -lt 4 ]]
++ LC_ALL=C
++ alias detect-vendor=detect_vendor
++ export 'nl=\n'
++ nl='\n'
++ alias exit-error=exit_error
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ alias list-file=list_file
++ cache_location=.cache
++ export logs_location=logs
++ alias log-error=log_error
++ logs_location=logs
++ mkdir -p logs
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pAyOuApfK8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pAyOuApfK8
++ alias print-newline=newline
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias pause=pause
+ source ./scripts/devops-resources.shell
++ alias print-line=print
++ [[ -n '' ]]
++ alias print-file=print_file
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias relative-configpath=relative_configpath
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias system-metrics=system_metrics
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias validate-address=validate_address
++ alias log-warn=log_warn
++ alias print-message=message
++ alias warning-message=warning
++ export LC_ALL=C
++ alias print-newline=newline
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias pause=pause
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ alias print-line=print
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias print-file=print_file
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mktemp -d
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vcESdbl2Qo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vcESdbl2Qo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export console_location=console
++ alias warning-message=warning
++ console_location=console
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ mkdir -p console
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
++ export console_location=console
++ console_location=console
+ export LC_ALL=C
+ LC_ALL=C
++ mkdir -p console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ mktemp -d
++ mktemp -d
+++ base64
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ base64
++++ basename ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mezupxNwBR
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mezupxNwBR
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oVszkJQmtl
+ export 'nl=\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oVszkJQmtl
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias list-file=list_file
++ [[ -n '' ]]
++ alias log-error=log_error
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-info=log_info
++ [[ 5 -lt 4 ]]
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias detect-vendor=detect_vendor
+++ echo -n devops-resources.shell
++ alias pause=pause
++ alias exit-error=exit_error
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ set -euo pipefail
+ export LC_ALL=C
++ alias list-file=list_file
+ LC_ALL=C
++ alias log-error=log_error
++ alias system-metrics=system_metrics
+++ echo -n devops-resources.shell
++ alias log-info=log_info
+++ echo -n devops-resources.shell
++ alias log-warn=log_warn
++ alias print-message=message
+ set -euo pipefail
++ alias print-newline=newline
+ export LC_ALL=C
+ LC_ALL=C
++ alias pause=pause
++ alias print-line=print
++ alias validate-address=validate_address
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias print-file=print_file
++ alias warning-message=warning
+ source ./scripts/devops-helpers.shell
++ alias relative-configpath=relative_configpath
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export 'nl=\n'
++ __DEVOPS_HELPERS_SOURCED=1
++ nl='\n'
++ alias system-metrics=system_metrics
++ [[ 5 -lt 4 ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ logs_location=logs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ mkdir -p logs
++ alias validate-address=validate_address
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias parse-listings--helper=parse_listings__helper
++ alias warning-message=warning
+ source ./scripts/devops-helpers.shell
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export 'nl=\n'
++ __DEVOPS_HELPERS_SOURCED=1
++ nl='\n'
++ [[ -n '' ]]
++ export default_addresses=ips.list
++ [[ 5 -lt 4 ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ set -euo pipefail
++ __DEVOPS_HELPERS_SOURCED=1
++ default_addresses=ips.list
+ export LC_ALL=C
++ [[ 5 -lt 4 ]]
+ LC_ALL=C
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ alias network-configs--helper=network_configs__helper
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mktemp -d
++ mkdir -p logs
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
++ mktemp -d
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
++ export targets_location=targets
++ targets_location=targets
+ alias parse-cisco=main
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ -z x ]]
+ mkdir -p logs
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export jobs_location=jobs
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DIICus1fiT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DIICus1fiT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ jobs_location=jobs
+ source ./scripts/devops-resources.shell
++ mkdir -p jobs
++ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UGGQ5fyEXs
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UGGQ5fyEXs
++ [[ 5 -lt 4 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export jobs_location=jobs
++ alias detect-vendor=detect_vendor
++ jobs_location=jobs
+ export 'nl=\n'
++ mkdir -p jobs
++ alias exit-error=exit_error
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+++ base64
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias system-metrics=system_metrics
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ alias detect-vendor=detect_vendor
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias exit-error=exit_error
+ touch console/network-extract.console
++++ basename ./scripts/devops-resources.shell
++ alias validate-address=validate_address
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UFcm5lko3X
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UFcm5lko3X
++ alias list-file=list_file
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias log-error=log_error
++ export 'nl=\n'
++ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export default_addresses=ips.list
++ alias log-info=log_info
++ default_addresses=ips.list
+ script_filename=network-extract.shell
++ export default_devices=devices.list
+ export 'nl=\n'
++ default_devices=devices.list
+ nl='\n'
+ script_filename=network-extract
++ alias log-warn=log_warn
+ source ./scripts/devops-resources.shell
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ export network_extract__console=console/network-extract.console
++ export cache_location=.cache
++ cache_location=.cache
+ network_extract__console=console/network-extract.console
++ export logs_location=logs
++ logs_location=logs
++ alias print-message=message
+ touch console/network-extract.console
++ mkdir -p logs
++ [[ -n '' ]]
++ alias print-newline=newline
+++ tr -dc a-zA-Z0-9
++ alias pause=pause
++ alias print-line=print
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias print-file=print_file
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
++ alias relative-configpath=relative_configpath
+ script_filename=network-extract
++ alias detect-vendor=detect_vendor
+ export network_extract__console=console/network-extract.console
++ alias exit-error=exit_error
+ network_extract__console=console/network-extract.console
++ alias system-metrics=system_metrics
+ touch console/network-extract.console
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias validate-address=validate_address
++ alias log-warn=log_warn
++ alias warning-message=warning
++ alias print-message=message
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ alias print-newline=newline
++ export logs_location=logs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ logs_location=logs
++ mkdir -p logs
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ mktemp -d
++ alias warning-message=warning
++ export LC_ALL=C
++ export console_location=console
++ LC_ALL=C
++ console_location=console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2x9ktevuKs
+++ echo -n devops-resources.shell
++ mkdir -p console
++ export 'nl=\n'
++ nl='\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2x9ktevuKs
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ cache_location=.cache
++ export logs_location=logs
+ export 'nl=\n'
+ nl='\n'
++ export console_location=console
+ source ./scripts/devops-resources.shell
++ console_location=console
++ mkdir -p console
++ logs_location=logs
++ mkdir -p logs
++ mktemp -d
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias list-file=list_file
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias log-error=log_error
+ source ./scripts/devops-helpers.shell
++ alias log-info=log_info
++ alias log-warn=log_warn
++ [[ -n '' ]]
++ alias print-message=message
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-newline=newline
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias parse-listings--helper=parse_listings__helper
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.emhu9oqkf7/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias system-metrics=system_metrics
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias network-configs--helper=network_configs__helper
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xxxdjgpiut/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console --export --verbose
++ export jobs_location=jobs
+ for xitem in "${@}"
++ jobs_location=jobs
+ IFS==
++ alias network-extract--helper=network_extract__helper
+ read -r key value
++ mkdir -p jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
++ alias validate-address=validate_address
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ecmq1j5rep/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console --export --verbose
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jlw0LCMirv
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jlw0LCMirv
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9vgFvgXvMv
++ [[ -n '' ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9vgFvgXvMv
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list
++ alias list-file=list_file
++ export actions_logfile=console/run.console
++ alias log-error=log_error
++ actions_logfile=console/run.console
++ alias list-file=list_file
++ touch console/run.console
++ alias log-info=log_info
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias log-info=log_info
++ export jobs_location=jobs
++ alias print-message=message
++ jobs_location=jobs
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ mkdir -p jobs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ export actions_logfile=console/run.console
++ alias validate-address=validate_address
++ actions_logfile=console/run.console
++ export console_location=console
++ alias warning-message=warning
++ alias validate-address=validate_address
++ export LC_ALL=C
++ console_location=console
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
++ export 'nl=\n'
++ nl='\n'
++ alias warning-message=warning
++ touch console/run.console
++ export default_addresses=ips.list
++ export LC_ALL=C
++ default_addresses=ips.list
++ LC_ALL=C
++ export default_devices=devices.list
++ default_devices=devices.list
++ export 'nl=\n'
++ export default_matrix=matrix.json
++ nl='\n'
++ default_matrix=matrix.json
++ export default_addresses=ips.list
++ export cache_location=.cache
++ default_addresses=ips.list
++ cache_location=.cache
++ export default_devices=devices.list
++ export logs_location=logs
++ default_devices=devices.list
++ logs_location=logs
++ export default_matrix=matrix.json
++ mkdir -p logs
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ search =~ ^(export|r)$ ]]
++ touch console/run.console
+ [[ search =~ ^(extract|x)$ ]]
++ export console_location=console
+ [[ search =~ ^(logger|l)$ ]]
++ console_location=console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list
++ export jobs_location=jobs
++ mkdir -p console
+ [[ search == \h\e\l\p ]]
++ jobs_location=jobs
++ export targets_location=targets
++ export jobs_location=jobs
++ mkdir -p jobs
++ targets_location=targets
++ jobs_location=jobs
+ [[ search =~ ^(config|c)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ mkdir -p jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(logger|l)$ ]]
++ targets_location=targets
+ [[ search =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(search|s)$ ]]
++ targets_logfile=.cache/targets.jobs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ export console_location=console
++ actions_logfile=console/run.console
++ console_location=console
++ touch console/run.console
++ mkdir -p console
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2bRmvrTMxU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2bRmvrTMxU
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4a1ts3viv/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console --export --verbose
++ alias log-info=log_info
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ alias log-warn=log_warn
++ alias print-message=message
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ oIFS=' 	
'
++ alias print-newline=newline
+ for xitem in "${@}"
++ alias pause=pause
++ alias print-line=print
+++ base64
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ mktemp -d
++ mktemp -d
++ alias validate-address=validate_address
++ export targets_location=targets
++ targets_location=targets
++ alias warning-message=warning
++ export targets_logfile=.cache/targets.jobs
++ export LC_ALL=C
++ export console_location=console
++ targets_logfile=.cache/targets.jobs
++ console_location=console
++++ basename ./scripts/devops-resources.shell
++ LC_ALL=C
++ mkdir -p console
+++ base64
++ export console_location=console
++ console_location=console
++ export 'nl=\n'
++ nl='\n'
++ mkdir -p console
++ export default_addresses=ips.list
+ IFS==
++ default_addresses=ips.list
+ read -r key value
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ export actions_logfile=console/run.console
++ cache_location=.cache
++ actions_logfile=console/run.console
++ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ logs_location=logs
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p logs
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
++ export targets_location=targets
+++ base64
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++++ basename ./scripts/devops-resources.shell
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ config =~ ^(config|c)$ ]]
++ touch console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yTE0DPgeON
++ touch console/run.console
+++ tr -dc a-zA-Z0-9
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yTE0DPgeON
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UBn2fFTCCt
+ [[ config =~ ^(console|o)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UBn2fFTCCt
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export 'nl=\n'
+ [[ config =~ ^(export|r)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ nl='\n'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ [[ config =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ [[ config =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(console|o)$ ]]
++ [[ -n '' ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ config == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ config == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
++ export jobs_location=jobs
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(export|r)$ ]]
++ jobs_location=jobs
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ mkdir -p jobs
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
++ alias list-file=list_file
+ [[ config =~ ^(platform|p)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(search|s)$ ]]
++ alias log-info=log_info
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias log-info=log_info
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ alias print-message=message
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-message=message
+ [[ config == \h\e\l\p ]]
++ alias print-newline=newline
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias pause=pause
+ for xitem in "${@}"
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
+ IFS==
+ read -r key value
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias network-configs--helper=network_configs__helper
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_location=targets
++ targets_logfile=.cache/targets.jobs
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias network-configs--helper=network_configs__helper
++ alias warning-message=warning
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export 'nl=\n'
++ default_addresses=ips.list
++ nl='\n'
++ export default_devices=devices.list
++ export default_addresses=ips.list
++ default_devices=devices.list
++ export targets_logfile=.cache/targets.jobs
++ export default_matrix=matrix.json
++ default_addresses=ips.list
++ default_matrix=matrix.json
++ targets_logfile=.cache/targets.jobs
++ export default_devices=devices.list
++ export cache_location=.cache
++ default_devices=devices.list
++ cache_location=.cache
++ export default_matrix=matrix.json
++ export logs_location=logs
++ default_matrix=matrix.json
++ logs_location=logs
++ alias network-extract--helper=network_extract__helper
++ export cache_location=.cache
++ mkdir -p logs
++ cache_location=.cache
++ export logs_location=logs
+ alias serialize-object=serialize_objects
++ logs_location=logs
++ mkdir -p logs
+ alias serialize-object=serialize_objects
+++ echo -n devops-resources.shell
+ alias parse-cisco=main
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ base64
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ alias parse-cisco=main
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+ [[ -z x ]]
+ [[ search == \h\e\l\p ]]
+ export logs_location=logs
+ [[ search == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ search == \d\r\y\-\r\u\n ]]
+ mkdir -p logs
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ alias serialize-object=serialize_objects
+++ tr -dc a-zA-Z0-9
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z x ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ extract =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ mkdir -p logs
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ base64
++ export jobs_location=jobs
++ jobs_location=jobs
++ export jobs_location=jobs
++ mkdir -p jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ tr -dc a-zA-Z0-9
+++ echo -n devops-resources.shell
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+++ base64
+ source ./scripts/devops-helpers.shell
++++ basename ./scripts/devops-resources.shell
++ echo -e --platform=fortinet
++++ basename ./scripts/devops-resources.shell
++ [[ -n '' ]]
+++ echo -n devops-resources.shell
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ source ./scripts/devops-helpers.shell
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ __DEVOPS_HELPERS_SOURCED=1
++ alias network-extract--helper=network_extract__helper
++ export console_location=console
++ export console_location=console
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ console_location=console
++ mkdir -p console
+ alias serialize-object=serialize_objects
++ alias parse-listings--helper=parse_listings__helper
++ console_location=console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ mkdir -p console
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+++ echo -n devops-resources.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ set -euo pipefail
++ [[ 5 -lt 4 ]]
+++ echo -n devops-resources.shell
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ alias parse-cisco=main
++ alias network-extract--helper=network_extract__helper
+ touch console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias network-extract--helper=network_extract__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ alias serialize-object=serialize_objects
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ alias serialize-object=serialize_objects
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
+ script_filename=network-extract
++ alias parse-listings--helper=parse_listings__helper
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
++ mktemp -d
+ touch console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z x ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ export logs_location=logs
+ [[ -z x ]]
+ logs_location=logs
+ [[ extract =~ ^(search|s)$ ]]
+ export logs_location=logs
++ alias network-extract--helper=network_extract__helper
+ logs_location=logs
+ [[ extract == \h\e\l\p ]]
+ mkdir -p logs
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ mkdir -p logs
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ alias parse-cisco=main
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bx4ddtdobg/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export targets_location=targets
+ [[ -z x ]]
++ targets_location=targets
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console --export --verbose
+ export logs_location=logs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ oIFS=' 	
'
+ logs_location=logs
+ for xitem in "${@}"
+ mkdir -p logs
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
+ [[ config =~ ^(console|o)$ ]]
++ actions_logfile=console/run.console
+ [[ extract == \d\e\b\u\g ]]
++ touch console/run.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UTaqfJoVVb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UTaqfJoVVb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ echo -e --platform=cisco
+++ base64
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
++ alias log-info=log_info
+ script_filename=network-extract.shell
++++ basename ./scripts/devops-resources.shell
+ export network_extract__console=console/network-extract.console
++ alias log-warn=log_warn
++ alias print-message=message
+ script_filename=network-extract
+ script_filename=network-extract.shell
+ export network_extract__console=console/network-extract.console
++ alias print-newline=newline
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias pause=pause
+ touch console/network-extract.console
+ touch console/network-extract.console
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ export targets_location=targets
++ alias relative-configpath=relative_configpath
++ targets_location=targets
+ script_filename=network-extract.shell
+++ tr -dc a-zA-Z0-9
++ export targets_logfile=.cache/targets.jobs
+ script_filename=network-extract
++ targets_logfile=.cache/targets.jobs
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias system-metrics=system_metrics
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
++ alias validate-address=validate_address
+ set -euo pipefail
+ export LC_ALL=C
++ alias warning-message=warning
+ LC_ALL=C
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ [[ 7 -eq 0 ]]
++ export default_addresses=ips.list
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ecmq1j5rep/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ 7 -eq 0 ]]
++ default_devices=devices.list
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.buwrdhqogh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ export default_matrix=matrix.json
++ export targets_location=targets
++ targets_location=targets
++ default_matrix=matrix.json
+ [[ config =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console --export --verbose
++ export targets_logfile=.cache/targets.jobs
++ export cache_location=.cache
++ cache_location=.cache
++ targets_logfile=.cache/targets.jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+++ echo -n devops-resources.shell
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fe4wvgqlqv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ search =~ ^(logger|l)$ ]]
+ oIFS=' 	
'
+ oIFS=' 	
+ for xitem in "${@}"
'
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ [[ search =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ base64
++ alias parse-listings--helper=parse_listings__helper
++++ basename ./scripts/devops-resources.shell
++ mktemp -d
++ mktemp -d
+++ base64
+++ tr -dc a-zA-Z0-9
++ alias network-configs--helper=network_configs__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console
+ [[ 7 -eq 0 ]]
++++ basename ./scripts/devops-resources.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.emhu9oqkf7/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console --export --verbose
++ mkdir -p jobs
++ alias network-extract--helper=network_extract__helper
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jxhwwm5f07/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ oIFS=' 	
'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xxxdjgpiut/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.pzctmmwb3i/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console --export --verbose
+ IFS==
+ alias serialize-object=serialize_objects
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ifMyi2MVf6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ifMyi2MVf6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ oIFS=' 	
'
+ export 'nl=\n'
+ nl='\n'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+++ echo -n devops-resources.shell
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ oIFS=' 	
'
++ alias exit-error=exit_error
+ read -r key value
++ alias list-file=list_file
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console --export --verbose
++ alias log-error=log_error
++ alias log-info=log_info
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ IFS==
+ read -r key value
++ alias print-message=message
++ alias print-newline=newline
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
+ for xitem in "${@}"
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ IFS==
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ read -r key value
++ alias print-file=print_file
+ source ./scripts/devops-helpers.shell
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ alias parse-cisco=main
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ platform =~ ^(export|r)$ ]]
+ mkdir -p logs
+ [[ platform =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
++ alias parse-listings--helper=parse_listings__helper
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ platform =~ ^(logger|l)$ ]]
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ platform =~ ^(platform|p)$ ]]
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ alias network-configs--helper=network_configs__helper
++ cache_location=.cache
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Cn7ccsa14o
++ export logs_location=logs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Cn7ccsa14o
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CKpewm93vU
++ logs_location=logs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CKpewm93vU
+ export 'nl=\n'
++ mkdir -p logs
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
+ local target_platform=cisco
+ export 'nl=\n'
+ nl='\n'
+ [[ platform =~ ^(search|s)$ ]]
+ source ./scripts/devops-resources.shell
++ alias network-extract--helper=network_extract__helper
+ [[ platform == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ platform == \d\e\b\u\g ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias detect-vendor=detect_vendor
++ alias log-warn=log_warn
++ export console_location=console
++ alias exit-error=exit_error
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias print-message=message
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ console_location=console
++ mkdir -p console
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias list-file=list_file
++ alias print-newline=newline
++ __DEVOPS_HELPERS_SOURCED=1
++ alias log-error=log_error
++ alias log-info=log_info
++ alias pause=pause
++ alias log-warn=log_warn
++ alias print-line=print
++ alias print-message=message
++ alias print-newline=newline
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
+ alias parse-cisco=main
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list
++ alias pause=pause
++ alias relative-configpath=relative_configpath
++ alias print-line=print
+ [[ -z x ]]
++ alias print-file=print_file
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias parse-listings--helper=parse_listings__helper
++ alias system-metrics=system_metrics
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list
++ alias validate-address=validate_address
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias warning-message=warning
+ [[ search =~ ^(extract|x)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias validate-address=validate_address
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias warning-message=warning
++ export default_devices=devices.list
++ default_devices=devices.list
++ export LC_ALL=C
++ export default_matrix=matrix.json
++ LC_ALL=C
++ default_matrix=matrix.json
+ [[ search =~ ^(logger|l)$ ]]
++ alias network-configs--helper=network_configs__helper
++ export cache_location=.cache
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list
++ export 'nl=\n'
++ cache_location=.cache
+ [[ search =~ ^(platform|p)$ ]]
++ export logs_location=logs
++ nl='\n'
++ logs_location=logs
+ [[ search =~ ^(search|s)$ ]]
++ export default_addresses=ips.list
++ mkdir -p logs
++ default_addresses=ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ search == \h\e\l\p ]]
++ export default_matrix=matrix.json
+ [[ search == \d\e\b\u\g ]]
++ default_matrix=matrix.json
+ [[ search == \d\r\y\-\r\u\n ]]
++ export cache_location=.cache
+ [[ search == \v\e\r\b\o\s\e ]]
++ cache_location=.cache
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ export logs_location=logs
++ alias network-extract--helper=network_extract__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list
++ logs_location=logs
++ mkdir -p logs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ [[ config =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
+ [[ config =~ ^(platform|p)$ ]]
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z x ]]
+ [[ config == \d\e\b\u\g ]]
+ export logs_location=logs
+ [[ config == \d\r\y\-\r\u\n ]]
+ logs_location=logs
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ mkdir -p logs
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ export jobs_location=jobs
++ jobs_location=jobs
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
++ mkdir -p jobs
+ network_extract__console=console/network-extract.console
+ script_filename=network-extract
+ touch console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
++ export jobs_location=jobs
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ jobs_location=jobs
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(search|s)$ ]]
+ read -r key value
++ mkdir -p jobs
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ IFS==
+ [[ search == \d\e\b\u\g ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list
++ mktemp -d
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ 7 -eq 0 ]]
+ script_filename=network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ehedjcgrwq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ script_filename=network-extract
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4a1ts3viv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ read -r key value
+ export network_extract__console=console/network-extract.console
++ export console_location=console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console --export --verbose
++ console_location=console
+ network_extract__console=console/network-extract.console
++ mkdir -p console
+ [[ config =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console --export --verbose
+ touch console/network-extract.console
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export console_location=console
+ [[ search =~ ^(logger|l)$ ]]
++ console_location=console
+ [[ search =~ ^(platform|p)$ ]]
++ mkdir -p console
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(export|r)$ ]]
++ mktemp -d
+ for xitem in "${@}"
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AHCBicXtuS
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AHCBicXtuS
++++ basename ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ alias list-file=list_file
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias log-error=log_error
++ touch console/run.console
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ [[ extract =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias pause=pause
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ 7 -eq 0 ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9iunoddxcq/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias print-file=print_file
+ [[ config =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ alias relative-configpath=relative_configpath
++ actions_logfile=console/run.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
++ touch console/run.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console --export --verbose
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PLXVPJe7C7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PLXVPJe7C7
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias validate-address=validate_address
+ oIFS=' 	
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ export 'nl=\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ [[ 5 -lt 4 ]]
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ alias detect-vendor=detect_vendor
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ alias exit-error=exit_error
++ logs_location=logs
++ mkdir -p logs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
'
+ set -euo pipefail
++ alias pause=pause
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ export LC_ALL=C
++ alias print-line=print
+ [[ config =~ ^(platform|p)$ ]]
+ LC_ALL=C
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
++ alias relative-configpath=relative_configpath
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias system-metrics=system_metrics
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+++ echo -n devops-resources.shell
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console
++ export 'nl=\n'
+ [[ config == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ mktemp -d
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(search|s)$ ]]
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ echo -e --export
++ export targets_location=targets
++ targets_location=targets
+ alias serialize-object=serialize_objects
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ echo -e --platform=cisco
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list
++ export jobs_location=jobs
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zkng1Ks4qP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zkng1Ks4qP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ search =~ ^(config|c)$ ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ platform =~ ^(config|c)$ ]]
++ LC_ALL=C
+++ base64
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+++ base64
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++++ basename ./scripts/devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ export console_location=console
++ console_location=console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ mkdir -p console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++++ basename ./scripts/devops-resources.shell
+++ base64
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ extract == \h\e\l\p ]]
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ tr -dc a-zA-Z0-9
+ IFS==
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+++ tr -dc a-zA-Z0-9
++ export console_location=console
+ script_filename=network-extract.shell
++ console_location=console
+ [[ extract =~ ^(platform|p)$ ]]
++ mkdir -p console
+ script_filename=network-extract
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ touch console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS==
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ for xitem in "${@}"
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ [[ platform == \h\e\l\p ]]
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ echo -n devops-resources.shell
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+++ echo -n devops-resources.shell
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+++ echo -n devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ for xitem in "${@}"
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ IFS==
++ __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ mktemp -d
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias parse-listings--helper=parse_listings__helper
++ export jobs_location=jobs
++ [[ 5 -lt 4 ]]
++ jobs_location=jobs
++ mkdir -p jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ alias network-extract--helper=network_extract__helper
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ alias network-configs--helper=network_configs__helper
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console
++ echo -e --platform=cisco
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(export|r)$ ]]
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ [[ 7 -eq 0 ]]
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0x0qzttrvm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ alias parse-cisco=main
+ [[ logger =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ mkdir -p logs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mSzEpiCzBc
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mSzEpiCzBc
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export targets_location=targets
++ [[ 5 -lt 4 ]]
++ targets_location=targets
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list
++ alias system-metrics=system_metrics
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(config|c)$ ]]
++ export LC_ALL=C
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ LC_ALL=C
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ export 'nl=\n'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export targets_location=targets
+ [[ platform =~ ^(logger|l)$ ]]
++ nl='\n'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ targets_location=targets
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local target_platform=cisco
++ export targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(extract|x)$ ]]
++ targets_logfile=.cache/targets.jobs
++ export default_addresses=ips.list
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ default_addresses=ips.list
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export default_devices=devices.list
+ [[ platform == \h\e\l\p ]]
++ default_devices=devices.list
+ [[ config == \d\e\b\u\g ]]
++ export default_matrix=matrix.json
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console
++ default_matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ local target_platform=cisco
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ for xitem in "${@}"
+ [[ config == \v\e\r\b\o\s\e ]]
++ export cache_location=.cache
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
++ cache_location=.cache
+ [[ platform == \d\e\b\u\g ]]
++ export logs_location=logs
+ [[ platform == \d\r\y\-\r\u\n ]]
++ logs_location=logs
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mkdir -p logs
+ for xitem in "${@}"
+ IFS==
+ script_filename=network-extract.shell
+ read -r key value
+ script_filename=network-extract.shell
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ script_filename=network-extract
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ logger =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ read -r key value
+ touch console/network-extract.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+++ base64
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console
++ echo -e --platform=cisco
++ echo -e --platform=cisco
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console
++ echo -e --export
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ echo -e --export
++++ basename ./scripts/devops-resources.shell
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.buwrdhqogh/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ecmq1j5rep/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console --export --verbose
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console --export --verbose
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list
+ oIFS=' 	
+ [[ search == \h\e\l\p ]]
'
+ oIFS=' 	
'
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export targets_location=targets
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ source ./scripts/devops-helpers.shell
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bx4ddtdobg/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console --export --verbose
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+++ echo -n devops-resources.shell
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ platform =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(config|c)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ export logs_location=logs
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ logs_location=logs
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ platform =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ mkdir -p logs
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ local export_objects=true
+ read -r key value
+ local target_platform=cisco
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ export console_location=console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ console_location=console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ mkdir -p console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ logger == \h\e\l\p ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list
+++ base64
+ alias parse-cisco=main
++++ basename ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ [[ config =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ touch console/network-extract.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ export actions_logfile=console/run.console
+ read -r key value
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(extract|x)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(logger|l)$ ]]
+ script_filename=network-extract
+ [[ search =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ export network_extract__console=console/network-extract.console
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ network_extract__console=console/network-extract.console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ touch console/network-extract.console
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list
++ alias parse-listings--helper=parse_listings__helper
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console
+ set -euo pipefail
++ alias network-configs--helper=network_configs__helper
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --platform=cisco
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ echo -e --verbose
++ echo -e --export
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --export
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console
++ echo -e --verbose
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ mktemp -d
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z x ]]
+ IFS==
+ local export_objects=true
+ read -r key value
+ export logs_location=logs
+ [[ export =~ ^(extract|x)$ ]]
+ logs_location=logs
+ mkdir -p logs
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ export =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.fe4wvgqlqv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
++ echo -e --config=.cache/resources/misc/switch1.conf
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.zr2uqialv3/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
++ echo -e --verbose
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ [[ platform =~ ^(logger|l)$ ]]
+ script_filename=network-extract
+ [[ export =~ ^(console|o)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ export =~ ^(export|r)$ ]]
+ network_extract__console=console/network-extract.console
+ local export_objects=true
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console
+ touch console/network-extract.console
+ local export_objects=true
+ [[ verbose == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mbBEddyD0Y
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mbBEddyD0Y
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\e\b\u\g ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ export 'nl=\n'
+ [[ verbose =~ ^(console|o)$ ]]
+ nl='\n'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ local verbose=true
+ [[ platform == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS=' 	
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
'
+ [[ platform == \d\e\b\u\g ]]
++ alias detect-vendor=detect_vendor
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ [[ -z '' ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ debug=false
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ IFS==
+ [[ export == \d\r\y\-\r\u\n ]]
+ read -r key value
++ alias log-error=log_error
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
+ local target_config=.cache/resources/misc/fw3.cfg
+ IFS==
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
++ alias print-message=message
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ dry_run=false
+ local target_config=.cache/resources/misc/switch1.conf
+ for xitem in "${@}"
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ read -r key value
+++ base64
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ read -r key value
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ config =~ ^(extract|x)$ ]]
+ export console_output=false
+ for xitem in "${@}"
++ alias pause=pause
+ console_output=false
+ local verbose=true
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ read -r key value
+ [[ -z true ]]
+ IFS=' 	
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list
+ [[ -z '' ]]
+ [[ config =~ ^(logger|l)$ ]]
'
++ alias print-line=print
+ [[ config =~ ^(platform|p)$ ]]
+ script_helper=false
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ debug=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]]
+ dry_run=false
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -z true ]]
+ IFS==
+ [[ platform =~ ^(platform|p)$ ]]
+ search_terms=()
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ declare -a search_terms
+ local target_platform=cisco
+ [[ config =~ ^(console|o)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ export == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]]
+ export console_output=false
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
+ console_output=false
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list != *,* ]]
++ alias system-metrics=system_metrics
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ mapfile -t search_terms
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ script_helper=false
+ [[ false == true ]]
++ export 'nl=\n'
+++ tr -dc a-zA-Z0-9
++ nl='\n'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]]
++ mkdir -p logs
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.up7w7xsupg/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console --export --verbose
++ echo -e --export
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --verbose
+ for xitem in "${@}"
+ local export_objects=true
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ export == \d\e\b\u\g ]]
+ source ./scripts/devops-helpers.shell
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console
++ alias network-configs--helper=network_configs__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.o1hwOCox8l
++ alias network-extract--helper=network_extract__helper
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.o1hwOCox8l
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ alias serialize-object=serialize_objects
++ alias print-file=print_file
+ [[ search =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ [[ search =~ ^(platform|p)$ ]]
++ export console_location=console
++ alias validate-address=validate_address
++ console_location=console
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --verbose
++ export 'nl=\n'
++ nl='\n'
++ mkdir -p console
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ [[ -z x ]]
+ read -r key value
++ echo -e --verbose
+ export logs_location=logs
+ [[ config == \h\e\l\p ]]
+ logs_location=logs
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ mkdir -p logs
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ export actions_logfile=console/run.console
+ [[ logger =~ ^(logger|l)$ ]]
++ actions_logfile=console/run.console
++ touch console/run.console
+ IFS==
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local verbose=true
+ IFS=' 	
'
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ -z '' ]]
+ debug=false
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ script_helper=false
+ export console_output=false
+ console_output=false
+ [[ false == true ]]
+ [[ -z true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]]
+ script_helper=false
+ search_terms=()
+ script_filename=network-extract.shell
+ declare -a search_terms
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ script_filename=network-extract
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --verbose
++ export console_location=console
+ [[ platform =~ ^(console|o)$ ]]
++ console_location=console
++ mkdir -p console
+ [[ platform =~ ^(export|r)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ platform =~ ^(extract|x)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --export
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ export targets_location=targets
+ [[ extract == \h\e\l\p ]]
++ targets_location=targets
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ extract == \v\e\r\b\o\s\e ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
++ grep -v '^\s*$'
+ LC_ALL=C
++ tr -d '\r'
++ grep -v '^#'
++ mktemp -d
++ grep -v '^\s*$'
++ mktemp -d
+++ base64
++ grep -v '^#'
++++ basename ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ tr -dc a-zA-Z0-9
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+++ echo -n devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zz0u4cGVG6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zz0u4cGVG6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.18MZz147ou
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.18MZz147ou
+ export 'nl=\n'
++ mktemp -d
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ alias exit-error=exit_error
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias list-file=list_file
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias log-error=log_error
+ source ./scripts/devops-helpers.shell
++ alias log-info=log_info
++ [[ 5 -lt 4 ]]
++ alias log-warn=log_warn
++ alias detect-vendor=detect_vendor
++ alias print-message=message
++ alias exit-error=exit_error
++ alias print-newline=newline
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias pause=pause
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-line=print
++ alias list-file=list_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ echo -e --platform=fortinet
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias log-error=log_error
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7eHyPJ0KTu
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7eHyPJ0KTu
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export cache_location=.cache
++ cache_location=.cache
+ export 'nl=\n'
++ export logs_location=logs
+ nl='\n'
++ logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-resources.shell
++ mkdir -p logs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
++ alias list-file=list_file
++ alias log-error=log_error
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zy1z8fNPG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zy1z8fNPG
++ alias log-info=log_info
++ alias log-warn=log_warn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias print-message=message
++ alias network-extract--helper=network_extract__helper
+ export 'nl=\n'
++ alias print-newline=newline
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
+ alias serialize-object=serialize_objects
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger =~ ^(config|c)$ ]]
++ export jobs_location=jobs
++ [[ 5 -lt 4 ]]
++ jobs_location=jobs
++++ basename ./scripts/devops-resources.shell
++ mkdir -p jobs
+ [[ logger =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ logger =~ ^(export|r)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ [[ platform =~ ^(console|o)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias exit-error=exit_error
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(logger|l)$ ]]
++ mktemp -d
+ [[ platform =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias log-error=log_error
+ set -euo pipefail
+ export LC_ALL=C
++ alias log-info=log_info
+ local target_platform=fortinet
+ LC_ALL=C
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-message=message
++ alias print-newline=newline
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias pause=pause
++ alias print-line=print
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xxxdjgpiut/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias print-file=print_file
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console --export --verbose
++ alias relative-configpath=relative_configpath
++ mktemp -d
++ alias system-metrics=system_metrics
+++ echo -n devops-resources.shell
++ mktemp -d
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ [[ verbose =~ ^(config|c)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ verbose =~ ^(console|o)$ ]]
++ mktemp -d
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ export jobs_location=jobs
+ [[ verbose =~ ^(logger|l)$ ]]
++ jobs_location=jobs
+ [[ verbose =~ ^(platform|p)$ ]]
++ mkdir -p jobs
+ [[ verbose =~ ^(search|s)$ ]]
+ oIFS=' 	
'
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(console|o)$ ]]
++ export console_location=console
+ [[ export =~ ^(export|r)$ ]]
++ console_location=console
+ local export_objects=true
++ [[ -n '' ]]
++ mkdir -p console
+ [[ export =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local first_search_entry=10.0.1.2
+ [[ export =~ ^(search|s)$ ]]
+ local first_search_entry=10.0.2.3
+ local last_search_entry=10.0.1.2
+ [[ export == \h\e\l\p ]]
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --export
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias network-extract--helper=network_extract__helper
+ touch console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7VMqmHlOn6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7VMqmHlOn6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
++ [[ -n '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ] ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]'
+ alias parse-cisco=main
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ -z x ]]
+ for xitem in "${@}"
+ export logs_location=logs
++ export console_location=console
+ logs_location=logs
++ console_location=console
+ mkdir -p logs
++ mkdir -p console
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8eKYI67tN
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8eKYI67tN
++ alias print-file=print_file
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias relative-configpath=relative_configpath
+ source ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CX7DsrOrUC
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CX7DsrOrUC
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ -n '' ]]
+ export 'nl=\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias system-metrics=system_metrics
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ alias detect-vendor=detect_vendor
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias exit-error=exit_error
++ alias list-file=list_file
++ export 'nl=\n'
++ nl='\n'
++ alias log-error=log_error
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias log-info=log_info
++ export default_devices=devices.list
++ default_devices=devices.list
++ alias log-warn=log_warn
++ export default_matrix=matrix.json
++ alias list-file=list_file
++ default_matrix=matrix.json
++ alias print-message=message
++ export cache_location=.cache
+ IFS==
++ cache_location=.cache
++ export logs_location=logs
++ alias log-error=log_error
++ logs_location=logs
++ alias print-newline=newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zk4I3peAnC
++ mkdir -p logs
++ alias log-info=log_info
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zk4I3peAnC
++ alias log-warn=log_warn
++ alias pause=pause
++ alias print-message=message
++ alias print-line=print
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias print-newline=newline
+ export 'nl=\n'
+ nl='\n'
++ alias print-file=print_file
+ source ./scripts/devops-resources.shell
++ alias pause=pause
++ alias relative-configpath=relative_configpath
++ export console_location=console
++ alias print-line=print
++ export jobs_location=jobs
++ [[ -n '' ]]
++ export actions_logfile=console/run.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ jobs_location=jobs
++ console_location=console
+ read -r key value
++ actions_logfile=console/run.console
++ [[ 5 -lt 4 ]]
++ mkdir -p console
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ mkdir -p jobs
++ touch console/run.console
++ alias detect-vendor=detect_vendor
++ alias relative-configpath=relative_configpath
++ alias exit-error=exit_error
++ alias validate-address=validate_address
++ alias list-file=list_file
++ alias warning-message=warning
++ alias system-metrics=system_metrics
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ export LC_ALL=C
++ alias log-error=log_error
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ LC_ALL=C
++ alias log-info=log_info
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ alias validate-address=validate_address
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ alias warning-message=warning
++ export logs_location=logs
++ logs_location=logs
++ export LC_ALL=C
++ LC_ALL=C
++ mkdir -p logs
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jxhwwm5f07/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias pause=pause
++ alias print-line=print
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ export =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ [[ export =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ oIFS=' 	
+ local export_objects=true
+ local verbose=true
'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
++ alias validate-address=validate_address
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias warning-message=warning
+ [[ logger == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
++ export LC_ALL=C
+ [[ logger == \d\e\b\u\g ]]
++ LC_ALL=C
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ logger == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ] ]]
+ for xitem in "${@}"
++ export default_addresses=ips.list
+ IFS=' 	
+ for xitem in "${@}"
+ IFS==
++ default_addresses=ips.list
+ IFS==
+ echo
++ export default_devices=devices.list
+ read -r key value
+ read -r key value
'
++ default_devices=devices.list
+ script_filename=network-extract.shell
++ export actions_logfile=console/run.console
++ export default_matrix=matrix.json
++ actions_logfile=console/run.console
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ touch console/run.console
++ export logs_location=logs
++ logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list
+ script_filename=network-extract
++ mkdir -p logs
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]'
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -z '' ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ debug=false
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ -z '' ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ dry_run=false
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
++ echo -e --export
+ local count=1
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9iunoddxcq/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export jobs_location=jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console --export --verbose
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ export targets_location=targets
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console ]]
++ targets_location=targets
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ export targets_logfile=.cache/targets.jobs
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ targets_logfile=.cache/targets.jobs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]]
+ search_terms=()
+ newline
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
++ export console_location=console
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
+++ base64
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ export console_location=console
+ [[ search =~ ^(extract|x)$ ]]
++ console_location=console
+ [[ search =~ ^(logger|l)$ ]]
++ mkdir -p console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+++ base64
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+++ echo -n devops-resources.shell
+ [[ search =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ touch console/run.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ export console_location=console
+ [[ export =~ ^(console|o)$ ]]
++ console_location=console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ mkdir -p console
+ [[ verbose =~ ^(search|s)$ ]]
+ local export_objects=true
++++ basename ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+++ tr -dc a-zA-Z0-9
++ touch console/run.console
+++ base64
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local verbose=true
++++ basename ./scripts/devops-resources.shell
+ [[ export =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS=' 	
'
+ [[ export =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ debug=false
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ export == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ export == \v\e\r\b\o\s\e ]]
+ console_output=false
+ for xitem in "${@}"
+ [[ -z true ]]
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console ]]
+ read -r key value
+ [[ -z '' ]]
+ script_helper=false
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]]
++ alias network-configs--helper=network_configs__helper
+++ tr -dc a-zA-Z0-9
++ alias network-extract--helper=network_extract__helper
++ export actions_logfile=console/run.console
+ set -euo pipefail
++ actions_logfile=console/run.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list != *,* ]]
++ export actions_logfile=console/run.console
++ touch console/run.console
+ mapfile -t search_terms
+ export LC_ALL=C
++ actions_logfile=console/run.console
+ alias serialize-object=serialize_objects
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ LC_ALL=C
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+++ echo -n devops-resources.shell
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ mktemp -d
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+++ echo -n devops-resources.shell
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ echo -e --verbose
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias parse-listings--helper=parse_listings__helper
++ touch console/run.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export targets_location=targets
++ targets_location=targets
+ source ./scripts/devops-helpers.shell
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ export targets_location=targets
+ (( i = 0 ))
++ targets_location=targets
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ export targets_logfile=.cache/targets.jobs
+ (( i < count ))
++ targets_logfile=.cache/targets.jobs
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
++ alias network-configs--helper=network_configs__helper
+ (( i < count ))
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ newline
+ [[ -z '' ]]
+ dry_run=false
+ local count=1
+ (( i = 0 ))
+ alias serialize-object=serialize_objects
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
+ (( i < count ))
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ alias parse-cisco=main
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TMkv4Xmidb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TMkv4Xmidb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias parse-cisco=main
+ source ./scripts/devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ [[ -n '' ]]
+ [[ -z x ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ export logs_location=logs
+ logs_location=logs
++ tr -d '\r'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ mkdir -p logs
++ alias exit-error=exit_error
+ script_filename=network-extract.shell
++ alias list-file=list_file
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ alias log-error=log_error
+ network_extract__console=console/network-extract.console
++ alias log-info=log_info
+ touch console/network-extract.console
++ alias log-warn=log_warn
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hs0gl7rPhe
+ [[ -z true ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hs0gl7rPhe
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list
+ [[ -z true ]]
++ alias system-metrics=system_metrics
+ [[ search == \h\e\l\p ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ export 'nl=\n'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ mktemp -d
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ nl='\n'
++ grep -v '^\s*$'
+ source ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ export 'nl=\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ search == \d\e\b\u\g ]]
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+++ base64
++ grep -v '^#'
++++ basename ./scripts/devops-resources.shell
+++ base64
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ base64
++++ basename ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ehedjcgrwq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ export targets_location=targets
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(config|c)$ ]]
++ targets_location=targets
+ script_filename=network-extract.shell
++ alias exit-error=exit_error
++ export targets_logfile=.cache/targets.jobs
+ script_filename=network-extract
++ targets_logfile=.cache/targets.jobs
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9L40PoUp4D
+ [[ extract =~ ^(console|o)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias log-error=log_error
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9L40PoUp4D
+ [[ config =~ ^(logger|l)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(export|r)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ export 'nl=\n'
+ [[ config =~ ^(platform|p)$ ]]
++ alias log-info=log_info
+ nl='\n'
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+++ echo -n devops-resources.shell
++ [[ 5 -lt 4 ]]
++ alias log-warn=log_warn
+ [[ config == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ config == \d\e\b\u\g ]]
++ alias print-message=message
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
++ [[ 5 -lt 4 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ alias detect-vendor=detect_vendor
++ alias pause=pause
+ for xitem in "${@}"
++ alias exit-error=exit_error
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+++ echo -n devops-resources.shell
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ extract == \h\e\l\p ]]
++ alias list-file=list_file
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ alias log-error=log_error
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ verbose =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
++ alias network-configs--helper=network_configs__helper
++ alias print-file=print_file
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias print-message=message
++ alias print-newline=newline
++ alias relative-configpath=relative_configpath
++ alias pause=pause
+ local first_search_entry=172.16.0.5
++ alias print-line=print
+ local last_search_entry=172.16.0.5
++ alias network-extract--helper=network_extract__helper
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
++ alias print-file=print_file
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ echo
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias relative-configpath=relative_configpath
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i++ ))
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(platform|p)$ ]]
+ source ./scripts/devops-helpers.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ] ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias system-metrics=system_metrics
+ alias serialize-object=serialize_objects
++ [[ -n '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]'
+ [[ -z '' ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ __DEVOPS_HELPERS_SOURCED=1
++ alias validate-address=validate_address
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias warning-message=warning
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias validate-address=validate_address
+ local count=1
++ [[ -n '' ]]
++ export 'nl=\n'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ ((  count == 0  ))
++ nl='\n'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias warning-message=warning
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias parse-listings--helper=parse_listings__helper
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_addresses=ips.list
++ export default_matrix=matrix.json
++ default_addresses=ips.list
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
++ mkdir -p logs
++ export default_devices=devices.list
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
++ default_devices=devices.list
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ alias parse-cisco=main
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list
++ export default_matrix=matrix.json
++ alias network-configs--helper=network_configs__helper
+ set -euo pipefail
+ local verbose=true
++ default_matrix=matrix.json
+ export LC_ALL=C
+ IFS=' 	
+ LC_ALL=C
'
+ [[ -z x ]]
+ [[ -z '' ]]
+ export logs_location=logs
++ alias network-configs--helper=network_configs__helper
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
++ export cache_location=.cache
+ debug=false
+ logs_location=logs
++ alias network-extract--helper=network_extract__helper
++ cache_location=.cache
++ export logs_location=logs
+ mkdir -p logs
++ logs_location=logs
+ newline
++ mkdir -p logs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ echo
+ (( i++ ))
+ [[ -z '' ]]
+ alias serialize-object=serialize_objects
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ 7 -eq 0 ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]]
+ alias serialize-object=serialize_objects
+ local 'prompt_message=Enter configuration file to be parsed: '
+ alias serialize-object=serialize_objects
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ search_terms=()
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0x0qzttrvm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z cisco ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ tr -d '\r'
+ alias parse-cisco=main
++ mktemp -d
++ export console_location=console
++ console_location=console
+ [[ -z x ]]
+++ base64
+ export logs_location=logs
++ mkdir -p console
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
+ declare -a search_terms
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list != *,* ]]
+ [[ -z x ]]
+ mapfile -t search_terms
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --platform=cisco
++++ basename ./scripts/devops-resources.shell
+ newline
+ [[ 7 -eq 0 ]]
++ grep -v '^\s*$'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v2ctwgvrv2/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console --export --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_helper=false
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ oIFS=' 	
+ [[ false == true ]]
'
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ echo -n devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ export jobs_location=jobs
+ [[ extract =~ ^(extract|x)$ ]]
++ jobs_location=jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ mkdir -p jobs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ extract == \d\e\b\u\g ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ script_filename=network-extract.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export actions_logfile=console/run.console
+ export network_extract__console=console/network-extract.console
++ actions_logfile=console/run.console
+ network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
++ touch console/run.console
+ touch console/network-extract.console
+ script_filename=network-extract
+ for xitem in "${@}"
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ [[ platform =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G91eyEnGf6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G91eyEnGf6
++ alias parse-listings--helper=parse_listings__helper
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ export 'nl=\n'
+ [[ platform =~ ^(search|s)$ ]]
+ nl='\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list
++ grep -v '^#'
++ alias network-configs--helper=network_configs__helper
+ [[ platform == \h\e\l\p ]]
+ source ./scripts/devops-resources.shell
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ alias serialize-object=serialize_objects
+ [[ -z x ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias list-file=list_file
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export console_location=console
++ console_location=console
+ [[ search =~ ^(config|c)$ ]]
++ mkdir -p console
++ alias pause=pause
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.up7w7xsupg/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias print-line=print
+ [[ search =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ search =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
++ alias print-file=print_file
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list
+ oIFS=' 	
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
'
+ [[ search == \h\e\l\p ]]
+ logs_location=logs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+ mkdir -p logs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mktemp -d
++ mkdir -p logs
++ export console_location=console
++ export targets_location=targets
++ console_location=console
++ targets_location=targets
+ [[ 7 -eq 0 ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.zr2uqialv3/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ mkdir -p console
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lmkmsoq9xb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ mkdir -p logs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local last_search_entry=10.0.0.1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ [[ true == true ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list != *,* ]]
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ mapfile -t search_terms
+ [[ cfg == \c\f\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ] ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list
+ [[ search =~ ^(console|o)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local count=1
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+++ base64
+ [[ platform =~ ^(export|r)$ ]]
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export jobs_location=jobs
+ echo
+ for xitem in "${@}"
++ jobs_location=jobs
+ script_filename=network-extract.shell
+ IFS==
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Or1jp3eda
+ (( i++ ))
+ script_filename=network-extract
+++ tr -dc a-zA-Z0-9
+ read -r key value
++ mkdir -p jobs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Or1jp3eda
++ export actions_logfile=console/run.console
+ export network_extract__console=console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ network_extract__console=console/network-extract.console
++ actions_logfile=console/run.console
+ export 'nl=\n'
+ nl='\n'
+ touch console/network-extract.console
+ source ./scripts/devops-resources.shell
++ touch console/run.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(console|o)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ logger =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ] ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console
++ alias list-file=list_file
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
++ alias log-error=log_error
+ [[ logger == \h\e\l\p ]]
+ script_filename=network-extract
+ [[ cfg == \c\f\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ export network_extract__console=console/network-extract.console
+ newline
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ alias log-info=log_info
+ local count=1
+ network_extract__console=console/network-extract.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ IFS==
+ touch console/network-extract.console
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ alias print-message=message
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias print-newline=newline
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ [[ search == \d\e\b\u\g ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ export LC_ALL=C
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ LC_ALL=C
+ [[ verbose == \d\e\b\u\g ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ export == \v\e\r\b\o\s\e ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list
+ local verbose=true
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ nl='\n'
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
++ export default_addresses=ips.list
+ IFS=' 	
+ [[ extract == \d\e\b\u\g ]]
++ default_addresses=ips.list
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ local target_platform=fortinet
+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ read -r key value
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
'
+ IFS==
+ IFS==
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ dry_run=false
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
+ [[ -z '' ]]
+ read -r key value
+ [[ -z true ]]
++ cache_location=.cache
+ debug=false
+ [[ -z '' ]]
+ IFS==
+ export console_output=false
+ read -r key value
+ console_output=false
++ export logs_location=logs
+ [[ -z true ]]
++ logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ dry_run=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ [[ -z true ]]
++ mkdir -p logs
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ script_helper=false
+ [[ -z '' ]]
+ IFS==
++ tr -d '\r'
+ local count=1
+ export console_output=false
+ ((  count == 0  ))
+ console_output=false
+ [[ false == true ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -z true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list ]]
+ [[ -z '' ]]
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ newline
+ search_terms=()
+ local count=1
+ declare -a search_terms
+ script_helper=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list ]]
+ [[ false == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list != *,* ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ mapfile -t search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --verbose
++ grep -v '^\s*$'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^#'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ echo -e --platform=cisco
++ echo -e --verbose
++ grep -v '^\s*$'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ search_terms=()
+ declare -a search_terms
+ [[ verbose =~ ^(config|c)$ ]]
++ export jobs_location=jobs
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]]
++ jobs_location=jobs
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list != *,* ]]
++ mkdir -p jobs
+ mapfile -t search_terms
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ tr -d '\r'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ grep -v '^#'
+ IFS=' 	
'
+ [[ config =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ debug=false
+ [[ -z '' ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ dry_run=false
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ export console_output=false
+ [[ config =~ ^(logger|l)$ ]]
+ console_output=false
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console ]]
+ [[ config == \d\e\b\u\g ]]
+ local first_search_entry=172.16.1.6
++ grep -v '^\s*$'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local last_search_entry=172.16.1.6
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
++ export targets_location=targets
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ script_helper=false
+ local verbose=true
+ IFS==
+ [[ export =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ IFS==
+ [[ false == true ]]
+ read -r key value
+ local export_objects=true
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ search_terms=()
+ [[ export =~ ^(logger|l)$ ]]
+ declare -a search_terms
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list != *,* ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
+ mapfile -t search_terms
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_platform=fortinet
+ local count=1
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ ((  count == 0  ))
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ (( i++ ))
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ local target_platform=cisco
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ local count=1
+ [[ platform == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
++ grep -v '^#'
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ local target_platform=cisco
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ (( i++ ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ (( i < count ))
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ script_helper=false
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ config == \h\e\l\p ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ false == true ]]
+ [[ -z cisco ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ true == true ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ newline
+ search_terms=()
+ declare -a search_terms
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list != *,* ]]
+ for xitem in "${@}"
+ mapfile -t search_terms
+ (( i = 0 ))
++ export console_location=console
+ (( i < count ))
+ IFS==
++ console_location=console
++ export console_location=console
+ echo
+ read -r key value
++ mkdir -p console
++ console_location=console
+ (( i++ ))
+ (( i < count ))
++ targets_location=targets
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ export targets_logfile=.cache/targets.jobs
+ IFS=' 	
++ export targets_location=targets
+ local first_search_entry=10.10.10.10
'
++ targets_logfile=.cache/targets.jobs
+ local last_search_entry=10.10.10.10
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
+ (( i < count ))
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
++ targets_location=targets
++ mkdir -p console
+ [[ verbose =~ ^(search|s)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ debug=false
+ local 'prompt_message=Enter configuration file to be parsed: '
++ targets_logfile=.cache/targets.jobs
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ tr -d '\r'
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
+ local first_search_entry=172.31.255.254
+ local last_search_entry=172.31.255.254
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ true == true ]]
++ tr -d '\r'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list ]'
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
++ echo -e --export
+ local first_search_entry=192.0.2.50
+ newline
+ [[ -z '' ]]
+ local last_search_entry=192.0.2.50
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ [[ verbose == \h\e\l\p ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline
+ local count=1
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ tr -d '\r'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
+ echo
++ grep -v '^#'
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ] ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]'
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local count=1
++ export actions_logfile=console/run.console
+ ((  count == 0  ))
++ actions_logfile=console/run.console
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
++ touch console/run.console
+ newline
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ local count=1
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z cisco ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ newline
+ [[ extract =~ ^(logger|l)$ ]]
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ local first_search_entry=192.168.0.100
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ] ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ local last_search_entry=192.168.0.100
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ] ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ IFS==
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ IFS==
+ read -r key value
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console
+ local export_objects=true
+ [[ cfg == \c\f\g ]]
+ read -r key value
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local verbose=true
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]'
+ IFS=' 	
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
+ [[ export =~ ^(logger|l)$ ]]
'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ ((  count == 0  ))
+ output_dir=reports/10.0.2.3/cisco
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ export =~ ^(search|s)$ ]]
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ [[ logger == \d\e\b\u\g ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z '' ]]
+ local count=1
+ debug=false
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ cfg == \c\f\g ]]
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ for xitem in "${@}"
+ local first_search_entry=172.18.1.20
+ (( i < count ))
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ for xitem in "${@}"
+ [[ -z '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ dry_run=false
+ [[ export == \d\e\b\u\g ]]
+ local verbose=true
+ local last_search_entry=172.18.1.20
+ IFS==
+ echo
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ [[ -z true ]]
+ read -r key value
+ local count=1
+ export console_output=false
+ (( i = 0 ))
+ IFS==
+ read -r key value
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ IFS=' 	
+ export console_output=false
+ read -r key value
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ console_output=false
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local first_search_entry=10.10.10.10
+ [[ extract =~ ^(platform|p)$ ]]
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ echo
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console ]]
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ (( i < count ))
+ alias serialize-object=serialize_objects
+ console_output=false
+ (( i < count ))
'
+ local count=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console
+ [[ -z '' ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ script_helper=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ for xitem in "${@}"
+ [[ false == true ]]
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ] ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ IFS==
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ debug=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]]
+ [[ logger =~ ^(search|s)$ ]]
+ search_terms=()
+ [[ logger == \h\e\l\p ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ [[ -z cisco ]]
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ newline
+ ((  count == 0  ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local count=1
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -z true ]]
+ ((  count == 0  ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ] ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -z '' ]]
+ echo
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ (( i++ ))
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
+++ base64
+ newline
+ local count=1
+ (( i = 0 ))
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+++ base64
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
++ export targets_location=targets
++++ basename ./scripts/devops-resources.shell
++ echo -e --platform=cisco
++ targets_location=targets
+ newline
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --export
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --export
++ grep -v '^\s*$'
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ output_dir=reports/172.16.1.6/cisco
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ conf == \c\o\n\f ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(config|c)$ ]]
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local count=1
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export =~ ^(search|s)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]'
+ output_dir=reports/10.0.1.2/fortinet
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ local export_objects=true
+ [[ platform == \v\e\r\b\o\s\e ]]
+ alias parse-cisco=main
+ dry_run=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ script_helper=false
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ false == true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
++ export actions_logfile=console/run.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
++ actions_logfile=console/run.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ touch console/run.console
+ read -r key value
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ [[ verbose =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ set -euo pipefail
+ [[ export == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ export LC_ALL=C
+ [[ verbose =~ ^(search|s)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ LC_ALL=C
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
++ command -v -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ -z '' ]]
+ [[ export =~ ^(console|o)$ ]]
+ debug=false
+ [[ -z '' ]]
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ export =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ console_output=false
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ local export_objects=true
+ [[ platform =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ export =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ source ./scripts/devops-helpers.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local first_search_entry=192.168.0.1
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local count=1
+ echo
++ dirname reports/172.31.255.254/misc/switch1.conf
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i++ ))
+ ((  count == 0  ))
+ local last_search_entry=192.168.0.1
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ search_terms=()
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ declare -a search_terms
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ] ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ local count=1
+ [[ -z x ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+++ base64
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ echo
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]]
+ [[ -z '' ]]
+ (( i < count ))
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++++ basename ./scripts/devops-resources.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
++ mktemp -d
+ [[ true == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+++ tr -dc a-zA-Z0-9
++ dirname -- ./scripts/network-extract.shell
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ config == \h\e\l\p ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ config == \d\e\b\u\g ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ IFS==
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
++ echo -e --verbose
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ [[ -n '' ]]
+ read -r key value
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ output_dir=reports/192.0.2.50/cisco
++ echo -e --verbose
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.31.255.254/misc
+ [[ ! -d reports/172.31.255.254/misc ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ [[ 5 -lt 4 ]]
+ output_dir=reports/192.168.0.100/cisco
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^#'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ export console_output=false
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ source ./scripts/devops-helpers.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JwiiyyVfbJ
+ [[ logger =~ ^(config|c)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JwiiyyVfbJ
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ export 'nl=\n'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ console_output=false
+ echo
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ nl='\n'
+ [[ -z true ]]
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z cisco ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ set -euo pipefail
++ alias exit-error=exit_error
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local verbose=true
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ local verbose=true
'
+ set -euo pipefail
+ [[ -z '' ]]
+ IFS=' 	
+ debug=false
'
+ export LC_ALL=C
+ read -r key value
+ [[ -z '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ [[ -z '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias list-file=list_file
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ dry_run=false
+ LC_ALL=C
+ export LC_ALL=C
+ for xitem in "${@}"
++ alias log-error=log_error
+ [[ -z true ]]
+ IFS==
+ debug=false
++ which awk
++ alias log-info=log_info
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ LC_ALL=C
+ dry_run=false
+ [[ -z '' ]]
+ [[ logger =~ ^(config|c)$ ]]
+ export console_output=false
+ [[ -z true ]]
+ console_output=false
+ read -r key value
+ [[ -z '' ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
+ [[ logger =~ ^(console|o)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ export console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console ]]
+ console_output=false
++ alias print-message=message
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ -z true ]]
+ script_helper=false
+ [[ logger =~ ^(export|r)$ ]]
++ alias print-newline=newline
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS=' 	
+ script_helper=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]]
'
+ search_terms=()
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ declare -a search_terms
+ debug=false
++ alias pause=pause
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console
++ alias network-configs--helper=network_configs__helper
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]]
+ [[ -z '' ]]
++ export targets_location=targets
+ search_terms=()
++ alias print-line=print
+ [[ logger =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
++ [[ -n '' ]]
++ targets_location=targets
+ declare -a search_terms
+ dry_run=false
++ dirname -- ./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ script_helper=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list != *,* ]]
+ [[ -z true ]]
+ [[ logger == \h\e\l\p ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
++ alias network-extract--helper=network_extract__helper
++ alias print-file=print_file
+ [[ false == true ]]
+ [[ logger == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ export console_output=false
+ local first_search_entry=192.168.1.10
++ alias relative-configpath=relative_configpath
+ local last_search_entry=192.168.1.10
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ console_output=false
+ IFS==
+ read -r key value
+ [[ -z true ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console ]]
+ [[ -z x ]]
+ [[ true == true ]]
+ export logs_location=logs
+ [[ -z '' ]]
+ logs_location=logs
+ script_helper=false
++ alias system-metrics=system_metrics
+ mkdir -p logs
+ [[ false == true ]]
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ cfg == \c\f\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]]
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local count=1
++ dirname -- ./scripts/network-extract.shell
+ search_terms=()
+ ((  count == 0  ))
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ declare -a search_terms
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ mktemp -d
++ alias validate-address=validate_address
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ alias warning-message=warning
++ mktemp -d
+ newline
++ export LC_ALL=C
++ LC_ALL=C
+ local count=1
+ (( i = 0 ))
++ export 'nl=\n'
+ (( i < count ))
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ echo
++ export logs_location=logs
++ logs_location=logs
+ (( i++ ))
+ (( i < count ))
++ mkdir -p logs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --export
++ grep -v '^\s*$'
++ echo -e --export
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ echo -e --export
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ tr -d '\r'
+ output_dir=reports/10.10.10.10/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ grep -v '^#'
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ tr -d '\r'
++ grep -v '^\s*$'
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ grep -v '^\s*$'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list != *,* ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ grep -v '^\s*$'
++ grep -v '^#'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sxX5CXSIAN
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sxX5CXSIAN
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ grep -v '^#'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ IFS=,
++ alias print-message=message
++ echo 172.16.1.6
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cNwoi9ipyQ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cNwoi9ipyQ
+ output_dir=reports/192.168.0.1/cisco
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ [[ -n '' ]]
++ alias warning-message=warning
+ script_filename=network-extract.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export LC_ALL=C
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ LC_ALL=C
+ [[ export =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ declare -a execute__netwowrk_extract
++ export 'nl=\n'
+ [[ export =~ ^(console|o)$ ]]
++ nl='\n'
++ export default_addresses=ips.list
+ [[ export =~ ^(export|r)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ default_addresses=ips.list
+ local export_objects=true
++ export default_devices=devices.list
+ [[ export =~ ^(extract|x)$ ]]
++ default_devices=devices.list
++ export jobs_location=jobs
++ export default_matrix=matrix.json
+ [[ export =~ ^(logger|l)$ ]]
++ default_matrix=matrix.json
++ jobs_location=jobs
+ [[ export =~ ^(platform|p)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ export =~ ^(search|s)$ ]]
++ export logs_location=logs
++ mkdir -p jobs
+ [[ export == \h\e\l\p ]]
++ logs_location=logs
++ [[ 5 -lt 4 ]]
+ export network_extract__console=console/network-extract.console
++ mkdir -p logs
++ which awk
+ network_extract__console=console/network-extract.console
+ [[ export =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ which awk
+ IFS==
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ export =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export == \h\e\l\p ]]
+ local export_objects=true
+ [[ export == \d\e\b\u\g ]]
+ mapfile -t search_terms
+ [[ export =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
++ alias log-error=log_error
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ IFS==
++ export targets_logfile=.cache/targets.jobs
+ read -r key value
+ local script_filename=cisco-configs.awk
++ targets_logfile=.cache/targets.jobs
++ alias log-info=log_info
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z cisco ]]
++ alias log-warn=log_warn
+ [[ export == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-message=message
+ [[ export == \d\e\b\u\g ]]
++ alias print-newline=newline
+ (( i = 0 ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ script_filename=network-extract.shell
++ alias pause=pause
+ for xitem in "${@}"
+ script_filename=network-extract
+ IFS==
++ alias print-line=print
+ read -r key value
+ local first_search_entry=10.0.0.1
++ alias print-file=print_file
+ local SCRIPT_DIR=./scripts
+ local last_search_entry=10.0.0.1
++ which awk
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ local script_filename=fortinet-configs.awk
+ [[ true == true ]]
++ alias relative-configpath=relative_configpath
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
+ local first_search_entry=172.16.1.6
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ local last_search_entry=172.16.1.6
++ which awk
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ] ]]
+ [[ true == true ]]
++ alias system-metrics=system_metrics
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ local first_search_entry=10.0.1.2
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
+ local last_search_entry=10.0.1.2
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ] ]]
+ local count=1
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
+ ((  count == 0  ))
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
++ alias validate-address=validate_address
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local count=1
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ ((  count == 0  ))
+ newline
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ cfg == \c\f\g ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ local count=1
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]'
+ newline
+ (( i = 0 ))
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
++ alias warning-message=warning
+ local count=1
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local first_search_entry=172.16.0.5
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ local last_search_entry=172.16.0.5
++ export LC_ALL=C
+ echo
++ LC_ALL=C
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ local 'prompt_message=Enter configuration file to be parsed: '
++ default_addresses=ips.list
+ [[ -z .cache/resources/misc/switch1.conf ]]
++ export default_devices=devices.list
+ [[ -z cisco ]]
++ default_devices=devices.list
+ [[ true == true ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]'
+ alias parse-cisco=main
+ (( i++ ))
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ] ]]
++ export logs_location=logs
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]'
++ logs_location=logs
+ echo
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-configs--ips.list ]'
++ mkdir -p logs
+ [[ -z x ]]
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ local count=1
+ echo
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ ((  count == 0  ))
+ [[ -z fortinet ]]
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ export network_extract__console=console/network-extract.console
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ] ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ newline
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ network_extract__console=console/network-extract.console
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ (( i++ ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ newline
++ echo -e --verbose
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ echo -e --verbose
++ echo -e --verbose
++ tr -d '\r'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(export|r)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p jobs
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
++ export console_location=console
+ local awk_bin=/usr/bin/awk
++ console_location=console
+ [[ 7 -eq 0 ]]
++ mkdir -p console
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lmkmsoq9xb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ which awk
+ oIFS=' 	
+ [[ extract =~ ^(platform|p)$ ]]
'
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+++ base64
++ IFS=,
++ echo 192.0.2.50
++ grep -v '^#'
++++ basename ./scripts/devops-resources.shell
++ IFS=,
++ echo 172.31.255.254
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+++ tr -dc a-zA-Z0-9
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
++ IFS=,
++ echo 192.168.0.100
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+ output_dir=reports/192.168.1.10/fortinet
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -d reports/192.168.1.10/fortinet ]]
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ export console_location=console
+ [[ verbose =~ ^(platform|p)$ ]]
++ console_location=console
+ [[ verbose =~ ^(search|s)$ ]]
++ mkdir -p console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ export jobs_location=jobs
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ jobs_location=jobs
+ IFS=' 	
+ [[ verbose =~ ^(config|c)$ ]]
++ which awk
+ [[ verbose =~ ^(console|o)$ ]]
+++ echo -n devops-resources.shell
+ local 'indent=            '
+ [[ verbose =~ ^(export|r)$ ]]
'
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ mkdir -p jobs
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ which awk
+ [[ -z '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ debug=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ newline
+ newline
+ dry_run=false
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ echo
+ [[ -z '' ]]
+ export logs_location=logs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ logs_location=logs
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ export console_output=false
+ mkdir -p logs
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ console_output=false
+ local verbose=true
+ [[ verbose == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ verbose == \d\r\y\-\r\u\n ]]
'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ local verbose=true
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ -z true ]]
+ [[ conf == \c\o\n\f ]]
++ which awk
+ [[ cfg == \c\f\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console ]]
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ -z '' ]]
+ (( i < count ))
+ debug=false
+ IFS=' 	
+ [[ -z '' ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
'
+ dry_run=false
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -z '' ]]
+ [[ -z true ]]
+ script_helper=false
+ [[ -z '' ]]
+ [[ false == true ]]
+ export console_output=false
+ console_output=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z true ]]
++ which awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ search_terms=()
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console ]]
+ debug=false
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z '' ]]
+ [[ -z '' ]]
+ declare -a search_terms
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
+ script_helper=false
+ touch console/network-extract.console
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ dry_run=false
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ -z true ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ false == true ]]
+ [[ -z '' ]]
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-configs--ips.list ]'
++ alias parse-listings--helper=parse_listings__helper
++ which awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ export console_output=false
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ console_output=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list != *,* ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ mapfile -t search_terms
+ [[ -z '' ]]
+ search_terms=()
+ script_helper=false
+ declare -a search_terms
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ alias network-configs--helper=network_configs__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list != *,* ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ search_terms=()
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ mapfile -t search_terms
+ declare -a search_terms
+ (( i++ ))
+ local first_search_entry=10.0.2.3
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]]
+ local last_search_entry=10.0.2.3
+ newline
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list != *,* ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ local count=1
+ mapfile -t search_terms
+ (( i = 0 ))
+ for xitem in "${@}"
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ echo
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ (( i < count ))
+ final_output=reports/172.16.0.5/misc/fw3.cfg
++ which awk
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-extract--helper=network_extract__helper
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ dirname reports/10.0.0.1/misc/switch1.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
++ dirname reports/172.16.0.5/misc/fw3.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
++ tr -d '\r'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ tr -d '\r'
+ alias serialize-object=serialize_objects
++ printf '%*s' 12 ''
++ grep -v '^\s*$'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ printf '%*s' 12 ''
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ printf '%*s' 12 ''
++ echo 10.10.10.10
+ local 'indent=            '
++ IFS=,
+ local 'indent=            '
++ echo 192.168.0.1
++ grep -v '^\s*$'
+ [[ true == true ]]
+ output_dir=reports/10.0.0.1/misc
++ grep -v '^#'
+ [[ ! -d reports/10.0.0.1/misc ]]
+ local 'indent=            '
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
++ grep -v '^#'
+ newline
+ output_dir=reports/172.16.1.6/fortinet
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ newline
+ local count=1
+ declare -a execute__netwowrk_extract
+ newline
+ output_dir=reports/172.16.0.5/misc
++ grep -v '^#'
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/172.16.0.5/misc ]]
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
++ export targets_location=targets
+ (( i++ ))
+ (( i++ ))
++ targets_location=targets
+ (( i < count ))
+ echo
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_DIR=./scripts
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ local script_filename=fortinet-configs.awk
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
++ alias network-configs--helper=network_configs__helper
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ command -v -- ./scripts/network-extract.shell
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local first_search_entry=172.18.1.20
+ echo
+ local last_search_entry=172.18.1.20
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ true == true ]]
+ [[ true == true ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ touch console/run.console
+ alias parse-cisco=main
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ] ]]
+ [[ -z x ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]'
+ export logs_location=logs
+ logs_location=logs
+ alias serialize-object=serialize_objects
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-configs--ips.list ]'
+ mkdir -p logs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
+ local first_search_entry=192.168.2.12
++ IFS=,
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ local last_search_entry=192.168.2.12
+ result=0
+ local count=1
+ [[ -n {
+ IFS==
++ echo 10.0.1.2
  "vendor": "cisco",
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ ((  count == 0  ))
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
  "model": "",
  "version": "16.9",
  "domain": "",
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
  "hostname": "branch-isr-02"
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ local first_search_entry=192.168.1.11
+ newline
+ local last_search_entry=192.168.1.11
}
+ local count=1

++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
version 16.9
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ (( i = 0 ))
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ [[ true == true ]]
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ ((  count == 0  ))
++ dirname -- ./scripts/network-extract.shell
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]'
+ echo
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ] ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]'
+ (( i < count ))
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]'
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
+ (( i = 0 ))
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ ((  count == 0  ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -z cisco ]]
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ true == true ]]
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ base64
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++++ basename ./scripts/devops-resources.shell
+ local awk_bin=/usr/bin/awk
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+++ base64
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++++ basename ./scripts/devops-resources.shell
+ print '{
  "vendor": "cisco",
+++ tr -dc a-zA-Z0-9
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+++ tr -dc a-zA-Z0-9
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local awk_bin=/usr/bin/awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+++ echo -n devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ config =~ ^(logger|l)$ ]]
+++ echo -n devops-resources.shell
+ [[ config =~ ^(platform|p)$ ]]
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local SCRIPT_DIR=./scripts
++ printf '%*s' 12 ''
+ local script_filename=cisco-configs.awk
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config =~ ^(search|s)$ ]]
++ export targets_location=targets
+ local SCRIPT_DIR=./scripts
++ targets_location=targets
+ [[ config == \h\e\l\p ]]
++ export targets_logfile=.cache/targets.jobs
+ local script_filename=cisco-configs.awk
+ [[ config == \d\e\b\u\g ]]
++ targets_logfile=.cache/targets.jobs
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
  "model": "",
+ local 'extracted_configuration={
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config == \v\e\r\b\o\s\e ]]
  "version": "12.4",
  "vendor": "cisco",
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'indent=            '
+ [[ true == true ]]
+ for xitem in "${@}"
  "domain": "",
  "hostname": "access-sw1-west"
  "model": "",
}
  "version": "",

  "domain": "",
+ IFS==
version 12.4
+ read -r key value
+ newline
  "hostname": ""
+ local count=1
}
hostname access-sw1-west
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i = 0 ))

++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i < count ))
interface Vlan1

 ip address 172.31.255.254 255.255.255.0'
+ source ./scripts/devops-helpers.shell
+ echo
interface Vlan100
+ result=0
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'prompt_message=Enter configuration file to be parsed: '
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
++ IFS=,
+ read -r key value
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ 7 -eq 0 ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -n {
+ (( i++ ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bx4ddtdobg/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
++ echo 192.168.1.10
++ [[ 5 -lt 4 ]]
  "vendor": "cisco",
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
  "model": "",
 ip address 192.168.0.100 255.255.255.0
  "model": "ASA",
  "version": "",
  "version": "9.12(4)",
 description Guest VLAN Gateway
  "domain": "",
+ script_filename=network-extract.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ script_filename=network-extract
  "hostname": ""
  "domain": "global.dmz.example.net",
}
++ [[ -n '' ]]

+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
interface Vlan1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": "dmz-fw2-backup"
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object-group network MGMT-ACCESS
}
 description Management objects
++ __DEVOPS_HELPERS_SOURCED=1

 network-object host 192.168.0.1
+ output_dir=reports/10.0.0.1/cisco
ASA Version 9.12(4)
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ [[ 5 -lt 4 ]]
 network-object host 192.168.0.100
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ ! -d reports/10.0.0.1/cisco ]]
++ alias parse-listings--helper=parse_listings__helper
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ IFS=,
++ echo 10.0.2.3
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
 network-object host 10.10.10.10'
++ alias parse-listings--helper=parse_listings__helper
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ declare -a execute__netwowrk_extract
+ result=0
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "vendor": "cisco",
++ alias network-configs--helper=network_configs__helper
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "model": "",
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'

version 12.4
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
hostname access-sw1-west
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
++ alias network-configs--helper=network_configs__helper
+ local count=1
++ printf '%*s' 12 ''
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
++ which awk
+ (( i++ ))
++ alias network-extract--helper=network_extract__helper
++ which awk

+ (( i < count ))
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
+ alias serialize-object=serialize_objects
+ local 'indent=            '
+ [[ true == true ]]
+ alias parse-cisco=main
 network-object host 192.0.2.50 ]]
+ alias serialize-object=serialize_objects
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ newline
+ export network_extract__console=console/network-extract.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ] ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local count=1
+ network_extract__console=console/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ alias parse-cisco=main
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ alias parse-cisco=main
  "version": "",
+ [[ -z x ]]
  "domain": "",
  "hostname": ""
}

+ export logs_location=logs
interface Vlan1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ logs_location=logs
 ip address 172.31.255.254 255.255.255.0'
++ which awk
+ mkdir -p logs
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
interface Vlan1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 ip address 172.31.255.254 255.255.255.0'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
  "hostname": "access-sw1-west"
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
}

version 12.4
hostname access-sw1-west

++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z x ]]
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ newline 2
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "domain": "global.dmz.example.net",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+++ base64
+ [[ -n {
  "hostname": "dmz-fw2-backup"
  "vendor": "cisco",
}
  "model": "",

  "version": "12.4",
ASA Version 9.12(4)
  "domain": "",
hostname dmz-fw2-backup
  "hostname": "access-sw1-west"
domain-name global.dmz.example.net
}


object-group network Watchtower-DMZ
version 12.4
 description Global secure relay
hostname access-sw1-west
 network-object host 192.0.2.50'

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 10.10.10.10 ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
+ echo -en '{
+ sed '1{/^[[:space:]]*$/d;}'
 description Global secure relay
  "vendor": "cisco",
+ export logs_location=logs
+ local count=2
  "model": "",
 network-object host 192.0.2.50 ]]
+ logs_location=logs
  "version": "12.4",
+ local count=1
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
  "domain": "",
  "hostname": "access-sw1-west"
}

+ echo -en '{
  "vendor": "cisco",
version 12.4
  "model": "ASA",
hostname access-sw1-west
  "version": "9.12(4)",

interface Vlan100
  "domain": "global.dmz.example.net",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "dmz-fw2-backup"
++++ basename ./scripts/devops-resources.shell
}

 ip address 192.168.0.100 255.255.255.0
ASA Version 9.12(4)
 description Guest VLAN Gateway
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ (( i = 0 ))
+ mkdir -p logs
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo
+ newline
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ echo
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ (( i++ ))
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console --export --verbose
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
++ IFS=,
++ echo 172.16.1.6
++ IFS=,
++ echo 10.0.0.1
+++ echo -n devops-resources.shell
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ script_filename=network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ script_filename=network-extract
+ declare -a execute__netwowrk_extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline 2
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
++ IFS=,
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ echo 172.16.0.5
+ local count=2
+ [[ extract =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i++ ))
+ IFS==
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ cfg == \c\f\g ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ (( i < count ))
+ read -r key value
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ declare -a execute__netwowrk_extract
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
++ echo -e --platform=cisco
+ local 'indent=            '
++ [[ -n '' ]]
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ [[ true == true ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ local 'extracted_configuration={
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
  "vendor": "cisco",
  "model": "",
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ newline
+ local count=1
+ newline 2
}
++ [[ 5 -lt 4 ]]
+ local count=1

+ (( i = 0 ))
version 12.2
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ local count=2
+ network_extract__console=console/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
+ touch console/network-extract.console
++ which awk
hostname campus-sw-access01
++ sed -e '1s|^\(-\)\{1,\}||'

object-group network Floor-Networks
++ alias parse-listings--helper=parse_listings__helper
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ echo
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ (( i++ ))
+ echo
+ newline 2
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.31.255.254/misc/switch1.conf
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i++ ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ alias network-configs--helper=network_configs__helper
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ true == true ]]
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i < count ))
+ echo
+ (( i++ ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ touch console/network-extract.console
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ local count=1
++ alias network-extract--helper=network_extract__helper
+ output_dir=reports/192.168.1.11/cisco
+ (( i = 0 ))
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ output_dir=reports/172.18.1.20/misc
+ newline
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ ! -d reports/172.18.1.20/misc ]]
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ echo
+ local count=1
+ (( i++ ))
+ alias serialize-object=serialize_objects
+ (( i < count ))
+ (( i++ ))
+ (( i = 0 ))
++ which awk
+ ((  count == 0  ))
+ (( i < count ))
+ (( i < count ))
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
++ which awk
+ output_dir=reports/192.168.2.12/cisco
+ [[ ! -d reports/192.168.2.12/cisco ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --platform=cisco
+ print '{
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

+ [[ false == true ]]
object-group network Floor-Networks
 description End-user and service devices
+ [[ true == true ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ 7 -eq 0 ]]
+ script_filename=network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0x0qzttrvm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ alias parse-cisco=main
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console --export --verbose
+ script_filename=network-extract
+ [[ -n {
  "vendor": "cisco",
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ export network_extract__console=console/network-extract.console
  "model": "",
  "version": "12.2",
  "domain": "",
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
  "hostname": "campus-sw-access01"
+ [[ -z x ]]
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
}
+ export logs_location=logs
+ network_extract__console=console/network-extract.console
+ oIFS=' 	
'

+ logs_location=logs
+ serialize_objects
version 12.2
+ touch console/network-extract.console
+ for xitem in "${@}"
+ local count=1
hostname campus-sw-access01

+ IFS==
object-group network Floor-Networks
+ read -r key value
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ mkdir -p logs
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local awk_bin=/usr/bin/awk
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ command -v -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ which awk
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ script_filename=network-extract
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ export network_extract__console=console/network-extract.console
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ network_extract__console=console/network-extract.console
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ touch console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4a1ts3viv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list
+ [[ config =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ echo
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
+ IFS==
++ echo -e --export
+ [[ platform == \h\e\l\p ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ output_dir=reports/10.10.10.10/cisco
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
+ output_dir=reports/172.16.0.5/cisco
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ [[ platform == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ printf '%*s' 12 ''
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v2ctwgvrv2/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'indent=            '
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.dx8tf4wws8/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ 7 -eq 0 ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4a1ts3viv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ oIFS=' 	
'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
++ echo -e --export
+ oIFS=' 	
+ IFS==
+ read -r key value
'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local export_objects=true
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ newline
+ local count=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ newline
+ (( i++ ))
+ (( i < count ))
+ [[ conf == \c\o\n\f ]]
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/10.0.0.1/fortinet
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ (( i < count ))
+ echo
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+ [[ export =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ dirname reports/10.0.1.2/misc/switch1.conf
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ which awk
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ [[ config =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ local count=1
+ (( i = 0 ))
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ echo
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ output_dir=reports/172.18.1.20/cisco
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ export == \v\e\r\b\o\s\e ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ read -r key value
+ IFS==
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
+ [[ extract =~ ^(console|o)$ ]]
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
++ which awk
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ output_dir=reports/10.0.1.2/misc
+ [[ ! -d reports/10.0.1.2/misc ]]
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ echo -e --platform=cisco
++ echo -e --verbose
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=fortinet-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 172.16.0.5
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ mktemp -d
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ search =~ ^(config|c)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list
+ [[ search =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ output_dir=reports/10.0.2.3/misc
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ ! -d reports/10.0.2.3/misc ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ config =~ ^(config|c)$ ]]
version 16.9
hostname branch-isr-02

+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
interface GigabitEthernet0/0/2
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
 ip address 10.0.2.3 255.255.255.0
+ [[ verbose =~ ^(search|s)$ ]]
 description Dev VLAN
+ [[ config =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ config =~ ^(search|s)$ ]]
+ result=0
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+ [[ config == \h\e\l\p ]]
+ [[ -n {
+ [[ search == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
  "vendor": "cisco",
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
  "model": "",
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
  "version": "16.9",
++ which awk
++ IFS=,
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo 10.0.0.1
++ which awk
++ echo -e --platform=cisco
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ verbose == \d\r\y\-\r\u\n ]]
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

+ local 'extracted_configuration={
  "vendor": "fortinet",
object network Panther-Gateway
  "model": "FortiGate-60F",
++ IFS=,
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ echo 10.10.10.10
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
 host 10.0.2.3
 description Secure outbound concentrator ]]
'
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
+ local SCRIPT_PATH=./scripts/network-extract.shell
  set subnet 10.0.1.2 255.255.255.255
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ declare -a execute__netwowrk_extract
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
  set comment "QA node in Peter'\''s Lab"
+ [[ -z '' ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ debug=false
 next
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local verbose=true
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS=' 	
+ [[ extract == \h\e\l\p ]]
'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(logger|l)$ ]]
+ dry_run=false
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ logger =~ ^(search|s)$ ]]
end'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ read -r key value
+ for xitem in "${@}"
+ debug=false
+ result=0
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ export console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ [[ export == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ console_output=false
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ -z true ]]
+ export console_output=false
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console ]]
+ read -r key value
+ console_output=false
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ -n {
  "vendor": "fortinet",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ [[ export == \d\r\y\-\r\u\n ]]

+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ IFS==
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export == \v\e\r\b\o\s\e ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ read -r key value
  "domain": "",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]]
  "hostname": "branch-isr-02"
}
+ local awk_bin=/usr/bin/awk

#hostname="fg-branch-vpn-01"
+ search_terms=()
version 16.9
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ declare -a search_terms
hostname branch-isr-02
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D6HhORJLUg

+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
interface GigabitEthernet0/0/2
#model="FortiGate-60F"
+ for xitem in "${@}"
 ip address 10.0.2.3 255.255.255.0
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D6HhORJLUg
+ search_terms=()
+ [[ extract =~ ^(logger|l)$ ]]
 description Dev VLAN
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT

+ local SCRIPT_DIR=./scripts
object network Panther-Gateway
+ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ nl='\n'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]]
 host 10.0.2.3
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ source ./scripts/devops-resources.shell
+ IFS==
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list != *,* ]]
 description Secure outbound concentrator'
+ declare -a search_terms
+ mapfile -t search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]]
++ which awk
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ -n {
+ [[ extract =~ ^(search|s)$ ]]
  "vendor": "cisco",
+ local script_filename=cisco-configs.awk
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
  "model": "",
+ read -r key value
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ dirname -- ./scripts/network-extract.shell
+ [[ extract == \h\e\l\p ]]
  "version": "16.9",

  "domain": "",
  "hostname": "branch-isr-02"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list != *,* ]]
}
++ [[ 5 -lt 4 ]]

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
++ alias detect-vendor=detect_vendor
+ echo -en '{
  "vendor": "cisco",
++ alias exit-error=exit_error
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ [[ config =~ ^(config|c)$ ]]

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ local script_filepath=./scripts/extract/cisco-configs.awk
 description Dev VLAN

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract == \d\e\b\u\g ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias list-file=list_file
object network Panther-Gateway
+ [[ extract == \d\r\y\-\r\u\n ]]
 host 10.0.2.3
config firewall address
 description Secure outbound concentrator'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ which awk
++ alias log-warn=log_warn
++ alias print-message=message
+ sed '1{/^[[:space:]]*$/d;}'
+ mapfile -t search_terms
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
++ alias print-file=print_file
+ [[ config =~ ^(export|r)$ ]]
++ IFS=,
 edit "Spidey-Sandbox"
+ [[ config =~ ^(extract|x)$ ]]
++ alias relative-configpath=relative_configpath
  set subnet 10.0.1.2 255.255.255.255
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ echo 10.0.0.1
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
++ alias system-metrics=system_metrics
+ read -r key value
  set comment "QA node in Peter's Lab"
 next
end ]]
+ [[ extract =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
++ alias validate-address=validate_address
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ extract =~ ^(console|o)$ ]]
++ alias warning-message=warning
++ sed -e '1s|^\(-\)\{1,\}||'
++ export LC_ALL=C
++ LC_ALL=C
+ declare -a execute__netwowrk_extract
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
+ [[ extract =~ ^(export|r)$ ]]
++ default_addresses=ips.list
++ export default_devices=devices.list
+ [[ config =~ ^(search|s)$ ]]
++ default_devices=devices.list
+ [[ platform =~ ^(console|o)$ ]]
++ export default_matrix=matrix.json
+ [[ config == \h\e\l\p ]]
++ default_matrix=matrix.json
+ [[ config == \d\e\b\u\g ]]
++ export cache_location=.cache
+ local 'indent=            '
+ [[ config == \d\r\y\-\r\u\n ]]
++ cache_location=.cache
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export logs_location=logs
+ for xitem in "${@}"
++ logs_location=logs
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ mkdir -p logs
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ [[ extract =~ ^(search|s)$ ]]
+ local count=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local SCRIPT_DIR=./scripts
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ IFS==
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ read -r key value
++ echo -e --export
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ echo -e --platform=cisco
++ tr -d '\r'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
+ newline
+ local count=1
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ echo
+ (( i++ ))
+ local target_platform=cisco
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
++ tr -d '\r'
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ grep -v '^\s*$'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ echo -e --verbose

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ config =~ ^(config|c)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_DIR=./scripts
+ [[ config =~ ^(console|o)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(export|r)$ ]]
config firewall address
 edit "Spidey-Sandbox"
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(extract|x)$ ]]
  set subnet 10.0.1.2 255.255.255.255
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
  set comment "QA node in Peter'\''s Lab"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config =~ ^(logger|l)$ ]]
 next
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
end'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local script_filename=cisco-configs.awk
+ for xitem in "${@}"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local awk_bin=/usr/bin/awk
+ read -r key value
++ grep -v '^#'
+ newline 2
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local count=2
+ [[ extract =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ extract =~ ^(export|r)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local awk_bin=/usr/bin/awk
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ IFS==
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ read -r key value
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
++ which awk
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract =~ ^(extract|x)$ ]]
+ read -r key value
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ true == true ]]
++ echo -e --platform=fortinet
+ [[ export =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ echo 172.18.1.20
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ IFS==
+ local first_search_entry=192.168.0.1
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ local last_search_entry=192.168.0.1
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ read -r key value
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ local 'indent=            '
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ true == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local first_search_entry=192.0.2.50
+ [[ verbose =~ ^(console|o)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local last_search_entry=192.0.2.50
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ local 'indent=            '
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ verbose =~ ^(platform|p)$ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ] ]]
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ local count=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ local count=1
+ local verbose=true
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]'
+ echo
+ [[ config == \h\e\l\p ]]
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]'
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-configs--ips.list ]'
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
++ export console_location=console
+ local count=1
++ console_location=console
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ (( i = 0 ))
++ mkdir -p console
+ (( i < count ))
+ newline
+ local 'extracted_configuration={
+ echo
+ ((  count == 0  ))
+ [[ config == \d\e\b\u\g ]]
+ local count=1
+ (( i++ ))
+ [[ config == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ ((  count == 0  ))
+ IFS=' 	
+ local target_platform=cisco
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
  "model": "ASA",
+ newline 2
  "version": "9.14(3)",
+ [[ platform == \h\e\l\p ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
}
+ (( i = 0 ))
'

+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ (( i < count ))
+ [[ -z '' ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ for xitem in "${@}"
ASA Version 9.14(3)
hostname perimeter-fw1
+ IFS==
domain-name edge.dc.example.com

+ local count=1
object-group network Panther-Edge
+ read -r key value
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
}

+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
ASA Version 9.14(3)
hostname perimeter-fw1
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 172.16.0.5
+ debug=false
+ [[ platform == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ echo -e --platform=fortinet
+ echo

+ (( i = 0 ))
+ newline
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ local count=2
+ dry_run=false
object network Magneto-Core
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
 host 172.16.0.5
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ platform == \v\e\r\b\o\s\e ]]
 description WAN firewall entry point ]]
+ [[ -z true ]]
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ (( i++ ))
+ local count=1
+ (( i = 0 ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
+ [[ -z cisco ]]
+ echo
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ -z '' ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ export console_output=false
++ which awk
+ for xitem in "${@}"
+ console_output=false
+ (( i < count ))
+ (( i < count ))
+ [[ -z true ]]
+ IFS==
+ echo
+ echo
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
++ echo -e --verbose
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ newline
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ read -r key value
+ [[ -z '' ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ for xitem in "${@}"
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ [[ false == true ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo
+ IFS==
+ [[ -z cisco ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]]
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
+ read -r key value
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
++ IFS=,
+ (( i++ ))
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ print '{
  "vendor": "cisco",
++ echo -e --export
  "model": "ASA",
++ echo 10.0.2.3
+ [[ true == true ]]
  "version": "9.14(3)",
+ (( i < count ))
+ search_terms=()
  "domain": "edge.dc.example.com",
++ IFS=,
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
++ echo 10.0.1.2

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list != *,* ]]
+ [[ -n {
  "vendor": "cisco",
+ mapfile -t search_terms
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ set -euo pipefail
}
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]

+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
ASA Version 9.14(3)
hostname perimeter-fw1
+ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ LC_ALL=C
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'

+ [[ extract =~ ^(logger|l)$ ]]
ASA Version 9.14(3)
+ newline
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1

+ [[ extract =~ ^(search|s)$ ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ extract == \h\e\l\p ]]
 network-object host 172.16.0.5
+ [[ extract == \d\e\b\u\g ]]

object network Magneto-Core
+ [[ extract == \d\r\y\-\r\u\n ]]
 host 172.16.0.5
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
 description WAN firewall entry point'
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ IFS==
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ declare -a execute__netwowrk_extract
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ extract =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ platform =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ echo
+ local target_platform=fortinet
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ mktemp -d
+ [[ logger =~ ^(search|s)$ ]]
++ which awk
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ (( i++ ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ newline 2
++ which awk
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local count=2

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ (( i = 0 ))
 next
+ (( i < count ))
end'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console
+ echo
+ result=0
+ [[ -n {
  "vendor": "fortinet",
+ (( i++ ))
  "model": "FortiGate-60F",
+ [[ platform =~ ^(config|c)$ ]]
  "version": "v7.2.5.F",
+ (( i < count ))
+ echo
  "domain": "",
+ (( i++ ))
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ true == true ]]
#model="FortiGate-60F"
++ printf '%*s' 12 ''
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
+ [[ verbose =~ ^(logger|l)$ ]]
  set subnet 10.0.0.1 255.255.255.255
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
  set comment "Main node at Stark Tower"
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
 next
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
end ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ [[ export =~ ^(console|o)$ ]]
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(export|r)$ ]]
++ export targets_location=targets
+ local export_objects=true
++ targets_location=targets
+ [[ export =~ ^(extract|x)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ echo -e --platform=cisco
+ [[ -n {
  "vendor": "fortinet",
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "model": "FortiGate-60F",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "version": "v7.2.5.F",
  "domain": "",
+ local verbose=true
  "hostname": "fg-branch-vpn-01"
+ local 'indent=            '
++ grep -v '^#'
+ IFS=' 	
}
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console

+ local awk_bin=/usr/bin/awk
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
+ newline
  set subnet 10.0.0.1 255.255.255.255
+ newline
  set comment "Main node at Stark Tower"
 next
end ]]
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ echo -en '{
  "vendor": "fortinet",
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ [[ -z '' ]]
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ debug=false
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
++ echo -e --platform=cisco
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ dry_run=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D8KmsybVlb
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console ]]
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ -z '' ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ script_helper=false
+ echo
+ local 'extracted_configuration={
  "vendor": "cisco",
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
  "model": "ASA",
+ local count=1
+ local awk_bin=/usr/bin/awk
  "version": "9.14(3)",
+ [[ extract =~ ^(platform|p)$ ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ extract =~ ^(search|s)$ ]]

+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
ASA Version 9.14(3)
+ [[ extract == \h\e\l\p ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D8KmsybVlb
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ (( i++ ))
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ echo
+ [[ false == true ]]
+ [[ cfg == \c\f\g ]]
+ (( i = 0 ))
+ set -euo pipefail
+ (( i++ ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg

+ export LC_ALL=C
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export 'nl=\n'
+ [[ logger =~ ^(extract|x)$ ]]
+ LC_ALL=C
+ nl='\n'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ echo -e --verbose
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]]
+ [[ false == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ echo
interface GigabitEthernet0/1
 nameif inside
+ [[ logger =~ ^(search|s)$ ]]
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ (( i++ ))
 security-level 100
+ (( i < count ))
+ source ./scripts/devops-resources.shell
 ip address 10.0.0.1 255.255.255.0
+++ base64
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
 description Internal Network Interface

++ echo -e --export
object network Stark-Tower
++ [[ -n '' ]]
 host 10.0.0.1
+ [[ logger == \h\e\l\p ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
 description Core services gateway'
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ 5 -lt 4 ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console
+ [[ logger == \d\e\b\u\g ]]
++ alias detect-vendor=detect_vendor
+ [[ logger == \d\r\y\-\r\u\n ]]
+ result=0
++ alias exit-error=exit_error
+ IFS==
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++++ basename ./scripts/devops-resources.shell
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n {
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
  "vendor": "cisco",
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ alias list-file=list_file
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ for xitem in "${@}"
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ IFS==
+ read -r key value
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ (( i++ ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
  "model": "ASA",
+ serialize_objects
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "perimeter-fw1"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
}
+ serialize_objects
++ mktemp -d
+ local first_search_entry=10.0.2.3
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ local last_search_entry=10.0.2.3
++ alias log-error=log_error
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ true == true ]]
++ alias log-info=log_info
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ serialize_objects
++ alias log-warn=log_warn
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias print-message=message

ASA Version 9.14(3)
+ [[ logger == \h\e\l\p ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
hostname perimeter-fw1
domain-name edge.dc.example.com
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'

interface GigabitEthernet0/1
++ alias print-newline=newline
+ local 'extracted_configuration={
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
 nameif inside
  "hostname": "access-sw1-west"
+ local 'indent=            '
}

++ alias pause=pause
version 12.4
hostname access-sw1-west
++ printf '%*s' 12 ''
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
+ [[ true == true ]]

++ alias print-line=print
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ] ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-configs--ips.list ]'
 security-level 100
+ IFS==
 ip address 10.0.0.1 255.255.255.0
+ read -r key value
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ local count=1
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ ((  count == 0  ))
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
object-group network MGMT-ACCESS
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
 description Management objects
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ newline
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ local count=1
 network-object host 10.10.10.10
++ alias print-file=print_file
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline 2
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
++ alias system-metrics=system_metrics
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=2
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ echo
+ local 'indent=            '
++ tr -d '\r'
+ [[ platform =~ ^(console|o)$ ]]

++ alias validate-address=validate_address
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+++ echo -n devops-resources.shell
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local count=1
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ (( i < count ))
+ for xitem in "${@}"
+ newline
+ echo
+ IFS==
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
object-group network Mutant-WiFi
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
 description Controlled guest devices
+ [[ platform =~ ^(export|r)$ ]]
 network-object host 10.10.10.10'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ echo
+ [[ platform =~ ^(search|s)$ ]]
++ alias warning-message=warning
+ (( i++ ))
+ newline
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo -e --platform=fortinet
+ local target_platform=cisco
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ echo
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --export
+ [[ -n {
  "vendor": "cisco",
++ grep -v '^#'
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -en '{
+ [[ -n {
+ [[ export =~ ^(console|o)$ ]]
  "vendor": "cisco",
  "vendor": "cisco",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "model": "ASA",
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ LC_ALL=C
  "version": "9.14(3)",
+ local export_objects=true
++ alias network-extract--helper=network_extract__helper
  "domain": "edge.dc.example.com",
+ [[ export =~ ^(extract|x)$ ]]
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ [[ export =~ ^(logger|l)$ ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
+ [[ export =~ ^(platform|p)$ ]]
 security-level 100
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ [[ export == \d\e\b\u\g ]]

+ [[ export == \d\r\y\-\r\u\n ]]
object network Stark-Tower
 host 10.0.0.1
+ [[ export == \v\e\r\b\o\s\e ]]
 description Core services gateway'
+ for xitem in "${@}"
+ alias serialize-object=serialize_objects
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vVRFRTtY9c
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vVRFRTtY9c
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ export 'nl=\n'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ nl='\n'
+ [[ logger =~ ^(extract|x)$ ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ local parent_dir=reports/172.16.0.5/cisco
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ source ./scripts/devops-resources.shell
+ output_dir=reports/192.168.0.1/cisco
+ echo -e '                .cache/resources/misc/fw1.cfg'
  "model": "",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ newline
  "version": "12.4",
  "domain": "",
+ local count=1
  "hostname": "access-sw1-west"
+ output_dir=reports/192.0.2.50/cisco
+ (( i = 0 ))
++ [[ -n '' ]]
+ [[ ! -d reports/192.0.2.50/cisco ]]
}
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1

+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
version 12.4
hostname access-sw1-west
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

object-group network MGMT-ACCESS
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
++ [[ 5 -lt 4 ]]
 description Management objects
+ [[ -z cisco ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ true == true ]]
 network-object host 10.10.10.10
+ alias parse-cisco=main
+ [[ platform == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ for xitem in "${@}"
++ export 'nl=\n'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))

+ [[ -z x ]]
++ nl='\n'
object-group network Mutant-WiFi
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ newline
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ export default_addresses=ips.list
+ export logs_location=logs
+ echo
++ alias list-file=list_file
 description Controlled guest devices
+ IFS==
++ default_addresses=ips.list
+ [[ platform == \d\r\y\-\r\u\n ]]
+ logs_location=logs
+ local count=1
++ alias log-error=log_error
+ (( i = 0 ))
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
 network-object host 10.10.10.10 ]]
+ [[ logger == \h\e\l\p ]]
++ alias log-info=log_info
+ mkdir -p logs
+ local parent_dir=reports/10.0.1.2/fortinet
+ [[ verbose =~ ^(logger|l)$ ]]
+ local parent_dir=reports/10.0.2.3/cisco
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
++ alias log-warn=log_warn
++ export default_devices=devices.list
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias print-message=message
+ for xitem in "${@}"
++ default_devices=devices.list
+ (( i < count ))
++ alias print-newline=newline
++ export default_matrix=matrix.json
+ IFS==
+ echo
++ default_matrix=matrix.json
+ [[ verbose =~ ^(platform|p)$ ]]
++ export cache_location=.cache
++ alias pause=pause
+ [[ logger == \d\e\b\u\g ]]
++ cache_location=.cache
+ [[ verbose =~ ^(search|s)$ ]]
++ export logs_location=logs
++ alias print-line=print
+ [[ logger == \d\r\y\-\r\u\n ]]
++ logs_location=logs
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ verbose == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias print-file=print_file
+ for xitem in "${@}"
++ mkdir -p logs
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ (( i++ ))
+ local 'message=                .cache/resources/misc/switch1.conf'
++ alias system-metrics=system_metrics
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ echo -e '                .cache/resources/misc/switch1.conf'
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ IFS=' 	
'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ newline
+ [[ -z '' ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ debug=false
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -z '' ]]
+ (( i = 0 ))
+ dry_run=false
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ (( i < count ))
+ [[ -z true ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ alias validate-address=validate_address
+ echo
+ [[ -z '' ]]
++ alias warning-message=warning
+ export console_output=false
+ (( i++ ))
++ export LC_ALL=C
+ console_output=false
++ LC_ALL=C
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
++ export 'nl=\n'
+ [[ -z true ]]
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console ]]
++ export cache_location=.cache
+ [[ -z '' ]]
++ cache_location=.cache
++ export logs_location=logs
+ script_helper=false
++ logs_location=logs
++ command -v -- ./scripts/network-extract.shell
++ mkdir -p logs
+ [[ false == true ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ newline
++ echo -e --export
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]]
+ local count=1
+ search_terms=()
+ (( i = 0 ))
+ declare -a search_terms
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
+ local first_search_entry=192.168.0.100
+ [[ false == true ]]
  "vendor": "cisco",
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local last_search_entry=192.168.0.100
++ echo -e --verbose
  "model": "",
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ true == true ]]
  "version": "12.4",
+ [[ true == true ]]
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]'
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]

version 12.4
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-configs--ips.list ]'
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
 network-object host 192.168.0.1
+ local count=1
 network-object host 192.168.0.100
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
 network-object host 10.10.10.10

+ ((  count == 0  ))
object-group network Mutant-WiFi
+ serialize_objects
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
++ basename reports/10.0.2.3/cisco/branch-isr-02
+ echo -en '{
+ [[ platform =~ ^(console|o)$ ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
  "vendor": "cisco",
+ [[ platform =~ ^(export|r)$ ]]
  "model": "",
  "version": "12.4",
  "domain": "",
+ [[ platform =~ ^(extract|x)$ ]]
  "hostname": "access-sw1-west"
}

+ [[ platform =~ ^(logger|l)$ ]]
version 12.4
hostname access-sw1-west
++ sed -e '1s|^\(-\)\{1,\}||'

+ [[ platform =~ ^(platform|p)$ ]]
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ local target_platform=fortinet
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ echo
++ echo -e --export
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ (( i++ ))
+ network_extract__console=console/network-extract.console
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ touch console/network-extract.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ for xitem in "${@}"
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z cisco ]]
+ IFS==
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ local parent_dir=reports/10.0.0.1/fortinet
+ [[ export =~ ^(config|c)$ ]]
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ tr -d '\r'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local export_objects=true
  "model": "",
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
++ grep -v '^\s*$'
++ cut -d/ -f2
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(search|s)$ ]]
+ read -r key value
++ export jobs_location=jobs
++ jobs_location=jobs
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ mkdir -p jobs
+ local search_pattern
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local search_pattern
+ newline 2
+ [[ export =~ ^(console|o)$ ]]
+ local 'extracted_configuration={
+ [[ export =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ local export_objects=true
  "hostname": ""
}
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
+ [[ export =~ ^(extract|x)$ ]]

+ newline 2
+ [[ 7 -eq 0 ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.up7w7xsupg/network-configs--ips.list =~ ^-*(h|help)$ ]]
}
+ IFS==
+ read -r key value
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console --export --verbose
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ [[ export =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ (( i++ ))
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ export == \h\e\l\p ]]
+ local 'extracted_configuration={
+ [[ logger =~ ^(logger|l)$ ]]
+ oIFS=' 	

+ [[ export == \d\e\b\u\g ]]
version 16.9
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
++ grep -v '^#'
  "vendor": "cisco",
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ final_output=reports/10.0.2.3/misc/fw3.cfg
'
+ local count=2
hostname branch-isr-02
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
  "model": "",
+ [[ logger =~ ^(platform|p)$ ]]
+ local export_objects=true
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
object-group network Metropolis-Internal
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ export == \v\e\r\b\o\s\e ]]
+ local SCRIPT_DIR=./scripts
  "version": "",
+ IFS==
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ read -r key value

+ echo
+ for xitem in "${@}"
object-group network Lantern-DMZ
+ local script_filename=cisco-configs.awk
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local count=2
 description Core internal LAN for application clusters
 description Protected but public-facing zone
  "domain": "",
+ IFS==
 network-object host 172.18.1.20
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
++ export console_location=console
+ (( i++ ))
 network-object host 192.168.1.11'
++ console_location=console
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ mkdir -p console
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
  "hostname": ""
+ local script_filename=cisco-configs.awk
+ [[ export =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
 network-object host 10.0.2.3
}
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo
+ (( i = 0 ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk

+ [[ export =~ ^(search|s)$ ]]
interface Vlan10
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
+ [[ export =~ ^(search|s)$ ]]
 ip address 10.0.1.2 255.255.255.0'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ result=0
+ result=0
+ (( i < count ))
 network-object 192.168.2.0 255.255.255.0
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n {
+ for xitem in "${@}"
+ [[ -n {
 network-object host 192.168.2.12
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
  "vendor": "cisco",

+ [[ export == \h\e\l\p ]]
  "model": "",
  "vendor": "cisco",
+ echo
+ IFS==
  "version": "",
  "model": "",
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console
  "version": "16.9",
+ (( i < count ))
object network Kent-Server
+ [[ true == true ]]
+ [[ verbose == \d\e\b\u\g ]]
  "domain": "",
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "hostname": "branch-isr-02"
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo
}
+ [[ logger =~ ^(search|s)$ ]]
 host 10.0.2.3
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "domain": "",
+ local verbose=true
+ [[ export == \d\r\y\-\r\u\n ]]
  "hostname": ""
+ IFS=' 	
+ (( i++ ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
 description Internal mail & identity services'
'

}
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ for xitem in "${@}"
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ IFS==
+ IFS==
+ read -r key value

+ [[ true == true ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ read -r key value
+ [[ -z '' ]]
interface Vlan10
+ [[ logger == \d\e\b\u\g ]]
+ result=0
version 16.9
+ [[ 7 -eq 0 ]]
hostname branch-isr-02

+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ecmq1j5rep/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ debug=false
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
 ip address 10.0.1.2 255.255.255.0 ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ -n {
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ logger == \d\r\y\-\r\u\n ]]
object-group network Lantern-DMZ
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]]
  "vendor": "cisco",
+ search_terms=()
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console
 description Protected but public-facing zone
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ declare -a search_terms
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]]
  "model": "",
 network-object host 172.18.1.20
+ for xitem in "${@}"
  "version": "",
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list != *,* ]]
 network-object host 192.168.1.11 ]]
  "domain": "",
+ mapfile -t search_terms
+ IFS==
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ read -r key value
  "hostname": ""
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
}
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
+ search_pattern=172.16.0.5
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ which awk
+ local search_pattern
+ mkdir -p reports/172.16.0.5/cisco/.objects
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list
++ cut -d/ -f2

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
++ export console_location=console
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
++ console_location=console
+ [[ true == true ]]
++ mkdir -p console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ] ]]
+ [[ 7 -eq 0 ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ [[ search =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.dx8tf4wws8/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ [[ search =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ echo -e --export
  "hostname": ""
+ print '{
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
}
  "model": "",

  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
interface Vlan10

 ip address 10.0.1.2 255.255.255.0 ]]
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ echo -en '{
 network-object host 192.168.1.11'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
++ export actions_logfile=console/run.console

++ actions_logfile=console/run.console
++ touch console/run.console
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ local count=1
+ ((  count == 0  ))
++ tr -d '\r'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ echo -e --verbose
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ cut -d/ -f2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ grep -v '^#'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ search_pattern=10.0.2.3
+ search_pattern=10.0.1.2
+ mkdir -p reports/10.0.2.3/cisco/.objects
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ newline
+ case "${target_platform}" in
+ newline
++ export targets_location=targets
+ local count=1
++ targets_location=targets
+ (( i = 0 ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
++ export targets_logfile=.cache/targets.jobs
+ echo
+ [[ -z .cache/resources/misc/fw1.cfg ]]
++ targets_logfile=.cache/targets.jobs
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z cisco ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i < count ))
                  BEGIN {
+ local count=1
                    in_json_header = 0;
                    blk = "";
+ (( i = 0 ))
                  }
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ cfg == \c\f\g ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
                      next;
                    }
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ [[ export =~ ^(config|c)$ ]]
                  }
                  END {
+ [[ verbose =~ ^(config|c)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ export =~ ^(console|o)$ ]]
                  }
+ [[ verbose =~ ^(config|c)$ ]]
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ search_pattern=10.0.0.1
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ print '{
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(config|c)$ ]]
  "vendor": "cisco",
+ mkdir -p reports/10.0.0.1/fortinet/.objects
  "model": "",
  "version": "",
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(extract|x)$ ]]
  "domain": "",
  "hostname": ""
}

+ [[ verbose =~ ^(logger|l)$ ]]
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ [[ verbose == \h\e\l\p ]]
 network-object host 10.0.2.3
+ [[ verbose =~ ^(platform|p)$ ]]
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ grep -F 172.16.0.5
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
+ [[ export =~ ^(console|o)$ ]]
++ IFS=,
+ echo -en '{
+ [[ export =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ echo 192.168.0.1

+ local export_objects=true
++ IFS=,
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
object-group network Metropolis-Internal
+ [[ logger == \h\e\l\p ]]
 description Core internal LAN for application clusters
++ echo 192.0.2.50
 network-object host 10.0.2.3
+ [[ export =~ ^(logger|l)$ ]]
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ for xitem in "${@}"

+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ IFS==
object network Kent-Server
++ command -v -- ./scripts/network-extract.shell
 host 10.0.2.3
 description Internal mail & identity services'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ (( i++ ))
+ read -r key value
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local verbose=true
+ serialize_objects
+ IFS=' 	
'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ sed '/^[[:space:]]*$/d'
+ local first_search_entry=198.51.100.75
+ [[ verbose =~ ^(search|s)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ -z '' ]]
+ local last_search_entry=198.51.100.75
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
'
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ export == \h\e\l\p ]]
+ (( i = 0 ))
++ export actions_logfile=console/run.console
+ [[ -z '' ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export console_output=false
+ declare -a execute__netwowrk_extract
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ newline 2
+ console_output=false
+ (( i < count ))
++ actions_logfile=console/run.console
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ debug=false
+ read -r key value
+ [[ false == true ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ echo
++ touch console/run.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ [[ -z '' ]]
+ local count=2
+ dry_run=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ [[ -z true ]]
+ local verbose=true
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console ]]
+ ((  count == 0  ))
+ (( i++ ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo
+ (( i < count ))
+ [[ -z '' ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ export console_output=false
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ (( i++ ))
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ console_output=false
+ IFS=' 	
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ newline
'
+ [[ -z true ]]
+ for xitem in "${@}"
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console ]]
+ script_helper=false
+ (( i < count ))
+ [[ -z '' ]]
+ local count=1
+ [[ -z '' ]]
+ debug=false
+ serialize_objects
+ IFS==
+ read -r key value
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local verbose=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]]
+ IFS=' 	
+ search_terms=()
'
+ declare -a search_terms
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]]
+ script_helper=false
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+++ base64
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z '' ]]
+ search_terms=()
+ declare -a search_terms
+ dry_run=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++++ basename ./scripts/devops-resources.shell
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ (( i++ ))
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ script_helper=false
+ [[ false == true ]]
+ (( i = 0 ))
+ newline 2
+ [[ -z true ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+++ tr -dc a-zA-Z0-9
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ (( i < count ))
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ echo
+ search_terms=()
+ result=0
+ (( i++ ))
+ declare -a search_terms
+ [[ 0 -ne 0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]]
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ local count=2
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ echo
+ [[ config =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ echo -e --verbose
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
++ echo -e --verbose
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list != *,* ]]
                    BEGIN {
+ mapfile -t search_terms
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ (( i < count ))

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
+++ echo -n devops-resources.shell
                      if (blk != "") print blk;
                      blk = $0;
                      next;
+ case "${target_platform}" in
                    }
++ sed -e '1s|^\(-\)\{1,\}||'

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                      blk = "";
                    }
                      in_json_header = 0;

                    }

                    # Accumulate middle lines
                    # Skip blank lines
                    {
                    /^[[:space:]]*$/ { next }
                      blk = blk divisor " " $0;

                    }
                    # Skip JSON preamble

                    /^{$/            { in_json_header = 1; next }
                    END {
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                      # No need for final print — all blocks end with end
                    (in_json_header == 1) { next }
                    }
++ tr -d '\r'

++ which awk
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
                    # Skip platform metadata
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
                    END {
                      # No need for final print — all blocks end with end
+ echo
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
                    }
+ case "${target_file}" in
+ (( i++ ))
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ output_dir=reports/192.168.0.100/cisco
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ grep -F 10.0.0.1
+ newline 2
+ source ./scripts/devops-helpers.shell
+ local parent_dir=reports/10.10.10.10/cisco
+ local awk_bin=/usr/bin/awk
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
++ [[ 5 -lt 4 ]]
+ local SCRIPT_DIR=./scripts
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local script_filename=cisco-configs.awk
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ local count=1
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^\s*$'
++ tr -d '\r'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console --export --verbose
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console --export --verbose
++ grep -v '^#'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ oIFS=' 	
'
  "hostname": "access-sw1-west"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ platform =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ newline
+ local parent_dir=reports/172.16.1.6/cisco
}
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ script_filename=network-extract.shell
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline 2
+ script_filename=network-extract
+ local count=1
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]

+ newline
+ [[ search =~ ^(logger|l)$ ]]
version 12.4
+ [[ search =~ ^(platform|p)$ ]]
+ local count=1
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list
+ local script_filename=cisco-configs.awk
+ [[ search == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ (( i = 0 ))
+ IFS==
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ local count=2
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
hostname access-sw1-west
+ (( i < count ))
+ (( i < count ))

+ echo
+ echo
+ (( i++ ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
interface Vlan1
+ for xitem in "${@}"
 ip address 192.168.0.1 255.255.255.0
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
++ printf '%*s' 12 ''
 description Management Interface
+ [[ false == true ]]
+ (( i++ ))
+ IFS==
++ echo -e --config=.cache/resources/misc/switch3.conf
+ read -r key value
+ local 'indent=            '

+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ true == true ]]
object-group network MGMT-ACCESS
+ [[ true == true ]]
+ (( i < count ))
 description Management objects
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
 network-object host 10.10.10.10'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ newline
+ serialize_objects
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ newline
+ result=0
+ local 'indent=            '
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ serialize_objects
++ export targets_location=targets
+ local count=1
+ local count=1
+ (( i = 0 ))
+ local count=2
+ local 'extracted_configuration={
+ [[ -n {
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
++ printf '%*s' 12 ''
++ basename reports/172.16.1.6/cisco/branch-isr-02
+ [[ true == true ]]
+ [[ true == true ]]
  "vendor": "cisco",
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
  "model": "",
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
  "version": "12.4",
  "domain": "",
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
  "hostname": "access-sw1-west"
}

version 12.4
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
hostname access-sw1-west

interface Vlan1
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
 ip address 192.168.0.1 255.255.255.0
+ newline
 description Management Interface
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ (( i++ ))
+ message '                .cache/resources/misc/switch1.conf'
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ tr -d '\r'

object-group network MGMT-ACCESS
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
 description Management objects
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/172.31.255.254/misc/switch1.conf
+ [[ search =~ ^(console|o)$ ]]
++ grep -v '^\s*$'
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ IFS==
+ echo -e '                .cache/resources/misc/switch1.conf'
 network-object host 192.168.0.1
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ read -r key value
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ 7 -eq 0 ]]
+ local SCRIPT_DIR=./scripts
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i = 0 ))
+ local search_pattern
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9iunoddxcq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
 network-object host 192.168.0.100
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo
 network-object host 10.10.10.10 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ grep -v '^#'
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ config =~ ^(config|c)$ ]]
+ oIFS=' 	
'
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ message '                .cache/resources/misc/fw3.cfg'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local parent_dir=reports/192.0.2.50/cisco
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ local parent_dir=reports/172.31.255.254/misc
++ echo -e --config=.cache/resources/misc/switch3.conf
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ read -r key value
+ local target_config=.cache/resources/misc/fw3.cfg
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ config =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
  "vendor": "fortinet",
+ [[ config =~ ^(search|s)$ ]]
+ echo
  "model": "FortiGate-60F",
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ newline
+ (( i++ ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list
+ (( i < count ))
+ [[ search == \h\e\l\p ]]
+ echo
+ [[ search == \d\e\b\u\g ]]
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ (( i++ ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
++ which awk
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ serialize_objects
  "version": "v7.2.5.F",
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ IFS=,
++ echo 192.168.1.11
++ which awk
++ basename reports/172.31.255.254/misc/switch1
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
+ local first_search_entry=192.168.1.11
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
#model="FortiGate-60F"
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ declare -a execute__netwowrk_extract
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ newline 2
+ IFS==
+ search_pattern=172.16.1.6
+ read -r key value
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ local search_pattern
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ set -euo pipefail
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ export LC_ALL=C
+ [[ true == true ]]
+ LC_ALL=C
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
+ [[ search =~ ^(logger|l)$ ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
  "vendor": "cisco",
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local last_search_entry=192.168.1.11
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ serialize_objects
+ newline
+ [[ true == true ]]
+ local count=1
  "model": "",
  "version": "",
+ (( i = 0 ))
  "domain": "",
++ which awk
  "hostname": ""

}
config firewall address

+ [[ search =~ ^(search|s)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]'
object-group network Avengers-Office
 edit "Panther-Vault"
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ] ]]
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]'
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-configs--ips.list ]'
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ newline
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ local count=1
  "hostname": "fg-campus-core"
+ (( i = 0 ))
}

+ (( i < count ))
#hostname="fg-campus-core"
#model="FortiGate-200F"
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'

+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
config firewall address
+ [[ search == \d\e\b\u\g ]]
 edit "Hawkeye-Nest"
+ result=0
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
+ echo
+ [[ search == \d\r\y\-\r\u\n ]]
 next
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ -n {
  "vendor": "cisco",
  "hostname": ""
end'
  "model": "",
+ [[ search == \v\e\r\b\o\s\e ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

+ result=0
object-group network Avengers-Office
+ [[ -n {
}

  "vendor": "fortinet",
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ result=0
+ [[ -n {
  "vendor": "cisco",
++ mktemp -d
  "model": "",
++ IFS=,
++ echo 172.18.1.20
+ for xitem in "${@}"
  "model": "FortiGate-200F",
++ IFS=,
++ echo 192.168.2.12
++ echo -e --platform=cisco
+ IFS==
+ read -r key value
 description VLAN access layer
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
  "version": "",
 network-object host 10.0.0.1
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ export =~ ^(config|c)$ ]]
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg

+ [[ export =~ ^(console|o)$ ]]
config firewall address
+ [[ export =~ ^(export|r)$ ]]
 edit "Hawkeye-Nest"
+ local export_objects=true
  set subnet 172.16.1.6 255.255.255.255
+ [[ export =~ ^(extract|x)$ ]]
++ echo reports/172.31.255.254/misc/switch1.conf
+ [[ export =~ ^(logger|l)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
  set comment "Remote sniper node"
+ [[ export =~ ^(search|s)$ ]]
 next
+ declare -a execute__netwowrk_extract
 network-object 192.168.12.0 255.255.255.0 ]]
+ declare -a execute__netwowrk_extract

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
end ]]
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ export == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
  set subnet 192.168.1.10 255.255.255.255
+ for xitem in "${@}"
+ local awk_bin=/usr/bin/awk
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ cut -d/ -f2
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ read -r key value
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
  set comment "Wakandan data store"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
++ which awk
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ print '{
  "vendor": "fortinet",
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bOdHZlrSEY
  "model": "FortiGate-200F",
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bOdHZlrSEY
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -n {
  "vendor": "cisco",
#model="FortiGate-200F"
  "model": "",
+ export 'nl=\n'
  "version": "",

config firewall address
+ nl='\n'
 edit "Hawkeye-Nest"
  "domain": "",
  "hostname": ""
}
++ basename reports/10.10.10.10/cisco/campus-sw-access01
+ source ./scripts/devops-resources.shell
  set subnet 172.16.1.6 255.255.255.255

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  set comment "Remote sniper node"
 next
  "model": "",
end'
  "version": "",
  "domain": "",
  "hostname": ""
}
+ echo -en '{
  "vendor": "cisco",

  "model": "",
++ [[ -n '' ]]
  "version": "",
object-group network Panther-Edge
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -n {
  "vendor": "fortinet",
 description Internet-facing proxy systems
  "domain": "",
 network-object host 203.0.113.25
  "model": "FortiGate-200F",
  "hostname": ""
 network-object host 172.16.0.5
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
}

object network Edge-Terminal
  "version": "",
 host 172.16.0.5
++ [[ 5 -lt 4 ]]
 description Internet firewall handoff'

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
++ alias detect-vendor=detect_vendor
 network-object 192.168.12.0 255.255.255.0'
++ alias exit-error=exit_error
+ case "${target_platform}" in
++ alias list-file=list_file
  "domain": "",
  "hostname": "fg-campus-core"
}

++ alias log-error=log_error
#hostname="fg-campus-core"
++ alias log-info=log_info
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ [[ -n {
+ echo -en '{
                    in_json_header = 0;
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
++ alias log-warn=log_warn
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ sed '1{/^[[:space:]]*$/d;}'

++ alias print-message=message
++ printf '%*s' 12 ''
config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
++ alias print-newline=newline
 next
end'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LQhqqoBwxm
++ alias pause=pause
                    blk = "";
+ sed '1{/^[[:space:]]*$/d;}'
  "hostname": ""
                  }
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LQhqqoBwxm
}
++ alias print-line=print

object-group network Panther-Edge
                  /^[[:space:]]*$/ { next }
 description Internet-facing proxy systems
                  /^{$/ { in_json_header = 1; next }
 network-object host 203.0.113.25
                  /^}$/ {
 network-object host 172.16.0.5
                    if (in_json_header == 1) {

                      in_json_header = 0;
++ alias print-file=print_file
object network Edge-Terminal
 host 172.16.0.5
                      next;
 description Internet firewall handoff ]]
                    }
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
                  }
++ alias relative-configpath=relative_configpath
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ export 'nl=\n'
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ nl='\n'
                    blk = $0;
+ echo -en '{
                    next;
+ source ./scripts/devops-resources.shell
                  }
                  {
  "vendor": "cisco",
                    blk = blk divisor " " $0;
                  }
                  END {
  "model": "",
  "version": "",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "domain": "",
++ alias system-metrics=system_metrics
                  }
  "hostname": ""
++ [[ -n '' ]]
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
}
++ sed -e '1s|^\(-\)\{1,\}||'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
++ [[ 5 -lt 4 ]]
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
++ alias detect-vendor=detect_vendor
+ [[ platform =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
++ alias validate-address=validate_address
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias warning-message=warning
+ [[ platform =~ ^(extract|x)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias list-file=list_file
++ export 'nl=\n'
+ local target_platform=cisco
++ nl='\n'
++ export default_addresses=ips.list
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --platform=cisco
++ default_addresses=ips.list
++ alias print-message=message
++ export default_devices=devices.list
++ default_devices=devices.list
++ alias print-newline=newline
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias pause=pause
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ alias print-line=print
++ alias print-file=print_file
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --verbose
+ [[ platform =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ [[ extract =~ ^(search|s)$ ]]
++ export default_addresses=ips.list
+ [[ extract == \h\e\l\p ]]
++ default_addresses=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
++ export default_devices=devices.list
+ [[ extract == \d\r\y\-\r\u\n ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ [[ extract == \v\e\r\b\o\s\e ]]
++ default_matrix=matrix.json
+ for xitem in "${@}"
++ export cache_location=.cache
++ cache_location=.cache
+ IFS==
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
+ read -r key value
++ logs_location=logs
++ mkdir -p logs
+ local 'indent=            '
+ [[ true == true ]]
+ search_pattern=192.0.2.50
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local search_pattern
+ local count=1
+ newline
+ search_pattern=172.31.255.254
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ mkdir -p reports/172.31.255.254/misc/.objects
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ (( i < count ))
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ newline 2
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ newline 2
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
+ local count=2
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ printf '%*s' 12 ''
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
++ printf '%*s' 12 ''
+ [[ config == \d\e\b\u\g ]]
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ local count=2
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ serialize_objects
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ grep -F 172.16.1.6
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --platform=cisco
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ newline
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=1
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
++ export jobs_location=jobs
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ jobs_location=jobs
+ (( i < count ))
+ echo
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
++ mkdir -p jobs
+ (( i++ ))
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ extract =~ ^(logger|l)$ ]]
+ newline 2
++ cut -d/ -f2
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local target_platform=cisco
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose == \d\e\b\u\g ]]
+ echo
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(search|s)$ ]]
+ (( i++ ))
+ local count=2
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i < count ))
+ IFS==
+ read -r key value
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ for xitem in "${@}"
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ IFS==
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ read -r key value
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local verbose=true
+ sed '/^[[:space:]]*$/d'
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ IFS=' 	
'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i < count ))
+ [[ -z '' ]]
+ (( i < count ))
+ debug=false
+ echo
+ [[ -z '' ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ dry_run=false
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -z '' ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ export console_output=false
+ console_output=false
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z true ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message '                .cache/resources/misc/fw1.cfg'
+ (( i++ ))
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ (( i < count ))
+ newline
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ search_terms=()
+ local count=1
+ declare -a search_terms
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
+ echo
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ mapfile -t search_terms
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
                      in_json_header = 0;
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ -n {
  "vendor": "fortinet",
                  END {
  "model": "FortiGate-60F",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "version": "v7.2.5.F",
                  }
  "domain": "",
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ export console_location=console

++ console_location=console
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
++ mkdir -p console
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console
+ newline
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ echo
+ [[ logger == \h\e\l\p ]]
+ (( i++ ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export console_location=console
++ console_location=console
+ grep -F 192.0.2.50
++ mkdir -p console
+ IFS==
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ local parent_dir=reports/192.168.0.1/cisco
+ result=0
+ [[ 0 -ne 0 ]]
++ echo -e --platform=fortinet
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ tr -d '\r'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ grep -v '^\s*$'
++ touch console/run.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ sed '/^[[:space:]]*$/d'
                  /^{$/ { in_json_header = 1; next }
++ echo -e --export
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console
+ newline
+ [[ extract =~ ^(console|o)$ ]]
+ local count=1
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ grep -v '^#'
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local 'extracted_configuration={
+ local count=1
  "vendor": "cisco",
  "model": "",
+ (( i = 0 ))
  "version": "16.9",
  "domain": "",
+ (( i < count ))
  "hostname": "branch-isr-02"
+ echo
}
+ (( i++ ))
+ (( i < count ))

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ false == true ]]
++ touch console/run.console
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ true == true ]]
 network-object host 192.168.1.11'
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ result=0
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ -n {
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
  "vendor": "cisco",
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
+ serialize_objects
+ [[ extract =~ ^(platform|p)$ ]]
  "version": "16.9",
++ mktemp -d
+ grep -F 172.31.255.254
++ basename reports/192.168.0.1/cisco/access-sw1-west
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
  "domain": "",
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ platform =~ ^(logger|l)$ ]]
  "model": "",
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ result=0
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ 0 -ne 0 ]]
  "model": "",
+ serialize_objects
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ dirname reports/10.0.0.1/misc/switch1.conf
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ export targets_location=targets
+ [[ export =~ ^(export|r)$ ]]
++ targets_location=targets
+ local export_objects=true
  "version": "",
++ export targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(extract|x)$ ]]
  "domain": "",
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local first_search_entry=203.0.113.25
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local last_search_entry=203.0.113.25
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
}
+ for xitem in "${@}"
+ newline
  "hostname": ""
+ IFS==
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ IFS==

+ read -r key value
version 16.9
+ sed '/^[[:space:]]*$/d'
hostname branch-isr-02
}

+ for xitem in "${@}"
+ [[ true == true ]]
interface GigabitEthernet0/0/1
+ IFS==
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
 ip address 192.168.2.12 255.255.255.0

 description Workstation LAN
+ local parent_dir=reports/192.168.0.100/cisco

+ local count=1
object-group network Fortress-Wireless
 description Secure wireless access layer
+ read -r key value
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
 network-object host 172.18.1.20
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
object-group network Hydra-Edge
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
 description Remote site uplink
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ] ]]
 network-object host 192.168.1.10'
 network-object host 192.168.2.12
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
 network-object host 198.51.100.75'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ result=0
+ (( i = 0 ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ result=0
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ (( i < count ))
  "version": "16.9",
+ [[ false == true ]]
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
  "domain": "",
+ [[ -n {
+ ((  count == 0  ))
  "hostname": "branch-isr-02"
  "vendor": "cisco",
+ [[ logger =~ ^(console|o)$ ]]
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
}
+ [[ logger =~ ^(extract|x)$ ]]
  "model": "",
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]

+ (( i < count ))
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ logger =~ ^(search|s)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
++ export targets_location=targets
+ [[ logger == \h\e\l\p ]]
++ targets_location=targets
  "hostname": "branch-isr-02"
+ case "${target_platform}" in
++ export targets_logfile=.cache/targets.jobs
+ [[ logger == \d\e\b\u\g ]]
++ targets_logfile=.cache/targets.jobs
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ [[ logger == \d\r\y\-\r\u\n ]]
 network-object host 172.18.1.20
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
 network-object host 192.168.1.11'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ for xitem in "${@}"
                  BEGIN {
  "version": "",
                    in_json_header = 0;
+ IFS==
+ local search_pattern
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ [[ -n {
                  }
  "vendor": "cisco",
                  (in_json_header == 1) { next }
version 16.9
  "model": "",
                  /^[^[:space:]]/ {
+ read -r key value
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
  "version": "16.9",
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
  "domain": "",
  "hostname": "branch-isr-02"
}

                    if (blk != "" && !seen[blk]++) print blk "\n";
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
                    blk = $0;
 description Protected but public-facing zone
                    next;
 network-object host 172.18.1.20
                  }
 network-object host 192.168.1.11 ]]
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
  "domain": "",

+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uMkaVbUjXo
hostname branch-isr-02
object-group network Lantern-DMZ

  "hostname": ""
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uMkaVbUjXo
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
interface GigabitEthernet0/0/1
 description Protected but public-facing zone
 network-object host 172.18.1.20
 ip address 192.168.2.12 255.255.255.0
 network-object host 192.168.1.11'
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 network-object host 198.51.100.75 ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ cat -n
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ newline
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ sed '1{/^[[:space:]]*$/d;}'
++ alias list-file=list_file
+ serialize_objects
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --platform=fortinet
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ echo -e --verbose
++ alias relative-configpath=relative_configpath
+ local count=1
+ (( i = 0 ))
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
++ alias system-metrics=system_metrics
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ export default_matrix=matrix.json
+++ base64
+ grep -F 10.10.10.10
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ local parent_dir=reports/10.0.0.1/misc
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
++++ basename ./scripts/devops-resources.shell
+ (( i++ ))
+ (( i < count ))
+ result=0
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ 0 -ne 0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
++ sed -e '1s|^\(-\)\{1,\}||'

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ cat -n
 network-object host 192.168.1.10'
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
++ dirname reports/172.16.0.5/misc/fw3.cfg
+++ tr -dc a-zA-Z0-9
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
+ [[ -n {
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
++ echo -e --export
  "version": "",
+++ base64
  "domain": "",
  "hostname": ""
  "model": "",
}
  "version": "16.9",

  "domain": "",
object-group network Fortress-Wireless
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
++++ basename ./scripts/devops-resources.shell
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ echo -n devops-resources.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ verbose =~ ^(platform|p)$ ]]
+ local parent_dir=reports/172.16.0.5/misc
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z cisco ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local verbose=true
+ [[ true == true ]]
+ IFS=' 	
'
+ source ./scripts/devops-helpers.shell
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ export jobs_location=jobs
+ [[ -z true ]]
+ newline
++ jobs_location=jobs
++ [[ -n '' ]]
+ [[ -z '' ]]
++ mkdir -p jobs
+ local count=1
+ export console_output=false
+ (( i = 0 ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ console_output=false
++ __DEVOPS_HELPERS_SOURCED=1
+ local parent_dir=reports/172.16.1.6/fortinet
+ [[ -z true ]]
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ newline 2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console ]]
+++ echo -n devops-resources.shell
+ [[ -z '' ]]
+ newline
+ script_helper=false
+ [[ false == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ [[ export =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]]
+ echo
+ echo
++ alias parse-listings--helper=parse_listings__helper
+ (( i++ ))
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ search_terms=()
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ (( i++ ))
++ basename reports/10.0.0.1/misc/switch1
+ (( i < count ))
+ declare -a search_terms
+ (( i < count ))
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local export_objects=true
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]]
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ sed '/^[[:space:]]*$/d'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(export|r)$ ]]
+ mapfile -t search_terms
+ search_pattern=192.168.0.1
+ return 0
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ alias network-configs--helper=network_configs__helper
+ echo
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ export =~ ^(logger|l)$ ]]
+ local count=2
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ (( i < count ))
+ (( i++ ))
+ local target_platform=fortinet
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
++ alias network-extract--helper=network_extract__helper
+ echo
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ export =~ ^(search|s)$ ]]
+ (( i++ ))
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ return 0
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console
++ mktemp -d
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
+ case "${target_file}" in
+ [[ export == \h\e\l\p ]]
+ [[ true == true ]]
+ IFS==
+ local export_objects=true
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
++ basename reports/172.16.0.5/misc/fw3
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ export =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(export|r)$ ]]
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
++ [[ 5 -lt 4 ]]
+ [[ export == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console ]]
+ [[ export == \d\e\b\u\g ]]
+ case "${target_file}" in
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ local count=1
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ read -r key value
+ alias parse-cisco=main
+ (( i++ ))
++ alias network-configs--helper=network_configs__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ (( i < count ))
+ mkdir -p logs
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ tr -d '\r'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ grep -v '^\s*$'
++ echo -e --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ newline 2
++ echo -e --verbose
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ local search_pattern
+ result=0
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kdDDOQML9i
+ [[ 0 -ne 0 ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kdDDOQML9i
+ [[ true == true ]]
+ [[ true == true ]]
+ local search_pattern
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ local search_pattern
+ [[ true == true ]]
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+ local count=2
+ export network_extract__console=console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ network_extract__console=console/network-extract.console
+ export 'nl=\n'
+ touch console/network-extract.console
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ newline 2
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
++ alias detect-vendor=detect_vendor
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
++ alias exit-error=exit_error
++ alias list-file=list_file
+ local count=2
++ alias log-error=log_error
+ script_filename=network-extract.shell
++ alias log-info=log_info
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias log-warn=log_warn
+ (( i = 0 ))
++ echo -e --export
+ (( i < count ))
+ touch console/network-extract.console
+ echo
++ alias print-message=message
+ (( i++ ))
++ alias print-newline=newline
+ (( i < count ))
+ (( i < count ))
++ alias pause=pause
+ echo
++ export actions_logfile=console/run.console
++ alias print-line=print
+ (( i++ ))
++ actions_logfile=console/run.console
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ (( i < count ))
+ echo
++ touch console/run.console
++ alias print-file=print_file
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console
++ alias relative-configpath=relative_configpath
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i++ ))
                  BEGIN {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
                    in_json_header = 0;
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console ]]
                    blk = "";
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console ]]
                  }
+ local count=1
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
                  /^[[:space:]]*$/ { next }
+ case "${target_file}" in
+ case "${target_file}" in
+ (( i = 0 ))
                  /^{$/ { in_json_header = 1; next }
++ sed -e '1s|^\(-\)\{1,\}||'
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
++ alias system-metrics=system_metrics
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local first_search_entry=172.16.1.6
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local last_search_entry=172.16.1.6
+ [[ verbose =~ ^(export|r)$ ]]
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ alias validate-address=validate_address
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
++ alias warning-message=warning
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ export LC_ALL=C
+ [[ verbose =~ ^(search|s)$ ]]
++ LC_ALL=C
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ export 'nl=\n'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--branch-isr-02.cfg.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
++ nl='\n'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
+ local verbose=true
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ] ]]
++ echo reports/172.16.0.5/misc/fw3.cfg
+ IFS=' 	
+ local count=1
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
+ echo
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ (( i = 0 ))
++ export default_addresses=ips.list
'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-configs--ips.list ]'
++ default_addresses=ips.list
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ [[ -z '' ]]
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
+ (( i++ ))
+ echo
+ newline
+ debug=false
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ local count=1
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ -z '' ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
++ export default_devices=devices.list
+ dry_run=false
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ return 0
+ [[ -z true ]]
++ default_devices=devices.list
+ [[ logger == \h\e\l\p ]]
+ ((  count == 0  ))
+ (( i = 0 ))
++ export default_matrix=matrix.json
+ newline
++ default_matrix=matrix.json
+ (( i < count ))
+ [[ true == true ]]
++ export cache_location=.cache
+ [[ -z '' ]]
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ logger == \d\e\b\u\g ]]
+ echo
+ export console_output=false
+ [[ false == true ]]
++ cache_location=.cache
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ console_output=false
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -z true ]]
++ export logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ cut -d/ -f2
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console
+ [[ -z '' ]]
+ grep -F 192.168.0.1
+ script_helper=false
+ [[ true == true ]]
++ logs_location=logs
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ local count=1
+ newline
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ mkdir -p logs
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console ]]
+ for xitem in "${@}"
+ search_terms=()
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console
+ cat -n reports/172.18.1.20/misc/fw1.cfg
++ cut -d/ -f2
+ declare -a search_terms
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]]
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z cisco ]]
+ mapfile -t search_terms
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
++ echo reports/10.0.0.1/misc/switch1.conf
+ [[ true == true ]]
+ serialize_objects
+ newline
+ local count=1
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ (( i = 0 ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4a1ts3viv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console --export --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
++ cut -d/ -f2
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ oIFS=' 	
+ case "${target_file}" in
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.0x0qzttrvm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ sed '/^[[:space:]]*$/d'
++ tr -d '\r'
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ (( i++ ))
+ (( i < count ))
+ IFS=' 	
'
+ [[ -z '' ]]
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list != *,* ]]
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ mapfile -t search_terms
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ grep -v '^\s*$'
+ result=0
+ exit 0
+ [[ export =~ ^(config|c)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DIICus1fiT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DIICus1fiT
+ search_pattern=172.16.0.5
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+ search_pattern=172.16.1.6
+ mkdir -p reports/172.16.0.5/misc/.objects
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ mkdir -p reports/172.16.1.6/fortinet/.objects
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jlw0LCMirv ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jlw0LCMirv
+ cat -n
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_pattern=10.0.0.1
+ [[ export =~ ^(platform|p)$ ]]
+ mkdir -p reports/10.0.0.1/misc/.objects
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ echo -e --export
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
++ grep -v '^\s*$'
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ local count=1
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ] ]]
+ (( i = 0 ))
+ [[ search =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-configs--ips.list ]'
+ echo
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local count=1
+ [[ search == \d\e\b\u\g ]]
+ ((  count == 0  ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ for xitem in "${@}"
+ (( i++ ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ IFS==
+ read -r key value
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+++ echo -n devops-resources.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/203.0.113.25/cisco
++ export jobs_location=jobs
+ echo
++ jobs_location=jobs
+ (( i++ ))
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ (( i < count ))
++ mkdir -p jobs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
++ grep -v '^#'
+ [[ search =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ local parent_dir=reports/192.168.1.11/cisco
+ echo
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ newline
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ newline
+ [[ search =~ ^(search|s)$ ]]
+ local count=1
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ (( i = 0 ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list
+ result=0
+ local count=1
+ [[ false == true ]]
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ conf == \c\o\n\f ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ (( i = 0 ))
+ [[ search == \h\e\l\p ]]
+ echo
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ search == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ for xitem in "${@}"
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i < count ))
+ IFS==
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ echo
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ read -r key value
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ false == true ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ source ./scripts/devops-helpers.shell
+ return 0
++ [[ -n '' ]]
+ [[ true == true ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
++ [[ 5 -lt 4 ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console
+ case "${target_platform}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console ]]
+ [[ export =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ serialize_objects
                  BEGIN {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console ]]
                    in_json_header = 0;
++ alias parse-listings--helper=parse_listings__helper
+ case "${target_file}" in
                    blk = "";
+ case "${target_file}" in
                  }
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console
                  /^[[:space:]]*$/ { next }
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PZctmmWb3i/network-extract--switch1.conf.console
                  /^{$/ { in_json_header = 1; next }
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ export =~ ^(console|o)$ ]]
                  /^}$/ {
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
++ alias network-configs--helper=network_configs__helper
                ' reports/172.16.0.5/misc/fw3.cfg
+ serialize_objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ command -v -- ./scripts/network-extract.shell
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ local export_objects=true
+ case "${target_platform}" in
+ [[ export =~ ^(extract|x)$ ]]
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ alias serialize-object=serialize_objects
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
++ dirname reports/172.16.1.6/misc/switch3.conf
+ [[ export == \d\e\b\u\g ]]
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
+ [[ export == \d\r\y\-\r\u\n ]]
                    }
+ [[ export == \v\e\r\b\o\s\e ]]

                    # Add next to block
+ for xitem in "${@}"
                    /^ next$/ {
+ IFS==
                      blk = blk divisor " " $0;
+ read -r key value
                      next;
                    }
+ local SCRIPT_PATH=./scripts/network-extract.shell

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg

++ echo -e --verbose
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ alias parse-cisco=main
+ grep -F 172.16.0.5
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 172.16.1.6
++ dirname reports/172.18.1.20/misc/fw1.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ] ]]
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ sed '/^[[:space:]]*$/d'
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.16.1.6/misc
+ [[ ! -d reports/172.16.1.6/misc ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ [[ config =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ export console_location=console
+ [[ config =~ ^(logger|l)$ ]]
++ console_location=console
+ [[ config =~ ^(platform|p)$ ]]
+ echo
++ mkdir -p console
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local search_pattern
+ for xitem in "${@}"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ sed '/^[[:space:]]*$/d'
+ IFS==
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ read -r key value
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ script_filename=network-extract
+ local parent_dir=reports/172.18.1.20/misc
+ local parent_dir=reports/192.168.2.12/cisco
+ export network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z cisco ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ cat -n
+ result=0
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9vgFvgXvMv ]]
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9vgFvgXvMv
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console ]]
+ [[ conf == \c\o\n\f ]]
+ newline
+ case "${target_file}" in
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=1
+ local search_pattern
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--campus-sw-access01.cfg.console
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ (( i < count ))
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i++ ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ newline 2
+ [[ verbose =~ ^(search|s)$ ]]
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ config =~ ^(logger|l)$ ]]
+ IFS=' 	
'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ set -euo pipefail
+ dry_run=false
+ local first_search_entry=10.10.10.10
+ [[ -z true ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ config == \d\e\b\u\g ]]
+ console_output=false
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ command -v -- ./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]]
+ grep -F 10.0.0.1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ local count=2
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ export LC_ALL=C
+ (( i < count ))
+ LC_ALL=C
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/172.18.1.20/misc/fw1
++ dirname reports/10.0.0.1/misc/switch3.conf
+ sed '/^[[:space:]]*$/d'
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ dirname -- ./scripts/network-extract.shell
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
+ (( i++ ))
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
++ tr -d '\r'
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
++ alias network-extract--helper=network_extract__helper
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ true == true ]]
                  }
+ (( i = 0 ))
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
++ cut -d/ -f2
+ local parent_dir=reports/10.0.0.1/cisco
+ [[ verbose =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
+ (( i < count ))
++ targets_location=targets
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ (( i++ ))
+ (( i < count ))
++ export targets_logfile=.cache/targets.jobs
+ (( i++ ))
+ (( i < count ))
+ local last_search_entry=10.10.10.10
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ grep -v '^\s*$'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ] ]]
+ (( i < count ))
+ echo
++ tr -d '\r'
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ alias serialize-object=serialize_objects
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
++ mktemp -d
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ final_output=reports/192.168.1.10/misc/fw1.cfg
++ which awk
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ verbose == \h\e\l\p ]]
+ local first_search_entry=203.0.113.25
+ local export_objects=true
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ verbose == \d\e\b\u\g ]]
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(extract|x)$ ]]
+ echo
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ newline
++ grep -v '^#'
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ grep -F 10.0.1.2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -z x ]]
+ (( i++ ))
+ export logs_location=logs
+ (( i < count ))
+ logs_location=logs
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ mkdir -p logs
+ ((  count == 0  ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local last_search_entry=203.0.113.25
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local verbose=true
+ [[ true == true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ set -euo pipefail
+ grep -F 10.0.2.3
+ [[ export =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ export =~ ^(search|s)$ ]]
+ LC_ALL=C
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ (( i++ ))
++ grep -v '^#'
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
++ basename reports/10.0.0.1/cisco/perimeter-fw1
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ dry_run=false
+ local count=1
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ] ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ local verbose=true
+ (( i = 0 ))
+ IFS=' 	
'
+ [[ -z '' ]]
+ local count=1
+ (( i < count ))
+ debug=false
+ [[ -z '' ]]
+ search_pattern=192.168.0.100
+ [[ true == true ]]
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ ((  count == 0  ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ for xitem in "${@}"
++ mktemp -d
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ sed '/^[[:space:]]*$/d'
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console ]]
+ dry_run=false
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ -z true ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -z '' ]]
+ echo
+ script_helper=false
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ newline
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ (( i++ ))
+ [[ -z '' ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ local 'indent=            '
++ mktemp -d
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ [[ false == true ]]
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]]
+ (( i = 0 ))
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ export console_output=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]]
+ local count=1
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list != *,* ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ mapfile -t search_terms
+ [[ -z cisco ]]
+ [[ true == true ]]
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]]
+ search_terms=()
++ dirname -- ./scripts/network-extract.shell
+ declare -a search_terms
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -z cisco ]]
+ [[ true == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I8YlY0bfLW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I8YlY0bfLW
+ (( i++ ))
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export 'nl=\n'
+ nl='\n'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ source ./scripts/devops-resources.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local count=1
+++ base64
+ (( i = 0 ))
+ (( i < count ))
++ alias detect-vendor=detect_vendor
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
++ alias exit-error=exit_error
+ (( i++ ))
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
++ alias list-file=list_file
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local first_search_entry=192.168.2.12
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias log-error=log_error
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local last_search_entry=192.168.2.12
++ alias log-info=log_info
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
++++ basename ./scripts/devops-resources.shell
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias log-warn=log_warn
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]]
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list != *,* ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ] ]]
+ mapfile -t search_terms
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ echo -e --verbose
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+++ tr -dc a-zA-Z0-9
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ false == true ]]
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ echo
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i++ ))
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ result=0
++ alias print-message=message
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
++ alias print-newline=newline
+ newline
+ output_dir=reports/192.168.1.10/misc
+ local count=1
+ (( i = 0 ))
+ [[ ! -d reports/192.168.1.10/misc ]]
+ (( i < count ))
+ echo
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ alias pause=pause
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ newline
+ local count=1
+ script_filename=network-extract.shell
+ result=0
+ (( i = 0 ))
+ script_filename=network-extract
+ newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ADLTDYOU5h
+ [[ 0 -ne 0 ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ADLTDYOU5h
++ IFS=,
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ echo 10.0.2.3
+ touch console/network-extract.console
+ [[ -z fortinet ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ alias print-line=print
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ (( i < count ))
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ true == true ]]
+ echo
+ local count=1
++ alias print-file=print_file
+ (( i = 0 ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bUJbjXZipS
+ echo
+ serialize_objects
+ export 'nl=\n'
+ (( i++ ))
+ (( i++ ))
++ alias relative-configpath=relative_configpath
+ local SCRIPT_DIR=./scripts
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bUJbjXZipS
+ nl='\n'
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ export 'nl=\n'
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ nl='\n'
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ declare -a execute__netwowrk_extract
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ newline
+ local count=1
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias system-metrics=system_metrics
+ [[ false == true ]]
+ (( i < count ))
+ source ./scripts/devops-resources.shell
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
++ tr -d '\r'
+ echo
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ newline
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
++ alias validate-address=validate_address
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i = 0 ))
++ alias exit-error=exit_error
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+++ echo -n devops-resources.shell
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias warning-message=warning
+ echo
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
++ [[ 5 -lt 4 ]]
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ newline
++ export LC_ALL=C
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
++ alias list-file=list_file
++ LC_ALL=C
+ (( i++ ))
+ serialize_objects
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
++ alias detect-vendor=detect_vendor
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ serialize_objects
++ alias exit-error=exit_error
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias log-error=log_error
+ (( i < count ))
++ alias log-info=log_info
++ alias list-file=list_file
+ [[ false == true ]]
++ alias log-warn=log_warn
+ [[ true == true ]]
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
++ alias log-error=log_error
++ export default_addresses=ips.list
++ alias log-info=log_info
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ alias log-warn=log_warn
++ grep -v '^\s*$'
++ alias print-message=message
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ alias print-newline=newline
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias pause=pause
++ alias print-message=message
++ alias print-line=print
++ default_addresses=ips.list
++ alias print-newline=newline
++ alias print-file=print_file
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
++ export default_devices=devices.list
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
++ alias relative-configpath=relative_configpath
++ default_devices=devices.list
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ case "${target_platform}" in
++ alias pause=pause
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
++ tr -d '\r'
+ serialize_objects
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias system-metrics=system_metrics
++ export cache_location=.cache
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ alias print-line=print
                  BEGIN {
+ source ./scripts/devops-helpers.shell
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
++ [[ -n '' ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ readonly __DEVOPS_HELPERS_SOURCED=1
                    blk = $0;
++ __DEVOPS_HELPERS_SOURCED=1
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
++ [[ 5 -lt 4 ]]
                  }
                  END {
++ which awk
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ alias validate-address=validate_address
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias warning-message=warning
++ which awk
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
++ cut -d/ -f2
++ dirname reports/10.0.1.2/misc/switch1.conf
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
++ grep -v '^#'
++ export LC_ALL=C
++ LC_ALL=C
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ alias print-file=print_file
++ alias parse-listings--helper=parse_listings__helper
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ alias relative-configpath=relative_configpath
++ default_addresses=ips.list
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ grep -v '^\s*$'
++ alias system-metrics=system_metrics
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ grep -F 192.168.0.100
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ cat -n
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ grep -v '^#'
++ logs_location=logs
++ mkdir -p logs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
++ export 'nl=\n'
++ alias network-configs--helper=network_configs__helper
+ output_dir=reports/192.168.1.11/fortinet
++ nl='\n'
+ [[ ! -d reports/192.168.1.11/fortinet ]]
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ 7 -eq 0 ]]
++ export default_devices=devices.list
++ default_devices=devices.list
+ search_pattern=10.0.0.1
++ export default_matrix=matrix.json
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.up7w7xsupg/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ default_matrix=matrix.json
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ local awk_bin=/usr/bin/awk
+ local parent_dir=reports/10.0.1.2/misc
+ local first_search_entry=198.51.100.75
+ local parent_dir=reports/172.18.1.20/cisco
++ alias network-extract--helper=network_extract__helper
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
  "model": "ASA",
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ local SCRIPT_DIR=./scripts
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local script_filename=cisco-configs.awk
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ newline
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ alias serialize-object=serialize_objects
+ local count=1
++ export cache_location=.cache
+ local parent_dir=reports/10.0.2.3/misc
++ cache_location=.cache
+ (( i = 0 ))
  "version": "9.14(3)",
+ local last_search_entry=198.51.100.75
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console --export --verbose
+ [[ verbose =~ ^(export|r)$ ]]
++ export logs_location=logs
  "domain": "edge.dc.example.com",
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
  "hostname": "perimeter-fw1"
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
++ logs_location=logs
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
}
+ echo

+ oIFS=' 	
+ [[ verbose == \h\e\l\p ]]
ASA Version 9.14(3)
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ [[ verbose == \d\e\b\u\g ]]
hostname perimeter-fw1
'
+ (( i < count ))
domain-name edge.dc.example.com
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ] ]]
++ mkdir -p logs
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ return 0
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ local verbose=true

++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ local first_search_entry=192.168.100.100
+ IFS=' 	
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
'
+ local last_search_entry=192.168.100.100
+ [[ true == true ]]
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
object-group network Avengers-DMZ
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ local count=1
+ [[ -z '' ]]
 description Public access layer
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ IFS==
 network-object host 192.0.2.50
+ read -r key value
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ debug=false
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ alias parse-cisco=main
+ ((  count == 0  ))
+ result=0
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ -z '' ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console
+ dry_run=false
+ cat -n
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -z true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z x ]]
+ [[ -z '' ]]
++ printf '%*s' 12 ''
+ [[ -n {
+ export logs_location=logs
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]'
}

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console
+ export console_output=false
ASA Version 9.14(3)
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ] ]]
+ newline
+ console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console ]]
+ sed '/^[[:space:]]*$/d'
hostname perimeter-fw1
+ logs_location=logs
domain-name edge.dc.example.com

+ mkdir -p logs
object-group network Avengers-DMZ
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]'
+ [[ -z true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ [[ -z '' ]]
+ (( i = 0 ))
+ script_helper=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console
 description Public access layer
++ command -v -- ./scripts/network-extract.shell
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
++ printf '%*s' 12 ''
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
++ basename reports/10.0.1.2/misc/switch1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
++ basename reports/10.0.2.3/misc/fw1
+ [[ true == true ]]
+ cat -n
+ local count=1
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ ((  count == 0  ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ IFS=,
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo 192.168.0.100
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local count=1
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list
+ (( i = 0 ))
+ echo
+ (( i < count ))
++ export jobs_location=jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ local parent_dir=reports/192.168.1.10/fortinet
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ (( i++ ))
hostname perimeter-fw1
domain-name edge.dc.example.com
+ echo
+ (( i < count ))

++ jobs_location=jobs
+ (( i++ ))
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ (( i < count ))
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ 0 -ne 0 ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n {
  "vendor": "cisco",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local search_pattern
  "model": "ASA",
  "version": "9.14(3)",
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
  "domain": "edge.dc.example.com",
++ mkdir -p jobs
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
  "hostname": "perimeter-fw1"
+ local search_pattern
+ output_dir=reports/10.10.10.10/cisco
+ newline
+ local search_pattern
}

+ [[ ! -d reports/10.10.10.10/cisco ]]
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
object-group network Avengers-DMZ
 description Public access layer
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ -z cisco ]]
+ output_dir=reports/203.0.113.25/cisco
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
 network-object host 192.0.2.50
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ local count=1
+ echo -en '{
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "ASA",
+ (( i < count ))
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ newline
++ tr -d '\r'
+ local count=1
+ newline
+ local count=1
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ return 0
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ grep -v '^\s*$'
+ [[ true == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ grep -v '^#'
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ echo
+ script_filename=network-extract
+ (( i++ ))
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ true == true ]]
+ (( i < count ))
+ touch console/network-extract.console
+ output_dir=reports/192.168.2.12/fortinet
+ [[ ! -d reports/192.168.2.12/fortinet ]]
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ cut -d/ -f2
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local awk_bin=/usr/bin/awk
++ export console_location=console
++ console_location=console
+ [[ search =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console
++ mkdir -p console
++ echo reports/10.0.1.2/misc/switch1.conf
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ search =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ local script_filename=fortinet-configs.awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search =~ ^(extract|x)$ ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline 2
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
++ export console_location=console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console ]]
++ console_location=console
+ [[ search =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console
++ mkdir -p console
+ [[ search =~ ^(platform|p)$ ]]
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console
++ echo reports/10.0.2.3/misc/fw1.cfg
+ local count=1
+ local count=2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
+ [[ search == \h\e\l\p ]]
+ local search_pattern
+ [[ search == \d\e\b\u\g ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ grep -F 10.0.0.1
+ echo
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
++ cut -d/ -f2
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
++ IFS=,
+ newline
+ local count=1
++ echo 192.168.1.10
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
++ printf '%*s' 12 ''
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
++ dirname -- ./scripts/network-extract.shell
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
++ which awk
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ search_pattern=172.18.1.20
+ (( i < count ))
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ which awk
+ local 'indent=            '
+ [[ 7 -eq 0 ]]
++ cut -d/ -f2
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v2ctwgvrv2/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ search_pattern=10.0.1.2
+ mkdir -p reports/10.0.1.2/misc/.objects
+ oIFS=' 	
'
+ search_pattern=10.0.2.3
+ newline
+ for xitem in "${@}"
+ newline
++ export actions_logfile=console/run.console
+ IFS==
+ local count=1
++ actions_logfile=console/run.console
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ echo
+ local script_filename=cisco-configs.awk
++ export console_location=console
+ (( i++ ))
++ console_location=console
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ mkdir -p console
+ local count=1
++ dirname -- ./scripts/network-extract.shell
++ export actions_logfile=console/run.console
+ mkdir -p reports/10.0.2.3/misc/.objects
+ read -r key value
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ exit 0
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ actions_logfile=console/run.console
+ cat -n
++ touch console/run.console
++ touch console/run.console
+ [[ true == true ]]
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pAyOuApfK8 ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pAyOuApfK8
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ case "${target_file}" in
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--branch-isr-02.cfg.console
+ newline
+ local 'indent=            '
+ local count=1
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ [[ cfg == \c\f\g ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ IFS=,
+ [[ true == true ]]
++ echo 192.168.1.11
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ declare -a execute__netwowrk_extract
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
  "model": "",
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/198.51.100.75/cisco
+ search_pattern=192.168.1.10
  "version": "",
  "domain": "",
  "hostname": ""
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ echo
}
+ local awk_bin=/usr/bin/awk
+ local SCRIPT_DIR=./scripts
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
++ which awk
+ local script_filename=fortinet-configs.awk
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ result=0
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ -n {
+ newline
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local count=1
  "domain": "",
  "hostname": ""
+ (( i = 0 ))
}
+ (( i < count ))

+ echo
object-group network Wakanda-Core
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ [[ true == true ]]
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ [[ false == true ]]
+ [[ true == true ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console ]]
++ export targets_location=targets
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console
++ targets_location=targets
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
++ export actions_logfile=console/run.console
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ case "${target_platform}" in
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ serialize_objects
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ exit 0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mm8OJEG0z9 ]]
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mm8OJEG0z9
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ which awk
++ actions_logfile=console/run.console
+ [[ config =~ ^(config|c)$ ]]
++ touch console/run.console
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ print '{
  "vendor": "cisco",
+ grep -F 172.18.1.20
                  /^}$/ {
  "model": "",
                    if (in_json_header == 1) {
  "version": "",
                      in_json_header = 0;
  "domain": "",
  "hostname": ""
                      next;
                    }
}
                  }
                  (in_json_header == 1) { next }

object-group network Wakanda-Core
                  /^[^[:space:]]/ {
 description National Core Routing Zone
 network-object host 192.168.1.10
                    if (blk != "" && !seen[blk]++) print blk "\n";
 network-object host 10.0.2.3
                    blk = $0;
 network-object 10.0.0.0 255.255.255.0
                    next;

                  }
object network Panther-Gateway
                  {
 host 10.0.2.3
                    blk = blk divisor " " $0;
 description Secure outbound concentrator'
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.1.2/misc/switch1.conf
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ printf '%*s' 12 ''
+ cat -n
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local awk_bin=/usr/bin/awk
+ [[ cfg == \c\f\g ]]
+ output_dir=reports/192.168.100.100/cisco
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
++ dirname -- ./scripts/network-extract.shell
+ case "${target_platform}" in
++ IFS=,
++ echo 10.10.10.10
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+++ base64
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
+ local 'indent=            '
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ true == true ]]
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ sed '/^[[:space:]]*$/d'
+ [[ search =~ ^(console|o)$ ]]
+++ base64
++ IFS=,
+ [[ search =~ ^(export|r)$ ]]
++ echo 203.0.113.25
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++++ basename ./scripts/devops-resources.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
++ printf '%*s' 12 ''
++ command -v -- ./scripts/network-extract.shell
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
 network-object host 192.168.0.1
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local parent_dir=reports/192.0.2.50/cisco
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ grep -F 10.0.1.2
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ search == \d\e\b\u\g ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ for xitem in "${@}"
+ IFS==
+ [[ true == true ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ local 'indent=            '
++ which awk
 network-object host 192.168.0.100
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
+ (( i < count ))
+++ echo -n devops-resources.shell
+ echo
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ case "${target_platform}" in
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
++ targets_logfile=.cache/targets.jobs
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console
 network-object host 10.10.10.10 ]]
                      blk = "";
                      in_json_header = 0;
+ [[ true == true ]]
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

++ IFS=,
                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ [[ true == true ]]
                    (in_json_header == 1) { next }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console ]]

++ echo 192.168.2.12
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console ]]
                    /^config / {
                      if (blk != "") print blk;
+ case "${target_file}" in
                      blk = $0;
                      next;
                    }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console

                    # Add edit line to current block
++ which awk
                    /^ edit / {
+++ echo -n devops-resources.shell
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ output_dir=reports/10.10.10.10/fortinet
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ echo
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ result=0
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ grep -F 10.0.2.3
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ source ./scripts/devops-helpers.shell
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ sed '/^[[:space:]]*$/d'
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ [[ -n '' ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
++ [[ 5 -lt 4 ]]
++ basename reports/192.0.2.50/cisco/perimeter-fw1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ declare -a execute__netwowrk_extract
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console ]]
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--access-sw1-west.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
++ which awk
+ grep -F 192.168.1.10
++ alias network-configs--helper=network_configs__helper
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ dirname -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
+ newline 2
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

+ sed '/^[[:space:]]*$/d'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
object-group network Floor-Networks
+ alias serialize-object=serialize_objects
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ extract =~ ^(export|r)$ ]]
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=2
+ IFS==
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ alias parse-cisco=main
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ -z x ]]
+ export logs_location=logs
++ [[ -n '' ]]
+ logs_location=logs
++ which awk
+ sed '/^[[:space:]]*$/d'
+++ base64
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
++++ basename ./scripts/devops-resources.shell
+ mkdir -p logs
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ (( i++ ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ result=0
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ local SCRIPT_DIR=./scripts
++ [[ 5 -lt 4 ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
++ alias parse-listings--helper=parse_listings__helper
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ newline
+ local awk_bin=/usr/bin/awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console ]]
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--perimeter-fw1.cfg.console
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ echo
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yTE0DPgeON ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yTE0DPgeON
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ printf '%*s' 12 ''
+ [[ config == \h\e\l\p ]]
++ IFS=,
+ [[ config == \d\e\b\u\g ]]
+++ echo -n devops-resources.shell
++ echo 198.51.100.75
++ alias network-configs--helper=network_configs__helper
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
++ alias network-extract--helper=network_extract__helper
+ local 'indent=            '
 network-object host 172.18.1.20
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ alias serialize-object=serialize_objects
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ for xitem in "${@}"
+ IFS==
+ declare -a execute__netwowrk_extract
+ read -r key value
+ cat -n
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
++ which awk
+ result=0
++ printf '%*s' 12 ''
+ [[ 0 -ne 0 ]]
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
+ newline 2
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ case "${target_file}" in
+ cat reports/10.0.1.2/misc/.objects/switch1.list
+ newline
 network-object host 192.168.1.10'
+ [[ true == true ]]
+ local count=1
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i = 0 ))
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ local count=2
+ echo
+ alias parse-cisco=main
+ local 'indent=            '
+ (( i = 0 ))
+ local 'extracted_configuration={
+ (( i++ ))
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ newline
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ local count=1
+ [[ -z x ]]
+ (( i = 0 ))
+ export logs_location=logs
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
  "vendor": "fortinet",
+ (( i < count ))
+ (( i < count ))
  "model": "FortiGate-200F",
++ [[ -n '' ]]
+ logs_location=logs
+ (( i < count ))
+ newline
  "version": "",
+ echo
+ echo
+ mkdir -p logs
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local count=1
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
+ (( i++ ))
  "domain": "",
+ (( i < count ))
  "hostname": "fg-campus-core"
}
+ local count=1
+ echo

+ (( i++ ))
+ (( i = 0 ))
+ (( i++ ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ (( i = 0 ))
#hostname="fg-campus-core"
+ (( i < count ))
#model="FortiGate-200F"
+ (( i < count ))
+ echo
+ (( i < count ))
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg

+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ cat -n
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias parse-listings--helper=parse_listings__helper
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ printf '%*s' 12 ''
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ basename reports/10.10.10.10/cisco/access-sw1-west
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ alias network-configs--helper=network_configs__helper
+ echo
++ which awk
config firewall address
 edit "Cap-HQ"
+ (( i++ ))
  set subnet 192.168.1.11 255.255.255.255
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))
  set comment "Captain America’s secure endpoint"
 next
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
end'
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ result=0
+ [[ -n {
+ newline
++ echo -e --platform=cisco
+ local count=1
++ cut -d/ -f2
++ alias network-extract--helper=network_extract__helper
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i < count ))
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ local 'indent=            '
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local SCRIPT_DIR=./scripts
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local script_filename=fortinet-configs.awk
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "version": "",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local count=1
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ script_filename=network-extract.shell
+ (( i < count ))
+ print '{
+ script_filename=network-extract
  "vendor": "cisco",
  "model": "",
+ export network_extract__console=console/network-extract.console
  "version": "",
  "domain": "",
+ alias serialize-object=serialize_objects
+ network_extract__console=console/network-extract.console
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ newline
+ [[ -n {
  "vendor": "cisco",
+ local count=1
  "model": "",
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
  "domain": "",
  "version": "",
+ (( i = 0 ))
  "domain": "",
  "hostname": ""
+ (( i < count ))
}
+ echo

+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
object-group network Fortress-Wireless
+ (( i++ ))
 description Secure wireless access layer
 network-object host 172.18.1.20
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
 network-object host 192.168.1.10 ]]
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "hostname": "fg-campus-core"
}
+ echo -en '{
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
  "vendor": "cisco",

+ case "${target_file}" in
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "",
+ cat reports/10.0.2.3/misc/.objects/fw1.list
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ touch console/network-extract.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ newline
+ newline
+ local count=1
+ alias parse-cisco=main
+ (( i = 0 ))
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ return 0
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Hb7DxD6kw ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7Hb7DxD6kw
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ newline
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ (( i = 0 ))
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))

+ newline
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ echo
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ local awk_bin=/usr/bin/awk
+ newline
+ [[ -n {
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ (( i++ ))
  "vendor": "fortinet",
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ (( i < count ))
+ cat -n
+ local count=1
  "model": "FortiGate-200F",
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ local count=1

+ (( i = 0 ))
#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ echo -en '{
+ script_filename=network-extract.shell
++ IFS=,
  "vendor": "fortinet",
+ script_filename=network-extract
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ export network_extract__console=console/network-extract.console
  "hostname": "fg-campus-core"
}
+ network_extract__console=console/network-extract.console

++ echo 192.168.100.100
#hostname="fg-campus-core"
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ touch console/network-extract.console
+ serialize_objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ search_pattern=192.0.2.50
+ [[ platform =~ ^(console|o)$ ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ return 0
+ [[ true == true ]]
+ newline
+ [[ platform =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console ]]
+ local count=1
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console ]]
+ [[ false == true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console
+ for xitem in "${@}"
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ echo
+ [[ 7 -eq 0 ]]
+ (( i++ ))
+ (( i < count ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lmkmsoq9xb/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ return 0
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ extract =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ oIFS=' 	
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ extract =~ ^(logger|l)$ ]]
'
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ local count=2
+ serialize_objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console
+ (( i++ ))
++ which awk
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ case "${target_file}" in
+ [[ extract =~ ^(search|s)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ echo
+ local 'indent=            '
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ IFS=,
++ echo 10.10.10.10
+ return 0
+ [[ true == true ]]
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=1
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ case "${target_file}" in
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ declare -a execute__netwowrk_extract
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ script_filename=network-extract.shell
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
+ [[ true == true ]]
+ newline 2
 network-object host 192.168.100.100
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
 network-object host 10.10.10.10 ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
++ which awk
+ local count=2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
+ (( i < count ))
+ echo
++ echo -e --platform=fortinet
+ (( i++ ))
+ [[ 7 -eq 0 ]]
+ (( i < count ))
+ echo
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lmkmsoq9xb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--branch-isr-02.cfg.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console --export --verbose
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ local parent_dir=reports/10.0.2.3/misc
+ result=0
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ oIFS=' 	
'
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ for xitem in "${@}"
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ IFS==
+ newline
+ read -r key value
+ local search_pattern
+ [[ 0 -ne 0 ]]
+ local count=1
+ (( i = 0 ))
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EmHu9oQKF7/network-extract--switch1.conf.console
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

+ local parent_dir=reports/192.168.0.100/cisco
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ -n {
  "vendor": "cisco",
  "hostname": "dmz-fw2-backup"
  "model": "ASA",
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ case "${target_platform}" in
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
}

domain-name global.dmz.example.net
ASA Version 9.12(4)

hostname dmz-fw2-backup
domain-name global.dmz.example.net
interface GigabitEthernet0/0

 nameif guest
object network Sentinel-NAT
 ip address 10.10.10.10 255.255.255.0
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
 host 203.0.113.25
 description Guest access interface
                    in_json_header = 0;

                    blk = "";
object network Shield-WiFi-Alias
                  }
 host 10.10.10.10
                  /^[[:space:]]*$/ { next }
 description Guest NAT
                  /^{$/ { in_json_header = 1; next }

                  /^}$/ {
object-group network Sector-Wireless
++ sed -e '1s|^\(-\)\{1,\}||'
                    if (in_json_header == 1) {
 description Staff WiFi clients
                      in_json_header = 0;
 network-object host 192.168.100.100
                      next;
 network-object host 10.10.10.10'
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console ]]
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw1.cfg.console
+ local 'extracted_configuration={
  "vendor": "fortinet",
++ printf '%*s' 12 ''
++ basename reports/10.0.2.3/misc/fw3
 description Corporate NAT edge'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
+ result=0
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ [[ -n {
 next
  "vendor": "cisco",
end
  "model": "ASA",

  "version": "9.12(4)",
config firewall address
  "domain": "global.dmz.example.net",
 edit "Branch-Gateway"
+ local awk_bin=/usr/bin/awk
  "hostname": "dmz-fw2-backup"
}
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
 next
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'

end'
+ local 'indent=            '
ASA Version 9.12(4)
+ newline
+ [[ 7 -eq 0 ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ result=0
hostname dmz-fw2-backup
+ grep -F 192.0.2.50
+ local count=1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lmkmsoq9xb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console --export --verbose
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ [[ true == true ]]
+ [[ true == true ]]
+ oIFS=' 	
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console
domain-name global.dmz.example.net
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console ]]
'
+ [[ -n {
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console

object network Sentinel-NAT
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
  "vendor": "fortinet",
+ newline
 host 203.0.113.25
+ for xitem in "${@}"
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ IFS==
  "hostname": "fg-branch-vpn-01"
}
+ local count=1
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
 description Corporate NAT edge ]]
+ echo
+ case "${target_file}" in
+ [[ logger =~ ^(config|c)$ ]]
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ newline
+ read -r key value

+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
#hostname="fg-branch-vpn-01"
+ [[ logger =~ ^(console|o)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ [[ logger =~ ^(export|r)$ ]]
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ local count=1
end ]]
+ (( i = 0 ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ result=0
+ newline
++ cut -d/ -f2
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
+ read -r key value
+ serialize_objects
+ [[ search == \h\e\l\p ]]
+ local count=1
+ [[ search == \d\e\b\u\g ]]
+ exit 0
+ (( i = 0 ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UGGQ5fyEXs ]]
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UGGQ5fyEXs
+ (( i < count ))
+ echo
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ (( i++ ))
+ (( i < count ))
+ local search_pattern
+ result=0
+ [[ false == true ]]
+ exit 0
+ print '{
+ IFS==
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2x9ktevuKs ]]
+ [[ true == true ]]
  "vendor": "cisco",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2x9ktevuKs
+ read -r key value
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ newline 2
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ printf '%*s' 12 ''
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ local 'extracted_configuration={
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
  "vendor": "cisco",
  "model": "ASA",
}
  "version": "9.12(4)",

  "domain": "global.dmz.example.net",
ASA Version 9.12(4)
  "hostname": "dmz-fw2-backup"
hostname dmz-fw2-backup
}
domain-name global.dmz.example.net


ASA Version 9.12(4)
object network Sentinel-NAT
hostname dmz-fw2-backup
 host 203.0.113.25
domain-name global.dmz.example.net
+ local count=2
+ print '{
  "vendor": "fortinet",

 description Corporate NAT edge ]]
  "model": "FortiGate-60F",
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
  "version": "v7.2.5.F",
+ echo -en '{
  "domain": "",
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
  "hostname": "fg-branch-vpn-01"
  "vendor": "cisco",
interface GigabitEthernet0/2
+ (( i = 0 ))
+ local 'indent=            '
}
  "model": "ASA",
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",

#hostname="fg-branch-vpn-01"
  "hostname": "dmz-fw2-backup"
}
+ result=0

#model="FortiGate-60F"
+ exit 0
ASA Version 9.12(4)
#config-version=FGT_60F-v7.2.5.F-build1517-230421
hostname dmz-fw2-backup
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UFcm5lko3X ]]

domain-name global.dmz.example.net

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UFcm5lko3X
config system interface
 edit "internal"
object network Sentinel-NAT
  set ip 192.168.2.12 255.255.255.0
 host 203.0.113.25
  set alias "User LAN"
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
 nameif outside
 description Corporate NAT edge'
 next
 ip address 198.51.100.75 255.255.255.0
end
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'

config firewall address
 edit "Branch-Gateway"
+ (( i < count ))
+ result=0
+ echo
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ true == true ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
 description Outbound Internet NAT interface'
+ result=0
+ serialize_objects
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ echo -en '{
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ 0 -ne 0 ]]
  "hostname": "dmz-fw2-backup"
+ (( i < count ))
  "vendor": "fortinet",
}
  "model": "FortiGate-60F",
++ sed -e '1s|^\(-\)\{1,\}||'
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'

+ [[ true == true ]]
ASA Version 9.12(4)
+ newline
+ echo
hostname dmz-fw2-backup
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ local count=1
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
domain-name global.dmz.example.net
+ [[ search =~ ^(config|c)$ ]]
+ local count=1

+ [[ search =~ ^(console|o)$ ]]
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ [[ search =~ ^(export|r)$ ]]
+ echo
++ echo -e --export
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ echo reports/10.0.2.3/misc/fw3.cfg
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ result=0
+ for xitem in "${@}"
+ exit 0
+ (( i++ ))
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UTaqfJoVVb ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ IFS==
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UTaqfJoVVb
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ read -r key value
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ cut -d/ -f2
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ search_pattern=10.10.10.10
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ echo
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
++ sed -e '1s|^\(-\)\{1,\}||'
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
domain-name global.dmz.example.net
++ cut -d/ -f2

interface GigabitEthernet0/2
 nameif outside
++ sed -e '1s|^\(-\)\{1,\}||'
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local parent_dir=reports/192.168.1.10/misc
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ (( i < count ))
+ echo
+ [[ search =~ ^(config|c)$ ]]
+ newline 2
+ [[ search =~ ^(console|o)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ [[ search =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ [[ search =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ search =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list
+ cat -n
+ newline 2
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ local count=2
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
++ basename reports/192.168.1.10/misc/fw1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ (( i++ ))
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i < count ))
+ (( i < count ))
+ local parent_dir=reports/192.168.1.11/fortinet
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
+ echo
+ search_pattern=10.0.2.3
  "model": "ASA",
+ (( i++ ))
+ (( i < count ))
+ mkdir -p reports/10.0.2.3/misc/.objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ [[ export =~ ^(console|o)$ ]]

ASA Version 9.12(4)
+ [[ true == true ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ [[ export =~ ^(export|r)$ ]]
object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
object-group network Sector-Wireless
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local export_objects=true
 description Staff WiFi clients
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
 network-object host 192.168.100.100
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
 network-object host 10.10.10.10'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ result=0
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n {
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
  "vendor": "cisco",
+ echo
+ search_pattern=192.168.0.100
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
  "model": "ASA",
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ newline
+ [[ config == \h\e\l\p ]]
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ config == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console ]]
+ echo
++ export actions_logfile=console/run.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console
+ (( i++ ))
++ actions_logfile=console/run.console
+ [[ extract =~ ^(export|r)$ ]]
+ (( i < count ))
++ touch console/run.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ newline
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local first_search_entry=192.168.100.100
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=1
+ local last_search_entry=192.168.100.100
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ result=0
+ [[ extract == \h\e\l\p ]]
+ [[ 0 -ne 0 ]]
+ [[ extract == \d\e\b\u\g ]]
+ result=0
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ 0 -ne 0 ]]
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]'
+ [[ true == true ]]
+ IFS==
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local search_pattern
+ (( i < count ))
+ case "${target_file}" in
+ search_pattern=192.168.1.11
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ] ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ local script_filename=cisco-configs.awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-configs--ips.list ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ newline
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ exit 0
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2bRmvrTMxU ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2bRmvrTMxU
+ [[ verbose =~ ^(platform|p)$ ]]
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS=' 	
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
'
+ (( i < count ))
+ local count=1
+ output_dir=reports/198.51.100.75/cisco
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local count=1
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -z '' ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ echo
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ return 0
+ (( i++ ))
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ (( i < count ))
+ ((  count == 0  ))
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console
+ debug=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ case "${target_file}" in
+ dry_run=false
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ [[ -z true ]]
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console
+ [[ -z '' ]]
+ output_dir=reports/10.0.0.1/misc
+ newline
+ export console_output=false
+ local count=1
+ newline
+ console_output=false
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ -z true ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ cat -n
+ [[ -z '' ]]
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ script_helper=false
+ [[ false == true ]]
+ echo
+ local search_pattern
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ [[ 7 -eq 0 ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]]
+ [[ ! -d reports/10.0.0.1/misc ]]
+ search_terms=()
+ local 'prompt_message=Enter configuration file to be parsed: '
+ declare -a search_terms
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ -z fortinet ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]]
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ [[ cfg == \c\f\g ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --platform=fortinet
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
++ echo reports/172.18.1.20/misc/fw1.cfg
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ grep -F 10.10.10.10
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ sed '/^[[:space:]]*$/d'
++ dirname -- ./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
++ export targets_logfile=.cache/targets.jobs
+ (( i < count ))
++ targets_logfile=.cache/targets.jobs
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ return 0
+ cat -n
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
+ [[ true == true ]]
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.v2ctwgvrv2/network-configs--ips.list =~ ^-*(h|help)$ ]]
 network-object host 10.10.10.10'
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console --export --verbose
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console
+ oIFS=' 	
'
+ result=0
+ cat -n
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "cisco",
+ IFS==
+ read -r key value
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

+ [[ true == true ]]
interface Vlan1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--access-sw1-west.cfg.console

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ case "${target_platform}" in
++ tr -d '\r'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ cat -n
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
+ [[ platform =~ ^(config|c)$ ]]
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ search_pattern=172.18.1.20
+ [[ platform =~ ^(console|o)$ ]]
                    next;
+ mkdir -p reports/172.18.1.20/misc/.objects
                  }
                  {
                    blk = blk divisor " " $0;
+ [[ platform =~ ^(export|r)$ ]]
                  }
+ [[ platform =~ ^(extract|x)$ ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ platform =~ ^(logger|l)$ ]]
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ IFS=,
+ IFS==
+ read -r key value
++ echo 172.16.1.6
++ IFS=,
++ echo 203.0.113.25
++ grep -v '^\s*$'
++ command -v -- ./scripts/network-extract.shell
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ result=0
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
object-group network Floor-Networks
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
 description End-user and service devices
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
++ grep -v '^#'
+ newline
+ [[ -n {
+ declare -a execute__netwowrk_extract
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ cut -d/ -f2
 network-object host 10.10.10.10 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo -en '{
+ (( i++ ))
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ (( i < count ))
  "domain": "",
  "hostname": "campus-sw-access01"
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
}

version 12.2
hostname campus-sw-access01
+ declare -a execute__netwowrk_extract

+++ base64
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ grep -F 192.168.1.11
+ newline
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ echo
++++ basename ./scripts/devops-resources.shell
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ return 0
++ which awk
+++ tr -dc a-zA-Z0-9
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ return 0
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console ]]
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ case "${target_file}" in
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ which awk
+ cat -n
+ [[ true == true ]]
+ local first_search_entry=192.168.0.1
+ [[ true == true ]]
+ local last_search_entry=192.168.0.1
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+++ echo -n devops-resources.shell
+ [[ cfg == \c\f\g ]]
+ result=0
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ exit 0
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UBn2fFTCCt ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UBn2fFTCCt
+ sed '/^[[:space:]]*$/d'
+ newline 2
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-configs--ips.list ]'
+ local count=2
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oVszkJQmtl ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console
+ local count=1
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oVszkJQmtl
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ source ./scripts/devops-helpers.shell
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--fg-branch-vpn-01.cfg.console
+ case "${target_file}" in
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))
++ [[ -n '' ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ true == true ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local awk_bin=/usr/bin/awk
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ [[ 5 -lt 4 ]]
+ newline
++ IFS=,
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ search_pattern=192.168.2.12
+ echo
++ echo 198.51.100.75
+ [[ logger =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ (( i++ ))
+ newline
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ case "${target_platform}" in
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ logger =~ ^(logger|l)$ ]]
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i = 0 ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ logger =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(search|s)$ ]]
                  /^[[:space:]]*$/ { next }
++ alias network-configs--helper=network_configs__helper
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ [[ logger == \h\e\l\p ]]
                    }
+ [[ logger == \d\e\b\u\g ]]
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ logger == \d\r\y\-\r\u\n ]]
                    next;
+ [[ logger == \v\e\r\b\o\s\e ]]
                  }
+ for xitem in "${@}"
                  {
                    blk = blk divisor " " $0;
                  }
+ IFS==
                  END {
+ read -r key value
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/misc/fw1.cfg
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ alias serialize-object=serialize_objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console ]]
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ grep -F 172.18.1.20
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console
+ echo
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console ]]
+ (( i++ ))
+ local 'indent=            '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console ]]
+ alias parse-cisco=main
++ which awk
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list
+ mkdir -p logs
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BuwRdhQOgH/network-extract--fw3.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ output_dir=reports/192.168.100.100/fortinet
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ case "${target_file}" in
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console ]]
+ message '                .cache/resources/misc/switch3.conf'
+ output_dir=reports/192.168.1.10/misc
+ case "${target_file}" in
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch1.conf.console
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ extract == \h\e\l\p ]]
+ echo -e '                .cache/resources/misc/switch3.conf'
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ newline
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ local count=1
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ result=0
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ exit 0
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mezupxNwBR ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mezupxNwBR
+ (( i++ ))
+ serialize_objects
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ cat -n
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--access-sw1-west.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ case "${target_platform}" in
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ newline
+ local count=1
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i = 0 ))
                  BEGIN {
                    in_json_header = 0;
+ (( i < count ))
                    blk = "";
                  }
+ echo
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ (( i++ ))
                  /^}$/ {
+ (( i < count ))
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ local SCRIPT_DIR=./scripts
++ printf '%*s' 12 ''
++ dirname -- ./scripts/network-extract.shell
+ local 'indent=            '
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ touch console/network-extract.console
+ [[ cfg == \c\f\g ]]
+ newline
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local export_objects=true
+ echo
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ exit 0
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Cn7ccsa14o ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Cn7ccsa14o
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ local parent_dir=reports/192.168.0.1/cisco
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ exit 0
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ifMyi2MVf6 ]]
+ return 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ifMyi2MVf6
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vcESdbl2Qo ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vcESdbl2Qo
+ cat -n
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'extracted_configuration={
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console
+ local script_filename=cisco-configs.awk
  "vendor": "cisco",
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
  "model": "ASA",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
  "hostname": "perimeter-fw1"
}

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console
+ local script_filename=fortinet-configs.awk
ASA Version 9.14(3)
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
+ case "${target_file}" in
+ local SCRIPT_PATH=./scripts/network-extract.shell

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console
interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ local script_filepath=./scripts/extract/fortinet-configs.awk
object network NAT-Edge
++ basename reports/192.168.0.1/cisco/campus-sw-access01
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ [[ true == true ]]
++ echo -e --verbose
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ grep -F 192.168.2.12
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n {
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
  "model": "ASA",
+ for xitem in "${@}"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console
+ IFS==
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local 'extracted_configuration={
+ [[ search == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ [[ search == \v\e\r\b\o\s\e ]]
  "model": "",
+ for xitem in "${@}"
  "version": "",
  "domain": "",
+ IFS==
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console ]]
  "hostname": ""

+ read -r key value
}
ASA Version 9.14(3)

interface Vlan2
hostname perimeter-fw1
+ case "${target_file}" in
 ip address 172.16.1.6 255.255.255.0'
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--fg-campus-core.cfg.console
 security-level 0
+ result=0
 ip address 203.0.113.25 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
 description External Internet-facing Interface

  "version": "",
object network NAT-Edge
  "domain": "",
  "hostname": ""
 host 203.0.113.25
}
 description Internet-bound IP NAT


object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ read -r key value
+ sed '/^[[:space:]]*$/d'
++ which awk
++ which awk
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.b4a1ts3viv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ return 0
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console --export --verbose
+ output_dir=reports/192.168.0.1/fortinet
+ [[ true == true ]]
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console
+ local search_pattern
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ print '{
  "vendor": "cisco",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ print '{
  "vendor": "cisco",
hostname perimeter-fw1
  "model": "",
domain-name edge.dc.example.com
  "version": "",

  "domain": "",
interface GigabitEthernet0/0
  "hostname": ""
 nameif outside
}
 security-level 0

 ip address 203.0.113.25 255.255.255.0
interface Vlan2
 description External Internet-facing Interface
 ip address 172.16.1.6 255.255.255.0'

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ [[ -n {
+ echo -en '{
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "model": "ASA",
  "version": "9.14(3)",
  "version": "",
  "domain": "edge.dc.example.com",
  "domain": "",
  "hostname": "perimeter-fw1"
  "hostname": ""
}
}


ASA Version 9.14(3)
interface Vlan2
hostname perimeter-fw1
 ip address 172.16.1.6 255.255.255.0'
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
+ IFS=' 	
  "vendor": "cisco",
'
  "model": "",
+ [[ true == true ]]
  "version": "16.9",
+ [[ -z '' ]]
  "domain": "",
+ debug=false
  "hostname": "branch-isr-02"
}
+ [[ -z '' ]]

+ dry_run=false
version 16.9
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console
hostname branch-isr-02
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console ]]

+ [[ -z true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ -z '' ]]
object network Hydra-Link
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console ]]
 host 198.51.100.75
+ export console_output=false
+ [[ true == true ]]
 description Branch NAT egress
+ case "${target_file}" in
+ console_output=false

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--branch-isr-02.cfg.console
object-group network Hydra-Edge
 description Remote site uplink
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.168.2.12
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
 network-object host 198.51.100.75'
+ script_helper=false
+ [[ false == true ]]
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "version": "9.12(4)",
+ local SCRIPT_DIR=./scripts
  "domain": "global.dmz.example.net",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]]
+ local count=1
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ (( i = 0 ))
+ newline
+ search_terms=()
+ result=0
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
  "hostname": "dmz-fw2-backup"
+ declare -a search_terms
+ [[ -n {
  "vendor": "cisco",
+ [[ extract =~ ^(logger|l)$ ]]
  "model": "",
+ local script_filename=cisco-configs.awk
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
  "version": "16.9",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]]
  "domain": "",
  "hostname": "branch-isr-02"
}
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list != *,* ]]

+ mapfile -t search_terms
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
version 16.9
+ local script_filepath=./scripts/extract/cisco-configs.awk
hostname branch-isr-02
+ newline

object network Hydra-Link
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS==
}
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ local 'extracted_configuration={
+ local count=1

+ local count=1
+ read -r key value
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ extract =~ ^(platform|p)$ ]]
 host 198.51.100.75
+ (( i < count ))
 description Branch NAT egress

++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
  "vendor": "fortinet",
+ [[ extract =~ ^(search|s)$ ]]
  "model": "FortiGate-200F",
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 192.168.100.100
++ IFS=,
++ echo 10.0.0.1
++ cut -d/ -f2
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
 host 198.51.100.75
 description Branch NAT egress
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ declare -a execute__netwowrk_extract
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ newline 2
 network-object host 198.51.100.75 ]]
++ echo -e --platform=cisco
+ echo -en '{
  "vendor": "cisco",
++ tr -d '\r'
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ [[ true == true ]]
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ local count=2
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FE4WvgQlqv/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ (( i = 0 ))
++ grep -v '^\s*$'
+ (( i < count ))
+ echo
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ echo
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i++ ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i < count ))
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ result=0
+ newline
+ exit 0
ASA Version 9.12(4)
+ local count=1
+ [[ config =~ ^(config|c)$ ]]
+ (( i = 0 ))
++ echo -e --platform=fortinet
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PLXVPJe7C7 ]]
+ (( i < count ))
hostname dmz-fw2-backup
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ echo
+ result=0
+ local target_config=.cache/resources/misc/fw1.cfg
+ (( i = 0 ))
+ [[ search =~ ^(config|c)$ ]]
  "version": "",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PLXVPJe7C7
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ [[ search =~ ^(console|o)$ ]]
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ cat -n
++ grep -v '^#'
+ search_pattern=192.168.0.1
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ (( i = 0 ))
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ echo
+ [[ search =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ cat -n reports/172.16.1.6/misc/switch3.conf
+ [[ search == \d\e\b\u\g ]]
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ exit 0
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CKpewm93vU ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CKpewm93vU
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local search_pattern
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
+ (( i++ ))
  "domain": "",
  "hostname": "fg-campus-core"
 description Inside LAN segment
}
++ which awk
++ which awk
+ case "${target_platform}" in
++ echo -e --verbose
++ basename reports/192.168.1.11/fortinet/fg-campus-core
++ echo -e --export
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ echo
+ (( i++ ))
++ echo 192.168.1.10
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AHCBicXtuS ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
++ printf '%*s' 12 ''
+ local count=1
+ ((  count == 0  ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AHCBicXtuS
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'indent=            '
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ local awk_bin=/usr/bin/awk
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ (( i < count ))
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ true == true ]]
+ [[ -z fortinet ]]
+ newline
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ (( i++ ))
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ platform =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
++ IFS=,
++ echo 192.168.0.1
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ case "${target_platform}" in
+ (( i++ ))
+ (( i < count ))
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i = 0 ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ false == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ declare -a execute__netwowrk_extract
                  BEGIN {
                    in_json_header = 0;
+ [[ true == true ]]
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
                    blk = "";
                  }
++ printf '%*s' 12 ''
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
                  /^[[:space:]]*$/ { next }
+ echo
                  /^{$/ { in_json_header = 1; next }
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
                  /^}$/ {
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
                    if (in_json_header == 1) {
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ (( i++ ))
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
                      in_json_header = 0;
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
                      next;
+ (( i < count ))
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
                    }
+ newline
+ local target_platform=cisco
                  }
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local count=1
                  (in_json_header == 1) { next }
+ (( i = 0 ))
+ [[ false == true ]]
+ [[ platform == \h\e\l\p ]]
+ serialize_objects
                  /^[^[:space:]]/ {
+ (( i < count ))
+ (( i < count ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ platform == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ which awk
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ echo
                    blk = $0;
+ for xitem in "${@}"
                    next;
                  }
                  {
+ (( i++ ))
                    blk = blk divisor " " $0;
+ [[ export =~ ^(config|c)$ ]]
+ local 'indent=            '
                  }
                  END {
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(platform|p)$ ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ IFS==

+ read -r key value
+ local target_platform=fortinet
+ (( i < count ))
+ serialize_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ grep -F 192.168.0.1
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \h\e\l\p ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ message '                .cache/resources/misc/switch3.conf'

+ IFS==
object network Titan-WLAN-Host
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ read -r key value
+ echo -e '                .cache/resources/misc/switch3.conf'
+ newline
+ local count=1
++ which awk
+ (( i = 0 ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
++ dirname reports/172.16.1.6/misc/switch3.conf
+ sed '/^[[:space:]]*$/d'
+ [[ false == true ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(search|s)$ ]]
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ serialize_objects
+ echo
+ [[ config == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ (( i++ ))
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
#hostname="fg-campus-core"
#model="FortiGate-200F"

+ IFS==
config system interface
+ read -r key value
 edit "core"
++ echo reports/192.168.1.10/misc/fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
  set ip 10.10.10.10 255.255.255.0
+ [[ verbose =~ ^(console|o)$ ]]
 host 192.168.100.100
 description Backup inside NAT IP
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]

+ return 0
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ true == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ grep -F 10.0.2.3
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(config|c)$ ]]
++ cut -d/ -f2
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ extract =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ extract == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console ]]
  set alias "Campus Core Transit"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console ]]
+ for xitem in "${@}"
+ case "${target_file}" in
+ IFS==
+ read -r key value
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--branch-isr-02.cfg.console
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console
+ case "${target_platform}" in
object-group network Sector-Wireless
+ sed '/^[[:space:]]*$/d'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
 description Staff WiFi clients
 network-object host 192.168.100.100
+ [[ verbose =~ ^(logger|l)$ ]]
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console
++ printf '%*s' 12 ''
+ local awk_bin=/usr/bin/awk
+ local parent_dir=reports/172.16.1.6/misc
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ local parent_dir=reports/203.0.113.25/cisco
+ local 'indent=            '
+ [[ true == true ]]
 network-object host 10.10.10.10 ]]
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(search|s)$ ]]
end
+ newline

config firewall address
+ result=0
+ local count=1
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
 edit "Shield-WiFi"
+ [[ 0 -ne 0 ]]
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ export == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ serialize_objects
+ (( i < count ))
  set subnet 10.10.10.10 255.255.255.255
+ echo
  set comment "Wireless AP Gateway"
 next
+ [[ export == \d\e\b\u\g ]]
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ export == \d\r\y\-\r\u\n ]]
end'
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ result=0
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
  "hostname": "fg-campus-core"
}
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'

+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ cfg == \c\f\g ]]
#hostname="fg-campus-core"
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local count=1
#model="FortiGate-200F"
+ IFS==
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
config system interface
+ IFS==
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose == \h\e\l\p ]]
 edit "core"
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ echo -e --platform=cisco
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ search_pattern=192.168.1.10
+ local parent_dir=reports/198.51.100.75/cisco
++ basename reports/172.16.1.6/misc/switch3
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
  set ip 10.10.10.10 255.255.255.0
+ newline
  set alias "Campus Core Transit"
 next
+ local count=1
end
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]

+ echo
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ local 'indent=            '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ newline
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local 'extracted_configuration={
+ local count=1
  "vendor": "fortinet",
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
  "model": "FortiGate-200F",
  "version": "",
+ (( i = 0 ))
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
  "domain": "",
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ (( i < count ))
  "hostname": "fg-campus-core"
}

+ echo
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
#hostname="fg-campus-core"
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
#model="FortiGate-200F"
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'

config system interface
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
 edit "wifi"
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
  set ip 192.168.100.100 255.255.255.0
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
  set alias "Wireless VLAN"
 next
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
end

+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
config firewall address
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ print '{
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "hostname": "dmz-fw2-backup"
}
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
 edit "Titan-WLAN-Host"
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n {
end

  "vendor": "cisco",
config firewall address
  "model": "ASA",
 edit "Wanda-Field"
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ result=0
domain-name global.dmz.example.net

+ exit 0
  set subnet 192.168.100.100 255.255.255.255
interface GigabitEthernet0/1
 nameif inside
  set comment "Wanda’s chaos relay"
 next
 ip address 192.168.100.100 255.255.255.0
end'
 description Inside LAN segment

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zkng1Ks4qP ]]
object network Titan-WLAN-Host
+ result=0
+ newline
 host 192.168.100.100
 description Backup inside NAT IP
+ local count=1

+ (( i = 0 ))
object-group network Sector-Wireless
+ (( i < count ))
 description Staff WiFi clients
+ echo
+ cat -n
 network-object host 192.168.100.100
+ [[ -n {
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Zkng1Ks4qP
 network-object host 10.10.10.10 ]]
+ (( i++ ))
  "vendor": "fortinet",
+ local 'extracted_configuration={
+ (( i < count ))
  "model": "FortiGate-200F",
  "vendor": "cisco",
  "version": "",
  "model": "",
  "domain": "",
  "version": "",
  "hostname": "fg-campus-core"
}
+ echo -en '{

  "domain": "",
#hostname="fg-campus-core"
  "hostname": ""
  "vendor": "cisco",
#model="FortiGate-200F"
  "model": "ASA",
}
  "version": "9.12(4)",

  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"

}
config system interface

 edit "wifi"
interface Vlan1
 ip address 10.0.0.1 255.255.255.0
ASA Version 9.12(4)

hostname dmz-fw2-backup
object-group network Spider-Net
 description Web access switches
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
domain-name global.dmz.example.net
 network-object host 10.0.0.1

 network-object 192.168.12.0 255.255.255.0'
  set ip 192.168.100.100 255.255.255.0
interface GigabitEthernet0/1
  set alias "Wireless VLAN"
+ [[ logger =~ ^(config|c)$ ]]
 nameif inside
+ result=0
 ip address 192.168.100.100 255.255.255.0
 next
 description Inside LAN segment
config firewall address
end
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n {


  "vendor": "cisco",
+ [[ logger =~ ^(export|r)$ ]]
object network Titan-WLAN-Host
+ [[ logger =~ ^(config|c)$ ]]
 edit "Shield-WiFi"
config firewall address
+ mkdir -p reports/192.168.1.10/misc/.objects
+ IFS=' 	
 host 192.168.100.100
  "model": "",
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
 edit "Titan-WLAN-Host"
  "version": "",
  set subnet 192.168.100.100 255.255.255.255
  "domain": "",
+ [[ logger =~ ^(logger|l)$ ]]
  "hostname": ""
  set comment "Guest WiFi node"
 description Backup inside NAT IP
 next
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console
end
+ [[ logger =~ ^(export|r)$ ]]

}
+ [[ extract =~ ^(config|c)$ ]]
object-group network Sector-Wireless
+ [[ logger =~ ^(platform|p)$ ]]


 description Staff WiFi clients
config firewall address
 network-object host 192.168.100.100
 edit "Wanda-Field"
 network-object host 10.10.10.10'
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ grep -F 192.168.0.100
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ extract =~ ^(platform|p)$ ]]
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local search_pattern
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ IFS==
+ read -r key value
+ local search_pattern
interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console
  set subnet 10.10.10.10 255.255.255.255
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
  set comment "Wireless AP Gateway"
'
 next
+ [[ logger == \h\e\l\p ]]
end ]]
+ newline 2
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
+ output_dir=reports/192.168.2.12/fortinet
+ [[ platform =~ ^(console|o)$ ]]
+ local count=1
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --verbose
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ print '{
  "vendor": "fortinet",
+ local search_pattern
  "model": "FortiGate-200F",
+ [[ platform =~ ^(logger|l)$ ]]
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ [[ platform =~ ^(platform|p)$ ]]

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ local target_platform=cisco
config system interface
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
 edit "wifi"
+ export console_output=false
+ [[ platform == \h\e\l\p ]]
  set ip 192.168.100.100 255.255.255.0
+ [[ platform == \d\e\b\u\g ]]
  set alias "Wireless VLAN"
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
 next
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
end
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==

+ read -r key value
config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ for xitem in "${@}"
+ IFS==
+ read -r key value
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
  "version": "",
  "domain": "",

config system interface
  "hostname": ""
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
}

  set alias "Wireless VLAN"
interface Vlan1
 next
 ip address 10.0.0.1 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'
end


object-group network Spider-Net
config firewall address
 description Web access switches
 edit "Titan-WLAN-Host"
 network-object host 10.0.0.1
  set subnet 192.168.100.100 255.255.255.255
 network-object 192.168.12.0 255.255.255.0 ]]
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ echo -en '{
 next
  "vendor": "cisco",
end ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
+ echo -en '{
  "vendor": "fortinet",
 network-object host 10.0.0.1
  "model": "FortiGate-200F",
 network-object 192.168.12.0 255.255.255.0'
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
+ sed '1{/^[[:space:]]*$/d;}'
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
++ echo reports/172.16.1.6/misc/switch3.conf
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ command -v -- ./scripts/network-extract.shell
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
++ echo -e --platform=cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ local 'extracted_configuration={
+ [[ true == true ]]
+ local parent_dir=reports/203.0.113.25/cisco
  "vendor": "cisco",
+ local count=1
+ (( i = 0 ))
  "model": "",
  "version": "",
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ print '{
  "domain": "",
  "vendor": "fortinet",
  "model": "FortiGate-200F",
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --export
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
  "hostname": ""
}
 next

end ]]
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ result=0
  "version": "",
  "domain": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console
+ [[ -n {
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console ]]
  "hostname": "fg-campus-core"
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console
  "vendor": "cisco",
++ cut -d/ -f2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console ]]
  "model": "",
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console
}
++ echo -e --export
  "version": "",
+ newline 2

  "domain": "",
  "hostname": ""
}
+ [[ verbose =~ ^(config|c)$ ]]

+ (( i++ ))
object-group network Wakanda-Core
#hostname="fg-campus-core"
+ case "${target_file}" in
 description National Core Routing Zone
+ [[ verbose =~ ^(console|o)$ ]]
 network-object host 192.168.1.10
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
 next
end

config firewall address
 edit "Shield-WiFi"
+ [[ verbose =~ ^(export|r)$ ]]
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
+ [[ verbose =~ ^(extract|x)$ ]]
end'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
+ [[ verbose == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local verbose=true
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ newline 2
+ IFS=' 	
  "domain": "",
'
  "hostname": "fg-branch-vpn-01"
+ local count=2
}

+ (( i = 0 ))
#hostname="fg-branch-vpn-01"
+ (( i < count ))
#model="FortiGate-60F"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JxHWwM5F07/network-extract--perimeter-fw1.cfg.console
+ local count=2
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo
+ newline 2
+ (( i = 0 ))
+ (( i < count ))

+ (( i < count ))
config firewall address
 edit "Guardians-Relay"
+ [[ -z '' ]]
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ debug=false
+ local count=2
 next
+ (( i = 0 ))
end'
+ (( i < count ))
+ echo
+ echo
+ search_pattern=172.16.1.6
+ result=0
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
+ (( i < count ))
+ echo
  "vendor": "fortinet",
+ echo
+ mkdir -p reports/172.16.1.6/misc/.objects
+ search_pattern=203.0.113.25
+ (( i++ ))
  "model": "FortiGate-60F",
+ (( i < count ))
  "version": "v7.2.5.F",
+ mkdir -p reports/203.0.113.25/cisco/.objects
  "domain": "",
+ case "${target_platform}" in
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
  "vendor": "cisco",
  "model": "",
  "hostname": "fg-branch-vpn-01"
}

  "version": "",
  "domain": "",
+ [[ true == true ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
  "hostname": ""
#hostname="fg-branch-vpn-01"
                  BEGIN {
}

                    in_json_header = 0;
                    blk = "";
#model="FortiGate-60F"
                  }
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                  /^[[:space:]]*$/ { next }

object-group network Wakanda-Core
                  /^{$/ { in_json_header = 1; next }
+ (( i++ ))
config firewall address
+ (( i < count ))
 description National Core Routing Zone
 edit "Guardians-Relay"
+ [[ platform =~ ^(config|c)$ ]]
                  /^}$/ {
++ tr -d '\r'
 network-object host 192.168.1.10
                    if (in_json_header == 1) {
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ true == true ]]
                      in_json_header = 0;
  set subnet 192.168.0.1 255.255.255.255
                      next;
                    }
 network-object host 10.0.2.3
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
                  }
+ [[ -z '' ]]
 network-object 10.0.0.0 255.255.255.0'
+ [[ platform =~ ^(export|r)$ ]]
                  (in_json_header == 1) { next }
  set comment "Backup uplink for Milano crew"
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
 next
end ]]
                  /^[^[:space:]]/ {
+ [[ platform =~ ^(extract|x)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n {
  "vendor": "cisco",
                  }
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
  "model": "",
  "version": "",
                ' reports/192.168.1.10/misc/fw1.cfg
  "domain": "",
  "hostname": ""
}
+ [[ platform =~ ^(logger|l)$ ]]

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ local SCRIPT_DIR=./scripts
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ true == true ]]
+ local script_filename=fortinet-configs.awk
+ local target_platform=cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--campus-sw-access01.cfg.console
+ newline
++ grep -v '^\s*$'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform == \h\e\l\p ]]
+ (( i++ ))
+ search_pattern=198.51.100.75
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ (( i < count ))
+ dry_run=false
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo
+ print '{
  "vendor": "fortinet",
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
  "model": "FortiGate-60F",
+ (( i < count ))
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ grep -v '^#'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ true == true ]]
}
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ result=0

+ case "${target_file}" in
#hostname="fg-branch-vpn-01"
+ [[ export =~ ^(config|c)$ ]]
+ cat reports/10.0.2.3/misc/.objects/fw3.list
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
+ [[ export =~ ^(console|o)$ ]]
  set subnet 192.168.0.1 255.255.255.255
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
  set comment "Backup uplink for Milano crew"
+ [[ -z true ]]
+ [[ export =~ ^(export|r)$ ]]
 next
+ [[ logger =~ ^(console|o)$ ]]
end ]]
+ [[ export =~ ^(console|o)$ ]]
+ local export_objects=true
++ which awk
+ [[ export =~ ^(extract|x)$ ]]
+ echo -en '{
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ [[ export =~ ^(platform|p)$ ]]
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
  "hostname": "fg-branch-vpn-01"
+ [[ export =~ ^(search|s)$ ]]
}
+ local search_pattern

+ [[ export == \h\e\l\p ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ export == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ 0 -ne 0 ]]
+ read -r key value
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ [[ true == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ newline 2
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ cat -n
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ (( i++ ))
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ newline 2
+ grep -F 192.168.1.10
+ local count=2
+ result=0
+ (( i = 0 ))
+ exit 0
+ (( i < count ))
+ echo
+ case "${target_platform}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.o1hwOCox8l ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.o1hwOCox8l
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/misc/switch3.conf
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ case "${target_platform}" in
+ (( i < count ))
+ echo
+ (( i++ ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i < count ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ grep -F 172.16.1.6
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ false == true ]]
+ [[ true == true ]]
++ echo -e --verbose
++ echo -e --verbose
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
++ IFS=,
+ newline 2
++ echo 192.168.2.12
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
++ echo -e --export
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ serialize_objects
+ local count=2
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ case "${target_platform}" in
+ (( i < count ))
+ echo
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ sed '/^[[:space:]]*$/d'
                  }
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
                  /^[[:space:]]*$/ { next }
+ (( i++ ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
+ local count=1
                    if (in_json_header == 1) {
+ (( i = 0 ))
+ echo
                      in_json_header = 0;
+ (( i < count ))
                      next;
                    }
                  }
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ grep -F 203.0.113.25
                  (in_json_header == 1) { next }
+ (( i++ ))
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
+ echo
                  }
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]]
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i++ ))
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]]
+ cat -n reports/192.168.1.10/misc/fw3.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list != *,* ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ local count=2
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ newline
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ local count=1
+ (( i < count ))
+ exit 0
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ echo
+ (( i = 0 ))
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local first_search_entry=192.168.2.12
+ (( i++ ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mbBEddyD0Y ]]
+ echo
+ serialize_objects
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mbBEddyD0Y
+ (( i++ ))
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ grep -F 198.51.100.75
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ sed '/^[[:space:]]*$/d'
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
++ which awk
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console
+ mapfile -t search_terms
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(search|s)$ ]]
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ [[ logger == \h\e\l\p ]]
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ cut -d/ -f2
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ local export_objects=true
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ newline
+ local count=1
+ [[ export =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo
++ dirname reports/10.0.0.1/misc/switch3.conf
+ local parent_dir=reports/192.168.100.100/fortinet
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local last_search_entry=192.168.2.12
+ local verbose=true
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ local verbose=true
+ (( i < count ))
'
+ IFS=' 	
'
+ [[ -z '' ]]
+ result=0
+ debug=false
+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
+ [[ 0 -ne 0 ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ dry_run=false
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -z true ]]
+ debug=false
+ [[ -z '' ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -z '' ]]
+ (( i++ ))
+ dry_run=false
+ export console_output=false
+ [[ -z true ]]
+ console_output=false
+ newline
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console ]]
+ return 0
+ export console_output=false
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ -z '' ]]
+ local count=1
+ (( i < count ))
+ [[ true == true ]]
+ script_helper=false
+ console_output=false
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console ]]
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ echo
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
+ result=0
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]]
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ result=0
+ newline
+ [[ -z '' ]]
+ search_terms=()
+ [[ true == true ]]
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ script_helper=false
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console
+ [[ false == true ]]
+ declare -a search_terms
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ] ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ false == true ]]
+ local count=1
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ newline
+ local target_config=.cache/resources/misc/fw1.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console ]]
+ local search_pattern
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ config =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list != *,* ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ local count=1
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ case "${target_file}" in
+ (( i = 0 ))
+ newline
+ (( i = 0 ))
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console
+ local count=1
+ search_terms=()
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-configs--ips.list ]'
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ (( i < count ))
+ serialize_objects
+ declare -a search_terms
+ (( i = 0 ))
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ local count=2
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i++ ))
+ case "${target_file}" in
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ cat -n
++ basename reports/192.168.100.100/fortinet/fg-campus-core
+ (( i < count ))
+ echo
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ mapfile -t search_terms
+ (( i = 0 ))
+ cat reports/172.16.1.6/misc/.objects/switch3.list
+ local count=1
+ serialize_objects
+ local target_config=.cache/resources/misc/fw3.cfg
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  count == 0  ))
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ (( i < count ))
+ local 'indent=            '
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ true == true ]]
+ (( i++ ))
+ search_pattern=203.0.113.25
++ echo -e --export
+ cat -n
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ (( i = 0 ))
+ newline
+ [[ false == true ]]
+ newline
+ [[ config =~ ^(console|o)$ ]]
+ local count=1
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ local count=1
+ (( i = 0 ))
+ echo
+ [[ true == true ]]
+ (( i < count ))
++ tr -d '\r'
+ (( i = 0 ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ IFS==
+ local parent_dir=reports/10.0.0.1/misc
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --verbose
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ (( i < count ))
++ grep -v '^\s*$'
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ newline
+ [[ true == true ]]
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ cat -n
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ tr -d '\r'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ basename reports/10.0.0.1/misc/switch3
+ cat -n
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ [[ export =~ ^(config|c)$ ]]
+ newline
++ grep -v '^#'
+ local count=1
+ (( i = 0 ))
++ grep -v '^#'
+ [[ export =~ ^(console|o)$ ]]
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ (( i < count ))
+ local search_pattern
+ local parent_dir=reports/192.168.0.1/fortinet
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ return 0
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local parent_dir=reports/192.168.1.10/misc
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console
+ local count=1
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ local verbose=true
+ echo
+ IFS=' 	
'
+ (( i++ ))
+ [[ -z '' ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ debug=false
+ echo
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ config =~ ^(platform|p)$ ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ newline
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ serialize_objects
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(export|r)$ ]]
+ serialize_objects
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ newline
+ [[ extract == \h\e\l\p ]]
+ local count=1
+ [[ extract == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ newline
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ for xitem in "${@}"
+ [[ false == true ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local first_search_entry=198.51.100.75
+ IFS==
+ dry_run=false
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ read -r key value
+ echo
+ local last_search_entry=198.51.100.75
+ (( i = 0 ))
+ echo
+ newline
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ newline
+ [[ -z true ]]
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ local count=1
+ (( i < count ))
+ newline
+ (( i++ ))
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ [[ false == true ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console ]]
+ [[ true == true ]]
+ export console_output=false
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console
+ echo
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ console_output=false
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console ]]
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ local search_pattern
+ [[ -z true ]]
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ case "${target_file}" in
+ return 0
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ serialize_objects
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console
++ basename reports/192.168.1.10/misc/fw3
+ cat -n
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xXxDjGpIuT/network-extract--fw3.cfg.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ] ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ serialize_objects
+ script_helper=false
+ [[ false == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ local first_search_entry=192.168.1.10
+ (( i < count ))
+ local last_search_entry=192.168.1.10
++ cut -d/ -f2
++ echo -e --verbose
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ local first_search_entry=10.10.10.10
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local count=1
+ echo
+ local last_search_entry=10.10.10.10
+ (( i = 0 ))
+ local count=1
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ local 'extracted_configuration={
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ return 0
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ (( i < count ))
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ echo
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ ((  count == 0  ))
+ (( i++ ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
++ cut -d/ -f2
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo -e --platform=fortinet
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local count=1
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local parent_dir=reports/192.168.2.12/fortinet
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ true == true ]]
+ search_pattern=192.168.1.11
+ mkdir -p reports/192.168.1.11/fortinet/.objects
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console ]]
+ [[ false == true ]]
+ local parent_dir=reports/192.168.100.100/cisco
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ serialize_objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ case "${target_file}" in
++ echo reports/10.0.0.1/misc/switch3.conf
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console ]]
++ grep -v '^\s*$'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ extract =~ ^(config|c)$ ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ cut -d/ -f2
++ grep -v '^#'
+ [[ extract =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EhedJcgRwQ/network-extract--campus-sw-access01.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local parent_dir=reports/10.10.10.10/fortinet
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ result=0
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ exit 0
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mSzEpiCzBc ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mSzEpiCzBc
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
+ grep -F 203.0.113.25
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
++ basename reports/10.10.10.10/fortinet/fg-campus-core
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local first_search_entry=198.51.100.75
+ [[ cfg == \c\f\g ]]
+ local last_search_entry=198.51.100.75
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
+ local parent_dir=reports/198.51.100.75/cisco
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-configs--ips.list ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ case "${target_platform}" in
++ echo -e --platform=cisco
+ (( i < count ))
++ echo -e --platform=cisco
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
+ sed '/^[[:space:]]*$/d'
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ local search_pattern
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console
+ local count=1
+ (( i = 0 ))
+ search_pattern=10.0.0.1
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console
+ (( i < count ))
  "vendor": "fortinet",
+ mkdir -p reports/10.0.0.1/misc/.objects
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ case "${target_file}" in
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ result=0
+ [[ verbose =~ ^(search|s)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw1.cfg.console
+ local search_pattern
+ case "${target_file}" in
+ exit 0
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ true == true ]]
++ dirname reports/192.168.2.12/misc/fw1.cfg
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
+ grep -F 192.168.1.11
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zz0u4cGVG6 ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zz0u4cGVG6
++ cut -d/ -f2
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ [[ -z fortinet ]]
+ [[ verbose == \h\e\l\p ]]
+ echo
  "model": "FortiGate-200F",
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console
  "version": "",
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ platform =~ ^(extract|x)$ ]]
+ local search_pattern
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ result=0
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ conf == \c\o\n\f ]]
+ [[ logger =~ ^(export|r)$ ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ local target_platform=cisco
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ output_dir=reports/192.168.2.12/misc
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ ! -d reports/192.168.2.12/misc ]]
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ logger == \h\e\l\p ]]
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ logger == \d\e\b\u\g ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ for xitem in "${@}"
++ cut -d/ -f2
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ local verbose=true
+ (( i++ ))
+ IFS=' 	
+ (( i < count ))
+ return 0
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ output_dir=reports/198.51.100.75/fortinet
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ [[ -z true ]]
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console
+ (( i = 0 ))
+ script_helper=false
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console ]]
+ echo
+ [[ false == true ]]
+ (( i++ ))
  "domain": "",
+ (( i < count ))
+ search_pattern=10.10.10.10
+ result=0
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ exit 0
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7eHyPJ0KTu ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7eHyPJ0KTu
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ newline
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
++ dirname reports/192.168.1.10/misc/switch1.conf
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ search_terms=()
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ mapfile -t search_terms
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bX4DDTDobG/network-extract--switch3.conf.console
  "hostname": "fg-campus-core"
}
++ command -v -- ./scripts/network-extract.shell

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
 next
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console ]]
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ case "${target_file}" in
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
end'
+ local search_pattern
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
++ command -v -- ./scripts/network-extract.shell
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ cut -d/ -f2
  "version": "",
  "domain": "",
++ echo reports/192.168.1.10/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console
+ case "${target_platform}" in
++ echo -e --export
+ cat -n
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
++ cut -d/ -f2
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
                    blk = $0;
                    next;
                  }
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ case "${target_file}" in
                ' reports/10.0.0.1/misc/switch3.conf
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
++ cut -d/ -f2
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_pattern=192.168.100.100
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
++ dirname -- ./scripts/network-extract.shell
  "hostname": "fg-campus-core"
+ cat -n
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ dirname -- ./scripts/network-extract.shell
++ tr -d '\r'
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ grep -v '^\s*$'
+ [[ logger =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ search_pattern=10.10.10.10
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ grep -F 192.168.2.12
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ newline
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ local count=1
                    if (in_json_header == 1) {
+ (( i = 0 ))
                      in_json_header = 0;
+ (( i < count ))
                      next;
                    }
+ echo
                  }
                  (in_json_header == 1) { next }
+ newline
+ (( i++ ))
                  /^[^[:space:]]/ {
+ (( i < count ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ local count=1
                    next;
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ (( i = 0 ))
                  }
+ return 0
+ (( i < count ))
                  {
                    blk = blk divisor " " $0;
++ grep -v '^#'
                  }
                  END {
+ echo
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console ]]
++ command -v -- ./scripts/network-extract.shell
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console
+ sed '/^[[:space:]]*$/d'
+ grep -F 10.10.10.10
+ return 0
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
}
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_platform}" in
++ which awk
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ echo -e --verbose
++ echo -e --export
+ grep -F 10.0.0.1
++ echo -e --export
+ grep -F 192.168.100.100
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/198.51.100.75/misc
+ [[ ! -d reports/198.51.100.75/misc ]]
+ result=0
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
                    blk = $0;
                    next;
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
                  }
                  {
                    blk = blk divisor " " $0;
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
                  }
                  END {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZR2UQIaLV3/network-extract--fg-campus-core.cfg.console
+ grep -F 198.51.100.75
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ local SCRIPT_DIR=./scripts
+ local first_search_entry=10.10.10.10
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ local script_filename=cisco-configs.awk
+ local last_search_entry=10.10.10.10
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ cfg == \c\f\g ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ newline
+ [[ true == true ]]
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local count=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ export =~ ^(console|o)$ ]]
+ case "${target_platform}" in
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local export_objects=true
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
                    BEGIN {
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
                      blk = "";
+ [[ export =~ ^(platform|p)$ ]]
                      in_json_header = 0;
+ local export_objects=true
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
                    }
+ local verbose=true
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]

+ [[ export == \d\e\b\u\g ]]
                    # Skip blank lines
+ IFS=' 	
+ [[ export =~ ^(logger|l)$ ]]
                    /^[[:space:]]*$/ { next }
+ [[ export == \d\r\y\-\r\u\n ]]
'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]

+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
                    # Skip JSON preamble
+ [[ export == \h\e\l\p ]]
++ dirname -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ debug=false
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ] ]]
+ [[ -z '' ]]
                    /^{$/            { in_json_header = 1; next }

+ dry_run=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
#hostname="fg-campus-core"
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ sed '/^[[:space:]]*$/d'
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-configs--ips.list ]'
+ read -r key value
                    (in_json_header == 1) { next }
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console ]]

+ for xitem in "${@}"
                    # Skip platform metadata
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console
                    /^#(hostname|model|config-version)=/ { next }
+ IFS==
+ result=0

+ read -r key value
+ [[ -z '' ]]
                    # Start of a new block
+ export console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console ]]
+ console_output=false
                    /^config / {
                      if (blk != "") print blk;
+ [[ -z true ]]
                      blk = $0;
                      next;
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console ]]
                    }
+ [[ -z '' ]]

+ script_helper=false
                    # Add edit line to current block
                    /^ edit / {
+ [[ false == true ]]
                      blk = blk divisor " " $0;
                      next;
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
                    }

                    # Add next to block
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
+ search_terms=()
                    }
+ declare -a search_terms

                    # Finalize block at end
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list != *,* ]]
                      next;
                    }
+ mapfile -t search_terms

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }
+ [[ 0 -ne 0 ]]

+ sed '/^[[:space:]]*$/d'
                    END {
+ cat -n
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ grep -F 10.10.10.10
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--dmz-fw2-backup.cfg.console
++ IFS=,
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
++ echo 198.51.100.75
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ case "${target_file}" in
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
++ IFS=,
++ echo 192.168.2.12
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ (( i < count ))
+ cat -n
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --verbose
+ result=0
+ result=0
+ exit 0
++ echo -e --verbose
+ [[ 0 -ne 0 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8eKYI67tN ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v8eKYI67tN
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ local SCRIPT_DIR=./scripts
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ echo
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ result=0
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ 0 -ne 0 ]]
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ newline
+ search_pattern=192.168.1.10
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ (( i++ ))
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ result=0
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ return 0
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ newline
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
#model="FortiGate-200F"

+ output_dir=reports/10.10.10.10/fortinet
+ exit 0
config firewall address
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ echo
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
+ echo
++ which awk
+ (( i < count ))
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console ]]
++ grep -v '^\s*$'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TMkv4Xmidb ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TMkv4Xmidb
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ newline
+ local count=1
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ echo
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ which awk
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ newline
+ mkdir -p reports/192.168.1.10/misc/.objects
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
 edit "Vision-Link"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console
+ cat -n
  set subnet 192.168.2.12 255.255.255.255
+ local count=1
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i = 0 ))
++ grep -v '^#'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ IFS=,
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console
++ echo 192.168.1.10
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ cat -n
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ verbose =~ ^(console|o)$ ]]
+ result=0
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ result=0
+ [[ verbose == \h\e\l\p ]]
+ exit 0
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local verbose=true
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CX7DsrOrUC ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ IFS=' 	
+ [[ verbose == \d\r\y\-\r\u\n ]]
'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ local verbose=true
+ [[ -z '' ]]
+ declare -a execute__netwowrk_extract
+ IFS=' 	
+ debug=false
'
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ [[ -z '' ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CX7DsrOrUC
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ dry_run=false
+ local awk_bin=/usr/bin/awk
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -z true ]]
+ debug=false
+ [[ -z '' ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ dry_run=false
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ -z '' ]]
+ [[ -z true ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console ]]
+ export console_output=false
+ [[ -z '' ]]
+ (( i < count ))
+ console_output=false
+ script_helper=false
+ [[ -z true ]]
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
+ [[ false == true ]]
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ search_terms=()
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
+ (( i < count ))
+ declare -a search_terms
+ search_terms=()
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
+ declare -a search_terms
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console
  set comment "Vision’s quantum channel"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list != *,* ]]
++ command -v -- ./scripts/network-extract.shell
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]]
 next
+ search_pattern=192.168.100.100
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console ]]
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ true == true ]]
+ cat -n
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ] ]]
++ which awk
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
++ printf '%*s' 12 ''
+ ((  count == 0  ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ case "${target_file}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-branch-vpn-01.cfg.console
++ printf '%*s' 12 ''
+ echo
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ (( i++ ))
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'indent=            '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ return 0
+ newline
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console
++ cut -d/ -f2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console ]]
+ newline
+ local count=1
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'indent=            '
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_file}" in
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ return 0
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ IFS=,
+ newline
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ cat -n
+ local count=1
++ echo 198.51.100.75
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo
end ]]
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_file}" in
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console
++ tr -d '\r'
++ tr -d '\r'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--branch-isr-02.cfg.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ declare -a execute__netwowrk_extract
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local awk_bin=/usr/bin/awk
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ message '                .cache/resources/misc/fw1.cfg'
++ grep -v '^\s*$'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ [[ true == true ]]
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^#'
++ grep -v '^#'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
++ which awk
  set comment "Vision’s quantum channel"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ result=0
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ exit 0
config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7VMqmHlOn6 ]]
  set comment "Vision’s quantum channel"
 next
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7VMqmHlOn6
end'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console
+ newline
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ return 0
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ message '                .cache/resources/misc/switch1.conf'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ result=0
+ [[ true == true ]]
+ newline
+ exit 0
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zk4I3peAnC ]]
+ (( i = 0 ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zk4I3peAnC
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_platform}" in
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console
                    in_json_header = 0;
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console ]]
                    blk = "";
+ local script_filename=fortinet-configs.awk
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ local script_filepath=./scripts/extract/fortinet-configs.awk
                  /^}$/ {
+ search_pattern=192.168.0.1
+ case "${target_file}" in
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
                    if (in_json_header == 1) {
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--dmz-fw2-backup.cfg.console
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ local first_search_entry=203.0.113.25
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ] ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-configs--ips.list ]'
+ local awk_bin=/usr/bin/awk
+ local count=1
+ ((  count == 0  ))
+ [[ cfg == \c\f\g ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ grep -F 192.168.1.10
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ which awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local 'extracted_configuration={
  "domain": "",
+ [[ true == true ]]
  "vendor": "fortinet",
  "hostname": ""
  "model": "FortiGate-60F",
+ result=0
  "version": "v7.2.5.F",
+ exit 0
}
++ printf '%*s' 12 ''
  "domain": "",

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9L40PoUp4D ]]
  "hostname": "fg-branch-vpn-01"
}
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9L40PoUp4D
object-group network Metropolis-Internal

 description Core internal LAN for application clusters
#hostname="fg-branch-vpn-01"
 network-object host 10.0.2.3
#model="FortiGate-60F"
 network-object 192.168.2.0 255.255.255.0
#config-version=FGT_60F-v7.2.5.F-build1517-230421
 network-object host 192.168.2.12'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console

config system interface
+ result=0
 edit "wan1"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n {
  set ip 198.51.100.75 255.255.255.0
  "vendor": "cisco",
  "model": "",
+ output_dir=reports/10.10.10.10/misc
  set alias "Branch ISP"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console
  "version": "",
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console ]]
end
  "domain": "",
+ case "${target_file}" in

  "hostname": ""
+ local 'indent=            '
}
config firewall address
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-campus-core.cfg.console
 edit "Branch-Public"
+ [[ ! -d reports/10.10.10.10/misc ]]
  set subnet 198.51.100.75 255.255.255.255

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
  set comment "Branch NAT"
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ [[ true == true ]]
+ result=0
 next
+ exit 0
end'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zy1z8fNPG ]]
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7zy1z8fNPG
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ newline
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local count=1
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ (( i = 0 ))
config system interface
 edit "wan1"
+ (( i < count ))
  set ip 198.51.100.75 255.255.255.0
+ echo
  set alias "Branch ISP"
 next
end
+ [[ true == true ]]
+ (( i++ ))

config firewall address
+ (( i < count ))
 edit "Branch-Public"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 next
end ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ newline 2
+ result=0
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console ]]
+ exit 0
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Or1jp3eda ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local count=2
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6Or1jp3eda
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ECmq1j5rEp/network-extract--switch3.conf.console
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ result=0
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ exit 0
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.18MZz147ou ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ (( i++ ))
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.18MZz147ou
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/203.0.113.25/fortinet
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local count=1
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ (( i = 0 ))

+ (( i < count ))
interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ echo
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ result=0
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ print '{
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "vendor": "cisco",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

  "model": "",
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
  "version": "",
  "domain": "",
  "hostname": ""
end'
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -n {
  "vendor": "cisco",
  "version": "v7.2.5.F",
  "model": "",
  "domain": "",
  "version": "",
  "hostname": "fg-branch-vpn-01"
  "domain": "",
}
  "hostname": ""

}
#hostname="fg-branch-vpn-01"

#model="FortiGate-60F"
object-group network Metropolis-Internal
#config-version=FGT_60F-v7.2.5.F-build1517-230421
 description Core internal LAN for application clusters

 network-object host 10.0.2.3
config system interface
 network-object 192.168.2.0 255.255.255.0
 edit "wan1"
 network-object host 192.168.2.12 ]]
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ echo -en '{
 edit "Branch-Public"
  "vendor": "cisco",
  set subnet 198.51.100.75 255.255.255.255
  "model": "",
  set comment "Branch NAT"
  "version": "",
 next
  "domain": "",
end ]]
  "hostname": ""
+ case "${target_platform}" in
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ echo -en '{
 network-object host 10.0.2.3
  "vendor": "fortinet",
 network-object 192.168.2.0 255.255.255.0
  "model": "FortiGate-60F",
 network-object host 192.168.2.12'
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
#config-version=FGT_60F-v7.2.5.F-build1517-230421

                      in_json_header = 0;
                    }

                    # Skip blank lines
config system interface
                    /^[[:space:]]*$/ { next }
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next

                    # Skip JSON preamble
end
                    /^{$/            { in_json_header = 1; next }
+ sed '1{/^[[:space:]]*$/d;}'

                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
config firewall address

 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
                    # Skip platform metadata
  set comment "Branch NAT"
 next
end'
++ command -v -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
++ IFS=,
++ dirname -- ./scripts/network-extract.shell
++ echo 10.10.10.10
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G91eyEnGf6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.G91eyEnGf6
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ declare -a execute__netwowrk_extract
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ result=0
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ [[ 0 -ne 0 ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ [[ true == true ]]
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ result=0
+ exit 0
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hs0gl7rPhe ]]
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hs0gl7rPhe
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ newline 2
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ newline 2
+ local count=2
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ (( i < count ))
+ echo
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ local count=2
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ [[ true == true ]]
+ local 'extracted_configuration={
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
 network-object host 198.51.100.75
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
 network-object host 203.0.113.25

+ [[ true == true ]]
object network External-Failover
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
 host 198.51.100.75
 description Secondary outbound route for edge'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ local count=1
+ result=0
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ (( i < count ))
+ echo
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ -n {
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
  "vendor": "cisco",
+ newline
  "model": "",
  "version": "",
+ case "${target_platform}" in
+ local count=1
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ echo
+ grep -F 192.168.100.100
+ (( i++ ))
  "domain": "",
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
  "hostname": ""
+ (( i < count ))
}
+ case "${target_file}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '

                    BEGIN {
                      blk = "";
                      in_json_header = 0;
object-group network Krypton-Cloud
                    }
+ cat -n reports/192.168.2.12/misc/fw1.cfg

+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ local SCRIPT_DIR=./scripts
                    # Skip blank lines
 description Cloud-facing external nodes
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
 network-object host 198.51.100.75
 network-object host 203.0.113.25
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ local script_filename=fortinet-configs.awk
object network External-Failover

 host 198.51.100.75
+ local script_filepath=./scripts/extract/fortinet-configs.awk
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
 description Secondary outbound route for edge ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]

                    # Start of a new block
                    /^config / {
+ newline 2
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
+ local count=2
                    }

+ (( i = 0 ))
                    # Finalize block at end
                    /^end$/ {
+ (( i < count ))
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ echo
                      blk = "";
                      next;
                    }

+ (( i++ ))
                    # Accumulate middle lines
+ (( i < count ))
                    {
                      blk = blk divisor " " $0;
+ echo
                    }

                    END {
+ (( i++ ))
                      # No need for final print — all blocks end with end
+ (( i < count ))
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ newline
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ local count=1
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ output_dir=reports/203.0.113.25/misc
+ print '{
+ [[ ! -d reports/203.0.113.25/misc ]]
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
  "vendor": "cisco",
++ which awk
+ output_dir=reports/203.0.113.25/misc
+ local awk_bin=/usr/bin/awk
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ grep -F 192.168.0.1
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ ! -d reports/203.0.113.25/misc ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ serialize_objects
+ sed '1{/^[[:space:]]*$/d;}'
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo
++ command -v -- ./scripts/network-extract.shell
+ newline
+ newline
+ local count=1
++ printf '%*s' 12 ''
+ (( i++ ))
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ local 'indent=            '
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ result=0
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ (( i < count ))
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ return 0
+ serialize_objects
+ [[ 0 -ne 0 ]]
+ serialize_objects
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
+ (( i++ ))
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ IFS=,
+ (( i < count ))
++ echo 10.10.10.10
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ serialize_objects
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
++ dirname -- ./scripts/network-extract.shell
+ newline 2
++ dirname -- ./scripts/network-extract.shell
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
++ IFS=,
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
++ echo 203.0.113.25
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i++ ))
+ (( i < count ))
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ newline
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
++ dirname reports/192.168.1.10/misc/switch1.conf
+ local parent_dir=reports/192.168.2.12/fortinet
+ cat -n
++ which awk
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ which awk
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat -n
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local parent_dir=reports/192.168.2.12/misc
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local parent_dir=reports/198.51.100.75/fortinet
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ true == true ]]
+ local parent_dir=reports/192.168.1.10/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--fw3.cfg.console
++ which awk
++ basename reports/192.168.2.12/misc/fw1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ newline
+ serialize_objects
+ local count=1
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ local awk_bin=/usr/bin/awk
  set dstintf "wan1"
+ local awk_bin=/usr/bin/awk
  set srcaddr "10.10.10.10"
+ (( i = 0 ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
  set dstaddr "203.0.113.10"
+ (( i < count ))
  set action accept
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
  set logtraffic all
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local search_pattern
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
 next
end'
++ basename reports/192.168.1.10/misc/switch1
+ (( i++ ))
+ result=0
+ (( i < count ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ return 0
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ true == true ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ newline
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ local search_pattern
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'indent=            '
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ echo
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
  "version": "v7.2.5.F",
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
}

#hostname="fg-branch-vpn-01"
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local search_pattern
#model="FortiGate-60F"
+ newline
+ (( i++ ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local count=1

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
  set srcaddr "10.10.10.10"
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
  set dstaddr "203.0.113.10"
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
  set action accept
  set logtraffic all
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
 next
+ (( i = 0 ))
end'
++ cut -d/ -f2
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ return 0
+ [[ -n {
  "vendor": "fortinet",
+ echo
  "model": "FortiGate-60F",
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "version": "v7.2.5.F",
  "domain": "",
+ (( i++ ))
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
}
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

#hostname="fg-branch-vpn-01"
+ newline
+ [[ true == true ]]
++ IFS=,
#model="FortiGate-60F"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=1
+ result=0
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ exit 0

++ echo 203.0.113.25
config firewall policy
 edit 13
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sxX5CXSIAN ]]
+ (( i = 0 ))
  set name "Remote NAT"
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sxX5CXSIAN
  set srcintf "dmz"
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
  set dstintf "wan1"
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set srcaddr "10.10.10.10"
+ (( i++ ))
  set dstaddr "203.0.113.10"
+ (( i < count ))
  set action accept
  set logtraffic all
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
 next
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console
end ]]
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -en '{
+ local search_pattern
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
  "vendor": "fortinet",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console ]]
  "hostname": "fg-branch-vpn-01"
}
+ declare -a execute__netwowrk_extract
+ local parent_dir=reports/198.51.100.75/misc
+ message '             -f ./scripts/extract/cisco-configs.awk \'

++ IFS=,
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console
#hostname="fg-branch-vpn-01"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ message '                .cache/resources/misc/fw3.cfg'
++ echo 203.0.113.25
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
  set dstintf "wan1"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console ]]
  set srcaddr "10.10.10.10"
+ case "${target_file}" in
+ local 'message=                .cache/resources/misc/fw3.cfg'
++ echo reports/192.168.2.12/misc/fw1.cfg
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
+ echo -e '                .cache/resources/misc/fw3.cfg'
end'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
++ cut -d/ -f2
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console ]]
++ cut -d/ -f2
++ which awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console
++ basename reports/198.51.100.75/misc/fw1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dx8TF4wWs8/network-extract--fg-campus-core.cfg.console
++ echo reports/192.168.1.10/misc/switch1.conf
++ which awk
++ cut -d/ -f2
+ search_pattern=192.168.2.12
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/misc/.objects
+ local awk_bin=/usr/bin/awk
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ local search_pattern
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ search_pattern=198.51.100.75
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9IuNOdDxCQ/network-extract--fg-branch-vpn-01.cfg.console
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JwiiyyVfbJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JwiiyyVfbJ
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
++ echo reports/198.51.100.75/misc/fw1.cfg
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ local 'indent=            '
  set comment "Public NAT exposure for Red Skull trap"
++ cut -d/ -f2
 next
+ [[ true == true ]]
end ]]
+ local 'indent=            '
+ case "${target_platform}" in
+ [[ true == true ]]
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ local count=1
  "version": "",
  "domain": "",
  "hostname": ""
}
+ (( i = 0 ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ newline
                    BEGIN {
                      blk = "";
+ (( i < count ))

                      in_json_header = 0;
object-group network Shield-WiFi
                    }
 description Shield-controlled wireless network

 network-object host 10.10.10.10
+ local count=1
                    # Skip blank lines
 network-object 192.168.100.0 255.255.255.0
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ echo

+ (( i = 0 ))

                    # Start of a new block
+ (( i < count ))
+ (( i++ ))
                    /^config / {
object-group network Shield-WiFi
                      if (blk != "") print blk;
 description Shield-controlled wireless network
                      blk = $0;
 network-object host 10.10.10.10
                      next;
 network-object 192.168.100.0 255.255.255.0
                    }


object-group network Shield-WiFi
                    # Add edit line to current block
+ echo
                    /^ edit / {
 description Shield-controlled wireless network
                      blk = blk divisor " " $0;
+ (( i < count ))
                      next;
+ (( i++ ))
                    }
+ (( i < count ))
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                    # Add next to block

                    /^ next$/ {
                      blk = blk divisor " " $0;
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object network Shield-WiFi-Alias
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                      next;
 host 10.10.10.10
                    }

 description Guest NAT'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                    # Finalize block at end
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print '{
+ grep -F 192.168.2.12
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ result=0
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
  "version": "v7.2.5.F",
+ newline
                    /^end$/ {
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
  "domain": "",
                      blk = blk divisor " " $0;
  "hostname": "fg-branch-vpn-01"
                      if (blk != "" && !seen[blk]++) print blk;
+ local count=1
}
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ -n {

                      blk = "";
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
  "vendor": "cisco",
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
                      next;
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
                    }
  "model": "",
+ echo
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ sed '/^[[:space:]]*$/d'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'

+ (( i++ ))
  "version": "",
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
config firewall address
  "domain": "",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "hostname": ""

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
                    # Accumulate middle lines
}
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 edit "Public-Test"
                    {

  set subnet 203.0.113.25 255.255.255.255
                      blk = blk divisor " " $0;
  set comment "Public NAT exposure for Red Skull trap"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
                    }
 next
+ case "${target_platform}" in

object-group network Shield-WiFi
+ [[ true == true ]]
end'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
                    END {
+ message '                .cache/resources/misc/fw3.cfg'
                      # No need for final print — all blocks end with end
 description Shield-controlled wireless network
 network-object host 10.10.10.10
                    }
 network-object 192.168.100.0 255.255.255.0
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg

+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
                  BEGIN {
+ [[ -n {
+ newline
object-group network Shield-WiFi
                    in_json_header = 0;
 description Shield-controlled wireless network
  "vendor": "fortinet",
+ local count=1
                    blk = "";
+ (( i = 0 ))
                  }
                  /^[[:space:]]*$/ { next }
  "model": "FortiGate-60F",
 network-object host 10.10.10.10
                  /^{$/ { in_json_header = 1; next }
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ message '                .cache/resources/misc/fw1.cfg'
                  /^}$/ {
 network-object 192.168.100.0 255.255.255.0
                    if (in_json_header == 1) {
  "version": "v7.2.5.F",
                      in_json_header = 0;
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
                      next;
                    }
#model="FortiGate-60F"
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

                  }

+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
object-group network Shield-WiFi
 description Shield-controlled wireless network
config firewall address
 network-object host 10.10.10.10
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
 network-object 192.168.100.0 255.255.255.0
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ grep -F 192.168.2.12
  set comment "Public NAT exposure for Red Skull trap"
+ local 'message=                .cache/resources/misc/fw1.cfg'
                  (in_json_header == 1) { next }

+ echo
                  /^[^[:space:]]/ {
 next
                    if (blk != "" && !seen[blk]++) print blk "\n";
object network Shield-WiFi-Alias
+ case "${target_platform}" in
                    blk = $0;
end ]]
+ serialize_objects
+ echo -e '                .cache/resources/misc/fw1.cfg'
 host 10.10.10.10
                    next;
 description Guest NAT ]]
+ (( i++ ))
                  }
+ (( i < count ))
+ echo -en '{
+ newline
+ sed '/^[[:space:]]*$/d'
  "vendor": "fortinet",
                  {
+ local count=1
+ result=0
                    blk = blk divisor " " $0;
  "model": "FortiGate-60F",
+ search_pattern=198.51.100.75
                  }
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i = 0 ))
                  END {
  "version": "v7.2.5.F",
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                    BEGIN {
  "domain": "",
  "hostname": "fg-branch-vpn-01"
                ' reports/192.168.2.12/misc/fw1.cfg
                      blk = "";
}
+ mkdir -p reports/198.51.100.75/misc/.objects
                      in_json_header = 0;

#hostname="fg-branch-vpn-01"
                    }

+ (( i < count ))
+ exit 0
+ echo
#model="FortiGate-60F"
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
                    # Skip JSON preamble
 edit "Public-Test"
                    /^{$/            { in_json_header = 1; next }
+ (( i++ ))
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
  set subnet 203.0.113.25 255.255.255.255

+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cNwoi9ipyQ ]]
                    # Skip platform metadata
  set comment "Public NAT exposure for Red Skull trap"
 next
                    /^#(hostname|model|config-version)=/ { next }
end'

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cNwoi9ipyQ
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
+ grep -F 198.51.100.75
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ case "${target_platform}" in
+ print '{
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
  "vendor": "cisco",
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
                      in_json_header = 0;
}
                      next;

                    }
                  }
object-group network Shield-WiFi
 description Shield-controlled wireless network
                  (in_json_header == 1) { next }
 network-object host 10.10.10.10
                  /^[^[:space:]]/ {
 network-object 192.168.100.0 255.255.255.0
                    if (blk != "" && !seen[blk]++) print blk "\n";

                    blk = $0;
object-group network Shield-WiFi
                    next;
 description Shield-controlled wireless network
                  }
 network-object host 10.10.10.10
                  {
 network-object 192.168.100.0 255.255.255.0
                    blk = blk divisor " " $0;

                  }
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
object-group network Shield-WiFi
                  END {
 description Shield-controlled wireless network
                    if (blk != "" && !seen[blk]++) print blk "\n";
 network-object host 10.10.10.10
                  }
 network-object 192.168.100.0 255.255.255.0
                ' reports/192.168.1.10/misc/switch1.conf

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ newline 2
+ sed '/^[[:space:]]*$/d'
+ grep -F 192.168.1.10
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ local count=2
  "hostname": ""
+ (( i = 0 ))
}

+ (( i < count ))
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ echo
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ (( i++ ))
object-group network Shield-WiFi
+ (( i < count ))
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ echo
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
+ (( i++ ))
 description Shield-controlled wireless network
+ (( i < count ))
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ echo -en '{
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
 description Shield-controlled wireless network
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ newline
+ local count=1
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ echo
+ (( i++ ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/fortinet
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ result=0
+ case "${target_platform}" in
+ cat -n
++ basename reports/10.10.10.10/fortinet/fg-testing-config
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ case "${target_file}" in
                    in_json_header = 0;
+ [[ 0 -ne 0 ]]
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ true == true ]]
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ result=0
+ [[ true == true ]]
+ local 'extracted_configuration={
+ grep -F 198.51.100.75
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
  "vendor": "cisco",
+ [[ 0 -ne 0 ]]
  "model": "",
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ true == true ]]
  "version": "",
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ newline 2
  "domain": "",
+ local 'extracted_configuration={
  "vendor": "cisco",
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
  "hostname": ""
  "model": "",
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local count=1
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
  "version": "",
+ (( i < count ))
}
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ echo
+ sed '/^[[:space:]]*$/d'
+ local count=2
+ (( i++ ))

  "domain": "",
+ newline
+ (( i < count ))
object-group network Panther-Edge
+ local count=1
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ (( i = 0 ))
+ (( i < count ))
 description Internet-facing proxy systems
  "hostname": ""
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
 network-object host 203.0.113.25
+ (( i < count ))
 network-object host 172.16.0.5'
}
+ echo

object-group network Krypton-Cloud
+ newline
 description Cloud-facing external nodes
+ result=0
+ echo
 network-object host 198.51.100.75
+ local count=1
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "",
+ (( i++ ))
+ (( i++ ))
 network-object host 203.0.113.25
  "version": "",
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
  "domain": "",
+ (( i < count ))

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
  "hostname": ""
+ (( i++ ))
}
+ (( i < count ))

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ [[ true == true ]]
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ newline
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ echo
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ (( i++ ))
+ (( i < count ))
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ (( i++ ))
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ cat -n
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ local search_pattern
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ newline
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ print '{
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ local count=1
  "vendor": "cisco",
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
  "model": "",
  "version": "",
+ (( i = 0 ))
+ case "${target_file}" in
  "domain": "",
  "hostname": ""
}
+ (( i < count ))

+ echo
object-group network Krypton-Cloud
+ print '{
  "vendor": "cisco",
+ cat reports/192.168.1.10/misc/.objects/switch1.list
 description Cloud-facing external nodes
  "model": "",
 network-object host 198.51.100.75
  "version": "",
 network-object host 203.0.113.25
  "domain": "",

  "hostname": ""
object network Krypton-Gateway
}
 host 203.0.113.25

 description Secure NAT boundary for cloud access'
object-group network Panther-Edge
+ (( i++ ))
+ (( i < count ))
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ return 0
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ cat -n
  "version": "",
+ [[ true == true ]]
  "domain": "",
+ [[ -n {
  "vendor": "cisco",
  "hostname": ""
  "model": "",
}
  "version": "",

  "domain": "",
object-group network Krypton-Cloud
  "hostname": ""
 description Cloud-facing external nodes
}
 network-object host 198.51.100.75

 network-object host 203.0.113.25
object-group network Panther-Edge

 description Internet-facing proxy systems
object network Krypton-Gateway
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console
 network-object host 203.0.113.25
 host 203.0.113.25
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console ]]
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
 network-object host 172.16.0.5 ]]
 description Secure NAT boundary for cloud access ]]
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ echo -en '{
}
  "vendor": "cisco",

  "model": "",
object-group network Panther-Edge
  "version": "",
 description Internet-facing proxy systems
  "domain": "",
 network-object host 203.0.113.25
  "hostname": ""
 network-object host 172.16.0.5'
}

+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
+ newline
 description Secure NAT boundary for cloud access'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
++ cut -d/ -f2
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ (( i = 0 ))
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ newline 2
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ local parent_dir=reports/203.0.113.25/fortinet
+ case "${target_file}" in
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ return 0
+ local count=2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console
+ (( i++ ))
+ serialize_objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console
+ newline 2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console
+ echo
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ search_pattern=10.10.10.10
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console ]]
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ newline
+ local count=1
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ true == true ]]
+ local search_pattern
+ local parent_dir=reports/10.10.10.10/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uP7w7XSuPG/network-extract--fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console
+ result=0
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console ]]
+ exit 0
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D6HhORJLUg ]]
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0x0QZTtRvm/network-extract--switch1.conf.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D6HhORJLUg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
+ newline
+ serialize_objects
                      in_json_header = 0;
                    }

                    # Skip blank lines
+ local count=1
                    /^[[:space:]]*$/ { next }

+ (( i = 0 ))
                    # Skip JSON preamble
+ (( i < count ))
                    /^{$/            { in_json_header = 1; next }
++ basename reports/10.10.10.10/misc/fw3
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ echo

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ (( i++ ))

+ (( i < count ))
                    # Start of a new block
+ [[ true == true ]]
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
+ [[ false == true ]]
                    /^ edit / {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console
+ grep -F 10.10.10.10
+ [[ true == true ]]
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console ]]
                      next;
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console
                    }

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console ]]
                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
+ case "${target_file}" in
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.v2ctWgVrv2/network-extract--fw1.cfg.console
                      next;
                    }

                    # Accumulate middle lines
                    {
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
                      blk = blk divisor " " $0;
                    }
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]

                    END {
                      # No need for final print — all blocks end with end
                    }
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ sed '/^[[:space:]]*$/d'
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ serialize_objects
++ dirname reports/203.0.113.25/misc/fw1.cfg
++ cut -d/ -f2
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ result=0
+ exit 0
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vVRFRTtY9c ]]
+ exit 0
+ local search_pattern
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vVRFRTtY9c
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D8KmsybVlb ]]
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D8KmsybVlb
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LQhqqoBwxm ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LQhqqoBwxm
+ local parent_dir=reports/203.0.113.25/misc
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uMkaVbUjXo ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uMkaVbUjXo
+ local parent_dir=reports/203.0.113.25/misc
++ echo reports/10.10.10.10/misc/fw3.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ basename reports/203.0.113.25/misc/fw1
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ cut -d/ -f2
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/203.0.113.25/misc/fw3
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ cat -n
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ local search_pattern
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/misc/.objects
+ case "${target_platform}" in
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }
+ grep -F 203.0.113.25

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ echo reports/203.0.113.25/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
++ echo reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ result=0
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ 0 -ne 0 ]]
                ' reports/10.10.10.10/misc/fw3.cfg
+ [[ true == true ]]
+ grep -F 10.10.10.10
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ search_pattern=203.0.113.25
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ mkdir -p reports/203.0.113.25/misc/.objects
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fg-testing-config.cfg.console
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ cat -n
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ grep -F 203.0.113.25
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ sed '/^[[:space:]]*$/d'
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
                  }
                  /^[[:space:]]*$/ { next }
+ newline
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ local count=1
                  }
                  (in_json_header == 1) { next }
+ (( i = 0 ))
                  /^[^[:space:]]/ {
+ (( i < count ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ echo
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i++ ))
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bOdHZlrSEY ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bOdHZlrSEY
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ grep -F 203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ sed '/^[[:space:]]*$/d'
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat -n
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ newline
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console ]]
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ cat -n
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat -n
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ADLTDYOU5h ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ADLTDYOU5h
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B4A1Ts3ViV/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kdDDOQML9i ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kdDDOQML9i
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LmkmSOQ9Xb/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I8YlY0bfLW ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I8YlY0bfLW
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bUJbjXZipS ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bUJbjXZipS
