+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CYse017GBs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CYse017GBs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
++ mktemp -d
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0OTAwNDc1NTMyOTA0MDAwMAo--
++ divisor=--MTc0OTAwNDc1NTMyOTA0MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yENh4HSj0A
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yENh4HSj0A
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias parse-listings--helper=parse_listings__helper
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias network-extract--helper=network_extract__helper
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ alias serialize-object=serialize_objects
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ alias parse-cisco=main
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ [[ -z x ]]
++ export cache_location=.cache
+ export logs_location=logs
++ cache_location=.cache
+ logs_location=logs
++ export logs_location=logs
++ logs_location=logs
+ mkdir -p logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
+ [[ 6 -eq 0 ]]
++ mkdir -p console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ mktemp -d
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0OTAwNDc1NTM0NjcxNjAwMAo--
++ divisor=--MTc0OTAwNDc1NTM0NjcxNjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pIJWK6GiN
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pIJWK6GiN
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ alias warning-message=warning
+ [[ -z x ]]
++ export LC_ALL=C
+ export logs_location=logs
++ LC_ALL=C
+ logs_location=logs
+ mkdir -p logs
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
+ [[ 6 -eq 0 ]]
++ mkdir -p console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+++ tr -dc a-zA-Z0-9
++ mktemp -d
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0OTAwNDc1NTM2NTg5MTAwMAo--
++ divisor=--MTc0OTAwNDc1NTM2NTg5MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQZ6ycz5ex
+ [[ verbose =~ ^(config|c)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQZ6ycz5ex
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(console|o)$ ]]
+ export 'nl=\n'
+ [[ verbose =~ ^(export|r)$ ]]
+ nl='\n'
+ [[ verbose =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ verbose == \h\e\l\p ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ alias network-extract--helper=network_extract__helper
+ [[ -z '' ]]
++ alias detect-vendor=detect_vendor
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias exit-error=exit_error
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
+ [[ false == true ]]
++ alias list-file=list_file
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
++ alias log-error=log_error
+ search_terms=()
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a search_terms
++ alias log-info=log_info
+ [[ -f .cache/ips.list ]]
+ alias serialize-object=serialize_objects
++ alias log-warn=log_warn
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ alias parse-cisco=main
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console --verbose
++ console_location=console
++ mkdir -p console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ echo -e --verbose
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ tr -dc a-zA-Z0-9
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ mktemp -d
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
++ export divisor=--MTc0OTAwNDc1NTM4ODA5MDAwMAo--
++ divisor=--MTc0OTAwNDc1NTM4ODA5MDAwMAo--
+ [[ verbose =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WlvvR0gPa3
+ alias parse-cisco=main
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WlvvR0gPa3
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ [[ -n '' ]]
++ tr -d '\r'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
++ alias list-file=list_file
++ alias log-error=log_error
+ local script_filename=cisco-configs.awk
++ alias log-info=log_info
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias log-warn=log_warn
++ grep -v '^#'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ extract =~ ^(config|c)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(console|o)$ ]]
++ mkdir -p logs
+ [[ extract =~ ^(export|r)$ ]]
++ which awk
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ echo -e --platform=cisco
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'indent=            '
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(export|r)$ ]]
++ actions_logfile=console/run.console
+ [[ search =~ ^(extract|x)$ ]]
++ touch console/run.console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ set -euo pipefail
+ IFS==
+ read -r key value
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/cisco
++ echo -e --verbose
+ [[ ! -d .cache/resources/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+++ date +%s%N
++ dirname -- ./scripts/network-extract.shell
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ local 'extracted_configuration={
+ [[ config == \d\e\b\u\g ]]
  "vendor": "cisco",
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
  "model": "",
+ [[ config == \v\e\r\b\o\s\e ]]
  "version": "12.4",
+ for xitem in "${@}"
  "domain": "",
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
  "hostname": "access-sw1-west"
+ read -r key value
}
+ [[ verbose =~ ^(extract|x)$ ]]

version 12.4
hostname access-sw1-west
+ [[ verbose =~ ^(logger|l)$ ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
+ [[ verbose =~ ^(platform|p)$ ]]

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
+ [[ verbose =~ ^(search|s)$ ]]

object-group network MGMT-ACCESS
 description Management objects
+ [[ verbose == \h\e\l\p ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qWxMO5P58o
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qWxMO5P58o
+ [[ verbose == \d\e\b\u\g ]]
 network-object host 10.10.10.10
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT

+ [[ verbose == \d\r\y\-\r\u\n ]]
object-group network Mutant-WiFi
+ [[ verbose == \v\e\r\b\o\s\e ]]
 description Controlled guest devices
+ export 'nl=\n'
 network-object host 10.10.10.10'
+ local verbose=true
+ nl='\n'
+ result=0
+ source ./scripts/devops-resources.shell
+ IFS=' 	
'
+ [[ -n {
  "vendor": "cisco",
+ [[ -z '' ]]
  "model": "",
  "version": "12.4",
+ debug=false
  "domain": "",
  "hostname": "access-sw1-west"
++ [[ -n '' ]]
}
+ [[ -z '' ]]

version 12.4
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ dry_run=false
hostname access-sw1-west
+ [[ -z true ]]

++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
interface Vlan1
+ export console_output=false
 ip address 192.168.0.1 255.255.255.0
+ console_output=false
 description Management Interface

+ [[ -z '' ]]
interface Vlan100
+ local export_objects=false
 ip address 192.168.0.100 255.255.255.0
++ alias detect-vendor=detect_vendor
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console ]]
 description Guest VLAN Gateway

+ [[ -z '' ]]
object-group network MGMT-ACCESS
+ script_helper=false
 description Management objects
++ alias exit-error=exit_error
 network-object host 192.168.0.1
+ [[ false == true ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '

object-group network Mutant-WiFi
+ [[ -z .cache/ips.list ]]
 description Controlled guest devices
+ search_terms=()
 network-object host 10.10.10.10 ]]
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ local SCRIPT_DIR=./scripts
++ alias relative-configpath=relative_configpath
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias system-metrics=system_metrics
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
++ alias validate-address=validate_address

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
 description Management Interface
++ alias warning-message=warning

++ export LC_ALL=C
interface Vlan100
++ LC_ALL=C
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

++ export 'nl=\n'
+ sed '1{/^[[:space:]]*$/d;}'
++ nl='\n'
object-group network MGMT-ACCESS
++ export cache_location=.cache
 description Management objects
++ cache_location=.cache
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ export logs_location=logs
 network-object host 10.10.10.10
++ logs_location=logs

object-group network Mutant-WiFi
 description Controlled guest devices
++ mkdir -p logs
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
++ export divisor=--MTc0OTAwNDc1NTQxMjUyNDAwMAo--
  "model": "",
++ divisor=--MTc0OTAwNDc1NTQxMjUyNDAwMAo--
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
+ source ./scripts/devops-helpers.shell

++ which awk
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ [[ -n '' ]]
 description Management Interface
++ readonly __DEVOPS_HELPERS_SOURCED=1

++ __DEVOPS_HELPERS_SOURCED=1
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
++ [[ 5 -lt 4 ]]
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ tr -d '\r'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
++ alias parse-listings--helper=parse_listings__helper

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ grep -v '^\s*$'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ grep -v '^#'
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ newline 2
+ [[ extract =~ ^(config|c)$ ]]
++ export jobs_location=jobs
+ local count=2
++ jobs_location=jobs
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
++ mkdir -p jobs
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i++ ))
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
++ which awk
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
++ export console_location=console
++ console_location=console
+ script_filename=network-extract.shell
++ mkdir -p console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console ]]
+ local awk_bin=/usr/bin/awk
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ export actions_logfile=console/run.console
+ [[ 6 -eq 0 ]]
++ actions_logfile=console/run.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ touch console/run.console
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console --verbose
+ local 'indent=            '
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ set -euo pipefail
+ echo
+ (( i++ ))
+ export LC_ALL=C
+ (( i < count ))
+ LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ echo -e --search=.cache/ips.list
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--access-sw1-west.cfg.console
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ output_dir=.cache/resources/cisco
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ ! -d .cache/resources/cisco ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+++ date +%s%N
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QcX97OIgc1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QcX97OIgc1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ result=0
++ [[ -n '' ]]
+ exit 0
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CYse017GBs ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CYse017GBs
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ command -v -- ./scripts/network-extract.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ echo -e --verbose
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
++ alias system-metrics=system_metrics

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ alias validate-address=validate_address
+ result=0
++ alias warning-message=warning
+ [[ -n {
++ export LC_ALL=C
  "vendor": "cisco",
++ LC_ALL=C
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
}
++ nl='\n'

++ export cache_location=.cache
version 16.9
++ cache_location=.cache
hostname branch-isr-02

++ export logs_location=logs
interface GigabitEthernet0/0/0
++ logs_location=logs
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
++ mkdir -p logs

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
++ export divisor=--MTc0OTAwNDc1NTQzNTkzNDAwMAo--
 host 198.51.100.75
++ divisor=--MTc0OTAwNDc1NTQzNTkzNDAwMAo--
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75
+ source ./scripts/devops-helpers.shell

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
++ [[ -n '' ]]
 network-object host 192.168.1.11'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ sed '1{/^[[:space:]]*$/d;}'
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75
++ alias parse-listings--helper=parse_listings__helper

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
++ alias network-configs--helper=network_configs__helper
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ alias parse-cisco=main
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ [[ verbose == \h\e\l\p ]]
+ export logs_location=logs
+ [[ verbose == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ mkdir -p logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ which awk
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
++ tr -d '\r'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ grep -v '^\s*$'
++ grep -v '^#'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ which awk
+ local first_search_entry=10.0.0.1
+ newline
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ false == true ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ false == true ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ [[ 6 -eq 0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ (( i = 0 ))
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console
+ oIFS=' 	
+ echo
'
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --platform=cisco
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --search=.cache/ips.list
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ [[ platform == \h\e\l\p ]]
+++ date +%s%N
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oxmS2J1hYw
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oxmS2J1hYw
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ cfg == \c\f\g ]]
++ [[ 5 -lt 4 ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ alias validate-address=validate_address
+ result=0
++ alias warning-message=warning
+ exit 0
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yENh4HSj0A ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yENh4HSj0A
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--MTc0OTAwNDc1NTQ1NjA4NTAwMAo--
++ divisor=--MTc0OTAwNDc1NTQ1NjA4NTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ logger =~ ^(search|s)$ ]]
+ alias serialize-object=serialize_objects
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ output_dir=.cache/resources/cisco
+ [[ logger == \h\e\l\p ]]
}
+ [[ ! -d .cache/resources/cisco ]]
+ [[ logger == \d\e\b\u\g ]]

++ export jobs_location=jobs
+ [[ logger == \d\r\y\-\r\u\n ]]
version 12.2
+ alias parse-cisco=main
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ jobs_location=jobs
hostname campus-sw-access01

+ for xitem in "${@}"
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ mkdir -p jobs
+ IFS==
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
 description Switch Mgmt
+ [[ config =~ ^(console|o)$ ]]

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ config =~ ^(export|r)$ ]]
 network-object host 10.10.10.10'
+ [[ -z x ]]
+ result=0
+ export logs_location=logs
+ [[ config =~ ^(extract|x)$ ]]
+ logs_location=logs
+ [[ -n {
  "vendor": "cisco",
+ mkdir -p logs
  "model": "",
  "version": "12.2",
+ [[ config =~ ^(logger|l)$ ]]
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ [[ config =~ ^(platform|p)$ ]]

+ [[ config =~ ^(search|s)$ ]]
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ [[ config == \h\e\l\p ]]

+ [[ config == \d\e\b\u\g ]]
object-group network Floor-Networks
+ [[ config == \d\r\y\-\r\u\n ]]
 description End-user and service devices
 network-object host 192.168.0.1
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
++ echo -e --verbose
hostname campus-sw-access01

+ sed '1{/^[[:space:]]*$/d;}'
interface Vlan1
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline 2
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ extract =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=2
+ [[ verbose == \h\e\l\p ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ (( i++ ))
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
+ IFS=' 	
+ echo
+ [[ extract == \h\e\l\p ]]
'
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ debug=false
+ (( i++ ))
+ [[ -z '' ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ dry_run=false
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ local export_objects=false
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -z '' ]]
+ script_helper=false
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ newline
+ [[ -z .cache/ips.list ]]
+ local count=1
+ search_terms=()
+ (( i = 0 ))
+ declare -a search_terms
+ (( i < count ))
+ [[ -f .cache/ips.list ]]
+ echo
+ [[ .cache/ips.list != *,* ]]
+ (( i++ ))
+ mapfile -t search_terms
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
++ which awk
++ export actions_logfile=console/run.console
+ [[ 6 -eq 0 ]]
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
+ [[ platform =~ ^(config|c)$ ]]
++ export targets_location=targets
+ local first_search_entry=10.0.0.1
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ targets_location=targets
+ local last_search_entry=203.0.113.25
+ [[ platform =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ platform =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ platform == \h\e\l\p ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ local count=17
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ (( i = 0 ))
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ declare -a execute__netwowrk_extract
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ case "${target_file}" in
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ date +%s%N
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ which awk
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+++ base64
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ search =~ ^(platform|p)$ ]]
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ tr -dc a-zA-Z0-9
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--campus-sw-access01.cfg.console
++ export divisor=--MTc0OTAwNDc1NTQ3OTIwNzAwMAo--
+ [[ logger =~ ^(config|c)$ ]]
++ divisor=--MTc0OTAwNDc1NTQ3OTIwNzAwMAo--
+ [[ logger =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ printf '%*s' 12 ''
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias network-configs--helper=network_configs__helper
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias network-extract--helper=network_extract__helper
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ alias serialize-object=serialize_objects
+ (( i++ ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QuZOBTPmbb
+ (( i < count ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QuZOBTPmbb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ config =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias exit-error=exit_error
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ alias parse-cisco=main
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
++ echo -e --verbose
++ alias log-warn=log_warn
+ [[ cfg == \c\f\g ]]
++ alias print-message=message
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
++ alias print-newline=newline
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
++ alias pause=pause
+ export logs_location=logs
++ alias print-line=print
+ logs_location=logs
+ mkdir -p logs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pIJWK6GiN ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pIJWK6GiN
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ export jobs_location=jobs
+ export console_output=false
+ console_output=false
++ jobs_location=jobs
+ [[ -z '' ]]
+ local export_objects=false
++ mkdir -p jobs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
++ tr -d '\r'
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
++ grep -v '^\s*$'
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
+ [[ 6 -eq 0 ]]
++ grep -v '^#'

+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ dirname -- ./scripts/network-extract.shell
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
++ echo -e --platform=fortinet
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console --verbose
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
+ oIFS=' 	

'
object network Sentinel-NAT
 host 203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
 description Corporate NAT edge
+ for xitem in "${@}"

+ IFS==
+ read -r key value
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
++ echo -e --search=.cache/ips.list
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
++ sed -e '1s|^\(-\)\{1,\}||'

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

+ local SCRIPT_DIR=./scripts
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
+ local script_filename=cisco-configs.awk
 description Staff WiFi clients
 network-object host 192.168.100.100
+ local script_filepath=./scripts/extract/cisco-configs.awk
 network-object host 10.10.10.10

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
object-group network Watchtower-DMZ
 description Global secure relay
+ local first_search_entry=10.0.0.1
 network-object host 192.0.2.50'
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=17
+ local target_platform=fortinet
+ ((  count == 0  ))
+ [[ platform =~ ^(search|s)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ platform == \h\e\l\p ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
++ which awk
+ local count=1
++ export actions_logfile=console/run.console
+ (( i = 0 ))
++ actions_logfile=console/run.console
+ (( i < count ))
+ echo
++ touch console/run.console
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(config|c)$ ]]
+ newline 2
+ [[ search =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local count=2
+ [[ search =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ echo
+ local search_pattern=.cache/ips.list
+ (( i++ ))
+ [[ search == \h\e\l\p ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ search == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ logger =~ ^(extract|x)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ [[ logger =~ ^(logger|l)$ ]]
+ declare -a execute__netwowrk_extract
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
+++ base64
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+++ tr -dc a-zA-Z0-9
+ newline
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --verbose
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VQgisiVZFr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VQgisiVZFr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export divisor=--MTc0OTAwNDc1NTUwNjMyNzAwMAo--
++ divisor=--MTc0OTAwNDc1NTUwNjMyNzAwMAo--
++ alias list-file=list_file
+ source ./scripts/devops-helpers.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ [[ -n '' ]]
++ alias print-message=message
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-newline=newline
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias print-line=print
++ printf '%*s' 12 ''
++ alias print-file=print_file
++ alias parse-listings--helper=parse_listings__helper
++ alias relative-configpath=relative_configpath
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ alias system-metrics=system_metrics
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ newline
++ nl='\n'
++ alias network-extract--helper=network_extract__helper
++ export cache_location=.cache
++ cache_location=.cache
+ local count=1
++ export logs_location=logs
+ (( i = 0 ))
++ logs_location=logs
+ (( i < count ))
+ echo
++ mkdir -p logs
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ alias serialize-object=serialize_objects
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ output_dir=.cache/resources/fortinet
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ [[ ! -d .cache/resources/fortinet ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console
+ alias parse-cisco=main
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ [[ verbose =~ ^(extract|x)$ ]]
+ logs_location=logs
+ mkdir -p logs
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ command -v -- ./scripts/network-extract.shell
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ export jobs_location=jobs
+ [[ extract =~ ^(extract|x)$ ]]
++ jobs_location=jobs
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ mkdir -p jobs
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ tr -d '\r'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ grep -v '^#'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ result=0
+ network_extract__console=console/network-extract.console
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQZ6ycz5ex ]]
+ touch console/network-extract.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQZ6ycz5ex
+ local SCRIPT_DIR=./scripts
++ echo -e --platform=fortinet
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ echo
ASA Version 9.14(3)
hostname perimeter-fw1
+ (( i++ ))
domain-name edge.dc.example.com
+ (( i < count ))

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ local 'prompt_message=Enter configuration file to be parsed: '
interface GigabitEthernet0/1
 nameif inside
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ [[ -z fortinet ]]
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
+ [[ true == true ]]
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

+ newline
object-group network Panther-Edge
+ local count=1
+ (( i = 0 ))
 description Internet-facing proxy systems
+ (( i < count ))
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ echo

object network Magneto-Core
+ (( i++ ))
 host 172.16.0.5
+ (( i < count ))
 description WAN firewall entry point'
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ result=0
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n {
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ 6 -eq 0 ]]
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console --verbose
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
+ oIFS=' 	
 host 10.0.0.1
'
 description Core services gateway

object-group network Avengers-DMZ
+ for xitem in "${@}"
 description Public access layer
 network-object host 192.0.2.50
+ IFS==
 network-object host 203.0.113.25
+ read -r key value
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
++ export actions_logfile=console/run.console
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
++ actions_logfile=console/run.console

interface GigabitEthernet0/1
 nameif inside
++ touch console/run.console
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
++ echo -e --search=.cache/ips.list
 network-object 192.168.2.0 255.255.255.0

++ IFS=,
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ sed -e '1s|^\(-\)\{1,\}||'

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
+ declare -a execute__netwowrk_extract
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ newline 2
+ set -euo pipefail
+ [[ search =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ [[ search =~ ^(console|o)$ ]]
+ LC_ALL=C
+ local count=2
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ echo
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo
+ [[ search =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ local search_pattern=.cache/ips.list
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ search == \h\e\l\p ]]
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ logger =~ ^(config|c)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ mktemp -d
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+++ date +%s%N
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+++ tr -dc a-zA-Z0-9
++ printf '%*s' 12 ''
+ local 'indent=            '
++ echo -e --config=configs/misc/fw1.cfg
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ echo -e --verbose
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ export divisor=--MTc0OTAwNDc1NTUzMDc4OTAwMAo--
++ divisor=--MTc0OTAwNDc1NTUzMDc4OTAwMAo--
+ source ./scripts/devops-helpers.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console ]]
++ [[ -n '' ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
++ [[ 5 -lt 4 ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.twsXgBP5q1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.twsXgBP5q1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias network-extract--helper=network_extract__helper
++ alias exit-error=exit_error
++ alias list-file=list_file
+ alias serialize-object=serialize_objects
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ dirname -- ./scripts/network-extract.shell
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ alias parse-cisco=main
+ [[ verbose =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z x ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ verbose =~ ^(extract|x)$ ]]
+ mkdir -p logs
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ alias validate-address=validate_address
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias warning-message=warning
++ echo -e --extract=.cache/resources/misc/fw1.cfg
+ IFS=' 	
'
++ export LC_ALL=C
+ [[ -z '' ]]
++ LC_ALL=C
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ export 'nl=\n'
+ [[ -z '' ]]
+ export console_output=false
++ nl='\n'
+ console_output=false
++ export cache_location=.cache
+ [[ -z '' ]]
++ cache_location=.cache
+ local export_objects=false
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console ]]
++ logs_location=logs
+ [[ -z '' ]]
++ mkdir -p logs
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--perimeter-fw1.cfg.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ jobs_location=jobs
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ mkdir -p jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WlvvR0gPa3 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WlvvR0gPa3
++ echo -e --platform=cisco
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ local first_search_entry=10.0.0.1
 edit "Spidey-Sandbox"
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ 6 -eq 0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
+ [[ true == true ]]
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console --verbose
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ oIFS=' 	
'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ for xitem in "${@}"
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ -n {
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ IFS==
  "vendor": "fortinet",
+ read -r key value
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
+ local count=17
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ ((  count == 0  ))
  set alias "User LAN"
 next
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
end

+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
config firewall address
 edit "Branch-Gateway"
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ newline
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
++ export console_location=console
  set comment "Branch NAT"
+ local count=1
 next
++ IFS=,
++ console_location=console
+ (( i = 0 ))
end

+ (( i < count ))
config firewall address
 edit "IronMan-HQ"
++ mkdir -p console
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ echo
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ (( i++ ))
+ (( i < count ))
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'prompt_message=Enter configuration file to be parsed: '

config system interface
 edit "wan1"
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
  set ip 198.51.100.75 255.255.255.0
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
  set alias "Branch ISP"
+ [[ -z fortinet ]]
 next
 edit "internal"
+ declare -a execute__netwowrk_extract
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
+ [[ true == true ]]
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end
+ newline

config firewall address
+ local count=1
 edit "IronMan-HQ"
+ (( i = 0 ))
  set subnet 10.0.0.1 255.255.255.255
+ (( i < count ))
  set comment "Main node at Stark Tower"
 next
+ echo
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
+ (( i++ ))
 next
+ (( i < count ))
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
  set comment "Backup uplink for Milano crew"
 next
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
end'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ search =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --config=configs/misc/fw3.cfg
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ newline
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ [[ false == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console
+ IFS==
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console ]]
+ read -r key value
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ mktemp -d
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ echo -e --verbose
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-branch-vpn-01.cfg.console
++ export divisor=--MTc0OTAwNDc1NTU1NDk2MjAwMAo--
++ divisor=--MTc0OTAwNDc1NTU1NDk2MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2qHuD1b0eb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2qHuD1b0eb
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local 'extracted_configuration={
+ [[ verbose =~ ^(console|o)$ ]]
+ export 'nl=\n'
  "vendor": "fortinet",
+ nl='\n'
+ [[ verbose =~ ^(export|r)$ ]]
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
++ dirname -- ./scripts/network-extract.shell
+ source ./scripts/devops-resources.shell
}
+ [[ verbose =~ ^(extract|x)$ ]]

#hostname="fg-campus-core"
#model="FortiGate-200F"
++ alias network-configs--helper=network_configs__helper
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]

++ [[ -n '' ]]
config system interface
+ [[ verbose =~ ^(search|s)$ ]]
 edit "core"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ [[ verbose == \h\e\l\p ]]
 next
 edit "wifi"
+ [[ verbose == \d\e\b\u\g ]]
  set ip 192.168.100.100 255.255.255.0
++ [[ 5 -lt 4 ]]
  set alias "Wireless VLAN"
 next
+ [[ verbose == \d\r\y\-\r\u\n ]]
end

config firewall address
+ [[ verbose == \v\e\r\b\o\s\e ]]
 edit "Shield-WiFi"
++ alias network-extract--helper=network_extract__helper
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ local verbose=true
 next
++ alias detect-vendor=detect_vendor
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ IFS=' 	
  set comment "Guest WiFi node"
'
 next
++ alias exit-error=exit_error
end
+ [[ -z '' ]]

+ debug=false
config firewall address
 edit "Cap-HQ"
+ [[ -z '' ]]
  set subnet 192.168.1.11 255.255.255.255
+ dry_run=false
  set comment "Captain America’s secure endpoint"
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
 next
++ alias list-file=list_file
+ [[ -z '' ]]
+ alias serialize-object=serialize_objects
 edit "Vision-Link"
+ local export_objects=false
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
++ alias log-error=log_error
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console ]]
 next
+ [[ -z '' ]]
 edit "Hawkeye-Nest"
+ script_helper=false
  set subnet 172.16.1.6 255.255.255.255
++ alias log-info=log_info
  set comment "Remote sniper node"
 next
+ [[ false == true ]]
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
++ alias log-warn=log_warn
  set comment "Wanda’s chaos relay"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 next
end'
+ [[ -z .cache/ips.list ]]
++ alias print-message=message
+ search_terms=()
+ result=0
++ alias print-newline=newline
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ .cache/ips.list != *,* ]]
  "version": "",
  "domain": "",
+ mapfile -t search_terms
  "hostname": "fg-campus-core"
}
++ alias pause=pause

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
++ alias print-line=print
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

++ alias print-file=print_file
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
++ alias relative-configpath=relative_configpath
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
+ [[ extract =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z x ]]
+ [[ extract =~ ^(export|r)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ extract =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ mkdir -p logs
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ export LC_ALL=C
+ [[ extract =~ ^(platform|p)$ ]]
++ LC_ALL=C
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export 'nl=\n'
+ IFS==
++ nl='\n'
+ read -r key value
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ sed '1{/^[[:space:]]*$/d;}'
end'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ result=0
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n {
+ exit 0
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qWxMO5P58o ]]
  "hostname": "fg-campus-core"
}

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qWxMO5P58o
#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

++ tr -d '\r'
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
++ grep -v '^\s*$'
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
++ echo -e --platform=cisco
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
++ grep -v '^#'
end'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline 2
+ local count=2
+ [[ platform =~ ^(config|c)$ ]]
+ local first_search_entry=10.0.0.1
+ (( i = 0 ))
+ [[ platform =~ ^(console|o)$ ]]
+ local last_search_entry=203.0.113.25
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ platform =~ ^(extract|x)$ ]]
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_platform=cisco
+ echo
+ [[ platform =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Search Pattern: [ .cache/ips.list ]'
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ local count=17
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ ((  count == 0  ))
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ IFS=,
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ which awk
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
++ export actions_logfile=console/run.console
+ [[ logger == \h\e\l\p ]]
++ actions_logfile=console/run.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ touch console/run.console
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ final_output=.cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ extract_location=.cache/resources/misc/fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --verbose
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
++ dirname .cache/resources/misc/fw1.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-campus-core.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+++ date +%s%N
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ output_dir=.cache/resources/misc
+ search_terms=()
+ [[ ! -d .cache/resources/misc ]]
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+++ base64
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+++ tr -dc a-zA-Z0-9
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
++ tr -d '\r'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QcX97OIgc1 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QcX97OIgc1
++ grep -v '^\s*$'
++ grep -v '^#'
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ local target_config=configs/misc/switch1.conf

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ config =~ ^(console|o)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ [[ config =~ ^(export|r)$ ]]
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
+ [[ config =~ ^(extract|x)$ ]]
end'
+ [[ config =~ ^(logger|l)$ ]]
+ result=0
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ config =~ ^(search|s)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ [[ config == \h\e\l\p ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ config == \d\e\b\u\g ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ config == \d\r\y\-\r\u\n ]]
config firewall policy
 edit 13
+ [[ config == \v\e\r\b\o\s\e ]]
  set name "Remote NAT"
  set srcintf "dmz"
+ for xitem in "${@}"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
+ IFS==
  set action accept
+ read -r key value
  set logtraffic all
 next
end ]]
++ export divisor=--MTc0OTAwNDc1NTU3NTcwOTAwMAo--
++ divisor=--MTc0OTAwNDc1NTU3NTcwOTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
++ alias parse-listings--helper=parse_listings__helper
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ alias serialize-object=serialize_objects
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ alias parse-cisco=main
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ [[ -z x ]]
+ export logs_location=logs
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
++ which awk
+ logs_location=logs
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ mkdir -p logs
+ ls -al --color=auto configs/misc/fw3.cfg
+ newline 2
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local count=2
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local extract_location=.cache/resources/misc/switch1.conf
+ echo
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ echo -e --platform=cisco
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
++ which awk
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ newline
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ local count=1
+ extract_location=.cache/resources/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ dirname .cache/resources/misc/fw3.cfg
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fg-testing-config.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
++ echo -e --config=configs/misc/switch3.conf
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oxmS2J1hYw ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oxmS2J1hYw
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ config =~ ^(config|c)$ ]]
}

object-group network Metropolis-Internal
+ local target_config=configs/misc/switch3.conf
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ [[ config =~ ^(console|o)$ ]]
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ [[ config =~ ^(export|r)$ ]]

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

+ [[ config =~ ^(extract|x)$ ]]
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

+ [[ config =~ ^(logger|l)$ ]]
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ print '{
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
  "model": "",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local verbose=true

object-group network Metropolis-Internal
+ IFS=' 	
'
 description Core internal LAN for application clusters
+ [[ -z '' ]]
 network-object host 10.0.2.3
+ debug=false
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ [[ -z '' ]]
 network-object host 198.51.100.75
+ dry_run=false
 network-object host 203.0.113.25

+ [[ -z true ]]
object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ -z '' ]]
 network-object host 172.18.1.20
+ export console_output=false
 network-object host 192.168.1.10
+ console_output=false

object network Kent-Server
 host 10.0.2.3
+ [[ -z '' ]]
 description Internal mail & identity services
+ local export_objects=false

object network Krypton-Gateway
 host 203.0.113.25
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console ]]
 description Secure NAT boundary for cloud access

+ [[ -z '' ]]
object network External-Failover
+ script_helper=false
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ false == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ -f .cache/ips.list ]]
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
+ [[ .cache/ips.list != *,* ]]
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ mapfile -t search_terms
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
++ echo -e --extract=.cache/resources/misc/switch3.conf
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
++ tr -d '\r'
++ which awk
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ newline 2
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=2
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ echo
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
++ echo -e --platform=cisco
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ local 'indent=            '
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ true == true ]]
+ local count=17
++ sed -e '1s|^\(-\)\{1,\}||'
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ [[ -z configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw1.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ print '{
  "vendor": "cisco",
+ [[ logger =~ ^(extract|x)$ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

+ [[ logger =~ ^(logger|l)$ ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ logger =~ ^(platform|p)$ ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
+ [[ logger =~ ^(search|s)$ ]]
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
+ [[ logger == \h\e\l\p ]]
 host 172.16.0.5
 description Internet firewall handoff
+ [[ logger == \d\e\b\u\g ]]

+ [[ logger == \d\r\y\-\r\u\n ]]
object-group network Shield-WiFi
+ [[ logger == \v\e\r\b\o\s\e ]]
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ for xitem in "${@}"
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
+ IFS==
 description Guest NAT'
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname .cache/resources/misc/switch1.conf
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QuZOBTPmbb ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QuZOBTPmbb
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ local count=1
++ grep -v '^#'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ local 'prompt_message=Enter configuration file to be parsed: '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--fw3.cfg.console
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ IFS=,
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VQgisiVZFr ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VQgisiVZFr
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

+ sed '1{/^[[:space:]]*$/d;}'
interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch1.conf.console
++ which awk
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.twsXgBP5q1 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.twsXgBP5q1
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
+ sed '1{/^[[:space:]]*$/d;}'
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.84IUA4Lrap/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2qHuD1b0eb ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2qHuD1b0eb
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jNNdYsb1A1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jNNdYsb1A1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ mktemp -d
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UuDAuPKYM5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UuDAuPKYM5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mktemp -d
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AVwIonUXL0
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AVwIonUXL0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XYQRE0hkjp
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XYQRE0hkjp
++ alias pause=pause
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias print-line=print
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ [[ -n '' ]]
++ alias system-metrics=system_metrics
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HbNuwtgmdN
++ alias detect-vendor=detect_vendor
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HbNuwtgmdN
++ mktemp -d
++ alias exit-error=exit_error
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias list-file=list_file
+ set -euo pipefail
+ export LC_ALL=C
+++ date +%s%N
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ LC_ALL=C
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+++ base64
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+++ tr -dc a-zA-Z0-9
++ alias relative-configpath=relative_configpath
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias system-metrics=system_metrics
++ alias exit-error=exit_error
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ mktemp -d
++ alias list-file=list_file
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ alias log-error=log_error
++ nl='\n'
++ alias log-info=log_info
++ export cache_location=.cache
++ alias log-warn=log_warn
++ cache_location=.cache
++ alias print-message=message
++ export logs_location=logs
++ alias print-newline=newline
++ logs_location=logs
++ mkdir -p logs
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ezwoiqO8cP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ezwoiqO8cP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ alias system-metrics=system_metrics
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias validate-address=validate_address
++ [[ 5 -lt 4 ]]
++ alias warning-message=warning
++ export jobs_location=jobs
++ export LC_ALL=C
++ LC_ALL=C
++ alias detect-vendor=detect_vendor
++ export 'nl=\n'
++ nl='\n'
++ jobs_location=jobs
++ export cache_location=.cache
++ alias exit-error=exit_error
++ mkdir -p jobs
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+++ date +%s%N
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--MTc0OTAwNDc1NjUxMjk5MTAwMAo--
++ divisor=--MTc0OTAwNDc1NjUxMjk5MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ base64
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kIcBmuypqw
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kIcBmuypqw
+++ tr -dc a-zA-Z0-9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ alias serialize-object=serialize_objects
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ alias parse-cisco=main
++ export console_location=console
++ console_location=console
++ alias print-file=print_file
++ mkdir -p console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias relative-configpath=relative_configpath
+ mkdir -p logs
++ alias system-metrics=system_metrics
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export divisor=--MTc0OTAwNDc1NjUyMDg4MjAwMAo--
++ divisor=--MTc0OTAwNDc1NjUyMDg4MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ script_filename=network-extract.shell
+ set -euo pipefail
++ touch console/run.console
++ export console_location=console
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
+ export LC_ALL=C
+ script_filename=network-extract
+ export LC_ALL=C
++ console_location=console
+ LC_ALL=C
+ LC_ALL=C
+ export network_extract__console=console/network-extract.console
++ mkdir -p console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ alias serialize-object=serialize_objects
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ mktemp -d
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ mktemp -d
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qaRapE7qmf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qaRapE7qmf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export targets_location=targets
+ export 'nl=\n'
++ targets_location=targets
+ nl='\n'
++ export targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
+ source ./scripts/devops-resources.shell
++ targets_logfile=.cache/targets.jobs
++ actions_logfile=console/run.console
++ touch console/run.console
++ export actions_logfile=console/run.console
++ export console_location=console
++ console_location=console
++ [[ -n '' ]]
++ mkdir -p console
++ actions_logfile=console/run.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ touch console/run.console
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bV5j02BY6F
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bV5j02BY6F
+ [[ 7 -eq 0 ]]
++ alias detect-vendor=detect_vendor
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ryrkc2wivx/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias exit-error=exit_error
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console --export --verbose
++ alias list-file=list_file
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-error=log_error
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lmmeQpGbu2
++ [[ 5 -lt 4 ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lmmeQpGbu2
++ alias log-info=log_info
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias log-warn=log_warn
++ alias detect-vendor=detect_vendor
+ export 'nl=\n'
+ oIFS=' 	
++ alias print-message=message
++ alias exit-error=exit_error
'
++ alias print-newline=newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SOekcTfFp3
+ nl='\n'
+ for xitem in "${@}"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SOekcTfFp3
+ source ./scripts/devops-resources.shell
+ IFS==
+ read -r key value
++ alias pause=pause
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias list-file=list_file
+ export 'nl=\n'
++ alias print-line=print
+ nl='\n'
++ [[ -n '' ]]
++ alias log-error=log_error
+ source ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ actions_logfile=console/run.console
++ alias log-info=log_info
++ touch console/run.console
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
++ alias print-file=print_file
++ [[ -n '' ]]
+ script_filename=network-extract
++ alias log-warn=log_warn
+ export network_extract__console=console/network-extract.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias detect-vendor=detect_vendor
+ network_extract__console=console/network-extract.console
++ alias print-message=message
++ alias relative-configpath=relative_configpath
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias print-newline=newline
+ touch console/network-extract.console
++ alias detect-vendor=detect_vendor
++ alias pause=pause
++ alias exit-error=exit_error
++ alias system-metrics=system_metrics
++ alias print-line=print
++ alias list-file=list_file
++ alias log-error=log_error
++ alias print-file=print_file
++ alias log-info=log_info
++ alias list-file=list_file
++ alias relative-configpath=relative_configpath
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias validate-address=validate_address
++ alias print-message=message
++ alias log-info=log_info
++ alias print-newline=newline
++ alias warning-message=warning
++ alias log-warn=log_warn
++ alias system-metrics=system_metrics
++ export LC_ALL=C
++ LC_ALL=C
++ alias print-message=message
++ export 'nl=\n'
++ alias pause=pause
++ nl='\n'
++ alias print-newline=newline
++ export cache_location=.cache
++ cache_location=.cache
++ alias print-line=print
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias pause=pause
++ alias print-file=print_file
++ alias print-line=print
++ alias validate-address=validate_address
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias warning-message=warning
++ alias relative-configpath=relative_configpath
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias system-metrics=system_metrics
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias system-metrics=system_metrics
++ mkdir -p logs
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ export 'nl=\n'
++ cache_location=.cache
++ nl='\n'
++ export logs_location=logs
++ export cache_location=.cache
++ logs_location=logs
++ cache_location=.cache
++ export logs_location=logs
++ mkdir -p logs
++ logs_location=logs
++ mkdir -p logs
+++ date +%s%N
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_location=targets
++ targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wiyfowste5/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ oIFS=' 	
++ export jobs_location=jobs
'
++ jobs_location=jobs
++ mkdir -p jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ date +%s%N
++ export divisor=--MTc0OTAwNDc1NjU0MzgxODAwMAo--
++ divisor=--MTc0OTAwNDc1NjU0MzgxODAwMAo--
+ source ./scripts/devops-helpers.shell
+++ date +%s%N
+++ date +%s%N
++ mktemp -d
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list
+++ base64
+++ base64
+++ tr -dc a-zA-Z0-9
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ export console_location=console
++ targets_location=targets
++ console_location=console
++ export targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
++ export console_location=console
++ mkdir -p console
++ console_location=console
+ [[ search =~ ^(console|o)$ ]]
++ mkdir -p console
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list
++ alias network-configs--helper=network_configs__helper
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.guQ4pGBSu6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.guQ4pGBSu6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ [[ -z x ]]
+ nl='\n'
+ export logs_location=logs
+ source ./scripts/devops-resources.shell
+ logs_location=logs
+ mkdir -p logs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ export divisor=--MTc0OTAwNDc1NjU1MTg4NzAwMAo--
++ divisor=--MTc0OTAwNDc1NjU1MTg4NzAwMAo--
++ alias exit-error=exit_error
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
+++ date +%s%N
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ export divisor=--MTc0OTAwNDc1NjU1MjQ0OTAwMAo--
++ divisor=--MTc0OTAwNDc1NjU1MjQ0OTAwMAo--
++ alias print-message=message
++ export divisor=--MTc0OTAwNDc1NjU1MjkzNDAwMAo--
++ divisor=--MTc0OTAwNDc1NjU1MjkzNDAwMAo--
++ alias print-newline=newline
+ source ./scripts/devops-helpers.shell
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-helpers.shell
++ alias pause=pause
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ [[ -n '' ]]
++ alias print-line=print
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-file=print_file
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias network-configs--helper=network_configs__helper
++ alias system-metrics=system_metrics
+ [[ search =~ ^(platform|p)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
++ alias validate-address=validate_address
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list
+++ base64
++ alias warning-message=warning
+ [[ search == \h\e\l\p ]]
++ export actions_logfile=console/run.console
+ [[ search == \d\e\b\u\g ]]
++ export LC_ALL=C
++ actions_logfile=console/run.console
++ LC_ALL=C
+ [[ search == \d\r\y\-\r\u\n ]]
++ touch console/run.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ alias serialize-object=serialize_objects
+ for xitem in "${@}"
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ export actions_logfile=console/run.console
++ cache_location=.cache
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ touch console/run.console
++ export logs_location=logs
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ actions_logfile=console/run.console
+ IFS==
++ logs_location=logs
+ read -r key value
++ touch console/run.console
++ mkdir -p logs
++ alias network-extract--helper=network_extract__helper
+++ tr -dc a-zA-Z0-9
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
+ script_filename=network-extract.shell
+ [[ -z x ]]
+ script_filename=network-extract
+ export logs_location=logs
+ logs_location=logs
+ export network_extract__console=console/network-extract.console
+ mkdir -p logs
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0OTAwNDc1NjU2MDA4ODAwMAo--
++ divisor=--MTc0OTAwNDc1NjU2MDA4ODAwMAo--
++ export targets_location=targets
++ targets_location=targets
+ source ./scripts/devops-helpers.shell
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ [[ -n '' ]]
++ export targets_location=targets
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ targets_location=targets
++ __DEVOPS_HELPERS_SOURCED=1
++ export targets_logfile=.cache/targets.jobs
++ [[ 5 -lt 4 ]]
++ targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ export targets_location=targets
++ targets_location=targets
++ export jobs_location=jobs
++ export targets_logfile=.cache/targets.jobs
++ jobs_location=jobs
++ targets_logfile=.cache/targets.jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ date +%s%N
+++ date +%s%N
+ alias parse-cisco=main
+ [[ 7 -eq 0 ]]
+ [[ -z x ]]
+ script_filename=network-extract.shell
+ export logs_location=logs
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ set -euo pipefail
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.n2jy5ltdkq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract
+ export LC_ALL=C
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ LC_ALL=C
+ logs_location=logs
+ network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ oIFS=' 	
+++ base64
'
+ for xitem in "${@}"
+ network_extract__console=console/network-extract.console
+ mkdir -p logs
+ IFS==
+ read -r key value
+ touch console/network-extract.console
+++ date +%s%N
+++ date +%s%N
+++ tr -dc a-zA-Z0-9
++ mktemp -d
+++ tr -dc a-zA-Z0-9
+++ base64
+++ base64
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lj1exwipov/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console --export --verbose
++ export divisor=--MTc0OTAwNDc1NjU3MTkxNTAwMAo--
+ oIFS=' 	
++ divisor=--MTc0OTAwNDc1NjU3MTkxNTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ read -r key value
++ export divisor=--MTc0OTAwNDc1NjU3MTg5ODAwMAo--
++ divisor=--MTc0OTAwNDc1NjU3MTg5ODAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.vxozodmxfk/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ __DEVOPS_HELPERS_SOURCED=1
+ script_filename=network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console --export --verbose
+ script_filename=network-extract
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(console|o)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(export|r)$ ]]
+ touch console/network-extract.console
+ [[ extract =~ ^(extract|x)$ ]]
+ oIFS=' 	
'
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ alias network-extract--helper=network_extract__helper
+ for xitem in "${@}"
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tw070dpquJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tw070dpquJ
+ [[ config =~ ^(export|r)$ ]]
+ set -euo pipefail
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ alias serialize-object=serialize_objects
+ LC_ALL=C
+ export 'nl=\n'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ nl='\n'
+ [[ extract =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-resources.shell
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ export divisor=--MTc0OTAwNDc1NjU3Mzc2NzAwMAo--
++ divisor=--MTc0OTAwNDc1NjU3Mzc2NzAwMAo--
++ [[ -n '' ]]
+ [[ config =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ for xitem in "${@}"
++ [[ -n '' ]]
++ alias exit-error=exit_error
+ IFS==
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
++ export divisor=--MTc0OTAwNDc1NjU3Mzk5MTAwMAo--
+ set -euo pipefail
++ divisor=--MTc0OTAwNDc1NjU3Mzk5MTAwMAo--
++ alias list-file=list_file
+ export LC_ALL=C
+ LC_ALL=C
+ source ./scripts/devops-helpers.shell
+ alias serialize-object=serialize_objects
++ alias log-error=log_error
++ alias log-info=log_info
++ [[ -n '' ]]
++ alias log-warn=log_warn
++ alias parse-listings--helper=parse_listings__helper
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-message=message
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-newline=newline
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
++ alias pause=pause
++ alias print-line=print
+ [[ -z x ]]
++ alias print-file=print_file
+ export logs_location=logs
++ alias network-configs--helper=network_configs__helper
+ logs_location=logs
+ mkdir -p logs
++ alias relative-configpath=relative_configpath
+ [[ 7 -eq 0 ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qjnra3nk5x/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console --export --verbose
++ alias system-metrics=system_metrics
++ alias network-extract--helper=network_extract__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -z x ]]
+ alias serialize-object=serialize_objects
+ export logs_location=logs
++ export 'nl=\n'
+ logs_location=logs
++ mktemp -d
++ nl='\n'
++ alias network-extract--helper=network_extract__helper
++ export cache_location=.cache
+ mkdir -p logs
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ alias serialize-object=serialize_objects
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list
++ mktemp -d
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
++ export actions_logfile=console/run.console
+ [[ search == \h\e\l\p ]]
++ actions_logfile=console/run.console
+ [[ search == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ [[ search == \d\r\y\-\r\u\n ]]
++ touch console/run.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ryrkc2wivx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ export jobs_location=jobs
+ touch console/network-extract.console
++ jobs_location=jobs
++ mkdir -p jobs
+ IFS==
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3AUw285IsZ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3AUw285IsZ
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B42RYdOEMg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B42RYdOEMg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ read -r key value
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ nl='\n'
+ [[ search =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ nl='\n'
+ [[ search =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ script_filename=network-extract.shell
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract
++ [[ -n '' ]]
+ [[ search =~ ^(export|r)$ ]]
+ export network_extract__console=console/network-extract.console
++ alias detect-vendor=detect_vendor
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(extract|x)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ touch console/network-extract.console
++ alias exit-error=exit_error
+ [[ search =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
++ alias list-file=list_file
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ search == \h\e\l\p ]]
++ alias log-error=log_error
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ search =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
++ alias print-newline=newline
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ [[ search =~ ^(search|s)$ ]]
++ alias pause=pause
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list
++ alias log-error=log_error
+ [[ search == \h\e\l\p ]]
++ alias print-line=print
+ [[ search == \d\e\b\u\g ]]
++ alias log-info=log_info
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias print-file=print_file
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias relative-configpath=relative_configpath
+ IFS==
++ alias log-warn=log_warn
+ read -r key value
++ alias print-message=message
++ alias print-newline=newline
++ alias system-metrics=system_metrics
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
+ [[ platform =~ ^(config|c)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ platform =~ ^(console|o)$ ]]
++ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(export|r)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ export 'nl=\n'
+ [[ platform =~ ^(extract|x)$ ]]
++ nl='\n'
+ [[ extract =~ ^(console|o)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ mkdir -p logs
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local target_platform=cisco
+ [[ extract =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ platform == \h\e\l\p ]]
+ LC_ALL=C
+ [[ platform == \d\e\b\u\g ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias warning-message=warning
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
++ export LC_ALL=C
+ IFS==
++ LC_ALL=C
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
+ for xitem in "${@}"
++ targets_location=targets
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract.shell
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export network_extract__console=console/network-extract.console
+ export LC_ALL=C
+ LC_ALL=C
+ network_extract__console=console/network-extract.console
+ [[ 7 -eq 0 ]]
+ touch console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ixuzgychxy/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ export console_location=console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wiyfowste5/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ console_location=console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console --export --verbose
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
++ mktemp -d
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.i4giry7pra/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ set -euo pipefail
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ export LC_ALL=C
+ LC_ALL=C
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console
++ echo -e --platform=fortinet
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ export jobs_location=jobs
++ touch console/run.console
++ jobs_location=jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CvBjOg8jb2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CvBjOg8jb2
+ [[ config =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ export 'nl=\n'
+ [[ config =~ ^(console|o)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.34EOjmUxnn
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.34EOjmUxnn
+ [[ config =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.t0quhthoiy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ alias detect-vendor=detect_vendor
+ nl='\n'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console --export --verbose
+ [[ config == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
++ alias list-file=list_file
+ source ./scripts/devops-resources.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias log-error=log_error
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias log-info=log_info
+ [[ config =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-warn=log_warn
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value
++ [[ 5 -lt 4 ]]
++ alias print-message=message
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
++ alias print-newline=newline
+ [[ config == \d\e\b\u\g ]]
++ alias detect-vendor=detect_vendor
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ for xitem in "${@}"
++ alias pause=pause
++ alias print-line=print
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ IFS==
+ [[ search == \d\e\b\u\g ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias list-file=list_file
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
++ alias log-error=log_error
++ alias relative-configpath=relative_configpath
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ [[ logger =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gvU0bUKqbt
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ logger =~ ^(extract|x)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gvU0bUKqbt
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias warning-message=warning
+ [[ platform =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console
++ export LC_ALL=C
++ LC_ALL=C
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ export divisor=--MTc0OTAwNDc1NjU5OTE2NjAwMAo--
+ [[ config =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export 'nl=\n'
++ divisor=--MTc0OTAwNDc1NjU5OTE2NjAwMAo--
+ [[ config =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ nl='\n'
+ [[ config =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(platform|p)$ ]]
+ source ./scripts/devops-resources.shell
++ nl='\n'
+ local target_platform=fortinet
+ [[ search =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ platform =~ ^(search|s)$ ]]
++ export cache_location=.cache
+ [[ search =~ ^(extract|x)$ ]]
++ cache_location=.cache
+ [[ platform == \h\e\l\p ]]
++ [[ -n '' ]]
++ export logs_location=logs
+ [[ platform == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ logs_location=logs
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ mkdir -p logs
+ [[ search =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list
+ [[ logger == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ config == \d\e\b\u\g ]]
++ export 'nl=\n'
+ [[ config == \d\r\y\-\r\u\n ]]
++ nl='\n'
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias list-file=list_file
+ for xitem in "${@}"
++ export cache_location=.cache
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
++ cache_location=.cache
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
++ alias log-error=log_error
+ [[ search =~ ^(console|o)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ logger == \d\e\b\u\g ]]
++ alias log-info=log_info
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ mkdir -p logs
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ [[ search =~ ^(logger|l)$ ]]
++ alias print-message=message
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ IFS==
+ [[ search == \d\e\b\u\g ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
++ alias pause=pause
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias print-line=print
+ read -r key value
++ alias print-file=print_file
++ alias network-extract--helper=network_extract__helper
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
+ alias serialize-object=serialize_objects
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ alias validate-address=validate_address
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ search =~ ^(extract|x)$ ]]
++ LC_ALL=C
+ [[ search =~ ^(logger|l)$ ]]
++ export 'nl=\n'
+ [[ search =~ ^(platform|p)$ ]]
++ nl='\n'
+ [[ search =~ ^(search|s)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list
++ export logs_location=logs
++ logs_location=logs
+ [[ search == \h\e\l\p ]]
++ mkdir -p logs
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export console_location=console
+ IFS==
+ read -r key value
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ console_location=console
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --export
+ mkdir -p logs
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ export jobs_location=jobs
+ [[ extract =~ ^(logger|l)$ ]]
++ jobs_location=jobs
+ [[ extract =~ ^(platform|p)$ ]]
++ mkdir -p jobs
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export actions_logfile=console/run.console
+ for xitem in "${@}"
++ actions_logfile=console/run.console
+ [[ extract =~ ^(console|o)$ ]]
++ touch console/run.console
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ search == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export actions_logfile=console/run.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config == \v\e\r\b\o\s\e ]]
++ actions_logfile=console/run.console
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ touch console/run.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ export console_location=console
+ [[ config =~ ^(config|c)$ ]]
++ console_location=console
++ mkdir -p console
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local export_objects=true
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ export =~ ^(search|s)$ ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ [[ config =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ [[ config =~ ^(platform|p)$ ]]
+ LC_ALL=C
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export divisor=--MTc0OTAwNDc1NjYxMzQ3MTAwMAo--
+ for xitem in "${@}"
++ divisor=--MTc0OTAwNDc1NjYxMzQ3MTAwMAo--
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export console_location=console
++ alias parse-listings--helper=parse_listings__helper
++ console_location=console
++ mkdir -p console
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --platform=cisco
++ echo -e --platform=cisco
+ alias serialize-object=serialize_objects
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ mktemp -d
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/misc/switch1.conf
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ export targets_location=targets
++ actions_logfile=console/run.console
++ mkdir -p console
++ targets_location=targets
++ touch console/run.console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.47mfikj1sj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z881naYldl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z881naYldl
+ [[ platform =~ ^(console|o)$ ]]
+++ date +%s%N
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ [[ config =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ touch console/network-extract.console
+ export 'nl=\n'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ nl='\n'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ source ./scripts/devops-resources.shell
+ local target_platform=cisco
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_platform=cisco
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+++ base64
++ export targets_location=targets
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ [[ platform == \h\e\l\p ]]
++ targets_location=targets
++ [[ 5 -lt 4 ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ export targets_logfile=.cache/targets.jobs
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
++ targets_logfile=.cache/targets.jobs
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias exit-error=exit_error
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
++ export actions_logfile=console/run.console
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ IFS==
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
++ actions_logfile=console/run.console
+ IFS==
+ read -r key value
++ touch console/run.console
++ alias list-file=list_file
++ alias log-error=log_error
+ [[ export =~ ^(export|r)$ ]]
++ alias log-info=log_info
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ local verbose=true
+ [[ export =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ export =~ ^(logger|l)$ ]]
++ alias log-warn=log_warn
+ [[ -z '' ]]
+ [[ export =~ ^(platform|p)$ ]]
+++ date +%s%N
+ debug=false
++ alias print-message=message
+ [[ -z '' ]]
+ [[ export =~ ^(search|s)$ ]]
+ dry_run=false
+ [[ -z true ]]
++ alias print-newline=newline
+ [[ export == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
+ [[ -z '' ]]
+ export console_output=false
+ [[ export == \d\e\b\u\g ]]
++ alias pause=pause
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list
+ console_output=false
++ alias print-line=print
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
++ alias print-file=print_file
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
++ alias relative-configpath=relative_configpath
+ IFS==
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ echo -e --platform=cisco
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list != *,* ]]
++ LC_ALL=C
+ mapfile -t search_terms
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console
+++ date +%s%N
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ export logs_location=logs
++ echo -e --platform=cisco
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.vxozodmxfk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console --export --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ targets_location=targets
++ export divisor=--MTc0OTAwNDc1NjYyOTk3MjAwMAo--
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ divisor=--MTc0OTAwNDc1NjYyOTk3MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--MTc0OTAwNDc1NjYzMzA4NzAwMAo--
++ divisor=--MTc0OTAwNDc1NjYzMzA4NzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ export divisor=--MTc0OTAwNDc1NjYzNTk4MDAwMAo--
++ divisor=--MTc0OTAwNDc1NjYzNTk4MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias network-configs--helper=network_configs__helper
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias serialize-object=serialize_objects
+++ date +%s%N
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ -z x ]]
++ alias network-configs--helper=network_configs__helper
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+++ date +%s%N
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+++ base64
+ mkdir -p logs
+++ base64
++ tr -d '\r'
++ echo -e --verbose
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ alias serialize-object=serialize_objects
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export divisor=--MTc0OTAwNDc1NjY0NDkyNzAwMAo--
+ [[ platform =~ ^(export|r)$ ]]
++ divisor=--MTc0OTAwNDc1NjY0NDkyNzAwMAo--
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local target_platform=cisco
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export divisor=--MTc0OTAwNDc1NjY0NTc3NTAwMAo--
++ divisor=--MTc0OTAwNDc1NjY0NTc3NTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ [[ 5 -lt 4 ]]
+ mkdir -p logs
+ [[ platform =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ set -euo pipefail
+ [[ platform == \v\e\r\b\o\s\e ]]
+ set -euo pipefail
+ export LC_ALL=C
+ for xitem in "${@}"
+ LC_ALL=C
+ export LC_ALL=C
+ IFS==
+ LC_ALL=C
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ alias serialize-object=serialize_objects
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ [[ platform == \h\e\l\p ]]
+ export logs_location=logs
+ [[ 7 -eq 0 ]]
+ logs_location=logs
+ [[ platform == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.c8c29mouhe/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ mkdir -p logs
+ [[ logger =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ oIFS=' 	
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console
'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ script_filename=network-extract.shell
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ script_filename=network-extract
+ [[ platform == \h\e\l\p ]]
+ export network_extract__console=console/network-extract.console
+ [[ platform == \d\e\b\u\g ]]
+ network_extract__console=console/network-extract.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ touch console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ [[ search =~ ^(config|c)$ ]]
+ local last_search_entry=10.0.0.1
+ [[ search =~ ^(console|o)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ search =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local target_platform=cisco
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ platform =~ ^(search|s)$ ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BmzYyBbQ8W
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BmzYyBbQ8W
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gwVfB5O8TT
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gwVfB5O8TT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export targets_location=targets
++ [[ -n '' ]]
++ targets_location=targets
+ export 'nl=\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ nl='\n'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ source ./scripts/devops-resources.shell
+ [[ 7 -eq 0 ]]
++ [[ -n '' ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.edkmj2fkcn/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console --export --verbose
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ oIFS=' 	
'
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias detect-vendor=detect_vendor
+ script_filename=network-extract.shell
++ alias log-error=log_error
++ alias exit-error=exit_error
+ script_filename=network-extract
++ alias log-info=log_info
+ export network_extract__console=console/network-extract.console
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ alias list-file=list_file
+ network_extract__console=console/network-extract.console
++ alias print-newline=newline
+ touch console/network-extract.console
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ extract =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ script_filename=network-extract.shell
++ alias pause=pause
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console
+ script_filename=network-extract
++ alias print-message=message
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias print-line=print
+ [[ platform == \v\e\r\b\o\s\e ]]
+ export network_extract__console=console/network-extract.console
+ for xitem in "${@}"
++ alias print-newline=newline
+ network_extract__console=console/network-extract.console
+ IFS==
+ read -r key value
+ touch console/network-extract.console
++ alias print-file=print_file
+ [[ logger =~ ^(search|s)$ ]]
++ alias pause=pause
+ [[ search =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
++ alias print-line=print
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias print-file=print_file
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias system-metrics=system_metrics
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ set -euo pipefail
+ [[ search =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ export LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
+ LC_ALL=C
++ alias system-metrics=system_metrics
+ set -euo pipefail
+ LC_ALL=C
+ [[ 7 -eq 0 ]]
+ export LC_ALL=C
++ alias validate-address=validate_address
+ LC_ALL=C
++ alias warning-message=warning
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.vee8o8ado0/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ export 'nl=\n'
++ alias validate-address=validate_address
++ nl='\n'
+ [[ platform == \h\e\l\p ]]
++ export cache_location=.cache
++ alias warning-message=warning
++ cache_location=.cache
+ [[ platform == \d\e\b\u\g ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export logs_location=logs
+ oIFS=' 	
+ [[ verbose =~ ^(config|c)$ ]]
++ logs_location=logs
'
++ mkdir -p logs
++ export 'nl=\n'
++ nl='\n'
+ for xitem in "${@}"
++ export cache_location=.cache
++ cache_location=.cache
+ IFS==
++ export logs_location=logs
+ read -r key value
++ logs_location=logs
++ mkdir -p logs
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ echo
+ [[ logger == \h\e\l\p ]]
+ (( i++ ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
++ mktemp -d
++ mktemp -d
++ mktemp -d
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console
++ echo -e --export
+ (( i < count ))
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ mkdir -p jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.47mfikj1sj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cjry2ouykk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ search =~ ^(search|s)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console --export --verbose
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ oIFS=' 	
'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nFP66iSnKB
+ [[ search == \d\e\b\u\g ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iezHSdU3Zu
+ [[ search == \d\r\y\-\r\u\n ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nFP66iSnKB
+ for xitem in "${@}"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iezHSdU3Zu
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q67CgIfcTu
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q67CgIfcTu
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export 'nl=\n'
+ oIFS=' 	
'
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ for xitem in "${@}"
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ IFS==
+ source ./scripts/devops-resources.shell
+ for xitem in "${@}"
++ [[ -n '' ]]
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local 'prompt_message=Enter configuration file to be parsed: '
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
+ IFS==
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ read -r key value
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
+ [[ search =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ [[ search =~ ^(export|r)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias log-error=log_error
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias list-file=list_file
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias list-file=list_file
+ [[ verbose =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ logger =~ ^(console|o)$ ]]
++ export divisor=--MTc0OTAwNDc1NjY2ODY3NzAwMAo--
+ for xitem in "${@}"
++ alias log-error=log_error
+ [[ search =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ alias log-warn=log_warn
+ [[ extract == \h\e\l\p ]]
++ divisor=--MTc0OTAwNDc1NjY2ODY3NzAwMAo--
++ alias log-info=log_info
++ alias print-message=message
++ alias log-info=log_info
++ mktemp -d
++ alias log-warn=log_warn
++ alias print-newline=newline
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ search == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
+ [[ search == \d\e\b\u\g ]]
++ alias print-message=message
++ alias print-newline=newline
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
++ alias pause=pause
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-line=print
++ alias pause=pause
++ __DEVOPS_HELPERS_SOURCED=1
++ alias print-line=print
++ alias pause=pause
+ [[ search == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ alias print-line=print
++ alias print-file=print_file
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias system-metrics=system_metrics
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ [[ verbose == \d\e\b\u\g ]]
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
++ alias warning-message=warning
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias validate-address=validate_address
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias network-extract--helper=network_extract__helper
++ alias warning-message=warning
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias warning-message=warning
++ mkdir -p logs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ alias serialize-object=serialize_objects
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ search =~ ^(config|c)$ ]]
++ mkdir -p logs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
+ alias parse-cisco=main
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVa2RXXYQb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVa2RXXYQb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ export jobs_location=jobs
++ jobs_location=jobs
++ alias log-error=log_error
++ mkdir -p jobs
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --export
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export jobs_location=jobs
++ alias warning-message=warning
++ export jobs_location=jobs
++ export LC_ALL=C
++ jobs_location=jobs
++ jobs_location=jobs
++ LC_ALL=C
++ mkdir -p jobs
++ mkdir -p jobs
++ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -z cisco ]]
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
++ export actions_logfile=console/run.console
+ [[ config == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
+ IFS==
++ touch console/run.console
++ export actions_logfile=console/run.console
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
++ touch console/run.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ script_filename=network-extract.shell
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ script_filename=network-extract
+ read -r key value
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ local verbose=true
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
'
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]]
+ [[ logger =~ ^(export|r)$ ]]
+ search_terms=()
+ [[ logger =~ ^(extract|x)$ ]]
+ declare -a search_terms
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list != *,* ]]
+ [[ logger =~ ^(config|c)$ ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mktemp -d
+ [[ logger =~ ^(console|o)$ ]]
++ export console_location=console
++ export console_location=console
++ console_location=console
++ console_location=console
++ mkdir -p console
++ export jobs_location=jobs
++ mkdir -p console
++ jobs_location=jobs
++ mkdir -p jobs
+ local export_objects=true
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ set -euo pipefail
+ set -euo pipefail
+ export LC_ALL=C
+ [[ export == \h\e\l\p ]]
+ LC_ALL=C
+ [[ config =~ ^(console|o)$ ]]
+ export LC_ALL=C
+ [[ export == \d\e\b\u\g ]]
+ LC_ALL=C
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
++ export targets_location=targets
+ [[ config == \h\e\l\p ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config == \d\e\b\u\g ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yyz7htu6tq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ oIFS=' 	
+ IFS==
'
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console
+ IFS==
+ [[ logger =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
++ mktemp -d
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ mktemp -d
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ date +%s%N
++ echo -e --export
+++ date +%s%N
++ export actions_logfile=console/run.console
++ export console_location=console
++ export actions_logfile=console/run.console
++ console_location=console
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ mkdir -p console
++ touch console/run.console
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mnpAVt5ZpT
++ touch console/run.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mnpAVt5ZpT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(config|c)$ ]]
++ alias list-file=list_file
+++ base64
++ alias log-error=log_error
+ [[ extract =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+++ tr -dc a-zA-Z0-9
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uRYU74Z5VB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uRYU74Z5VB
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias validate-address=validate_address
+ export 'nl=\n'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Xk6MfeUC2v
+ nl='\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Xk6MfeUC2v
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias warning-message=warning
++ [[ -n '' ]]
+ export 'nl=\n'
++ export LC_ALL=C
+ nl='\n'
++ LC_ALL=C
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ source ./scripts/devops-resources.shell
++ export 'nl=\n'
++ [[ 5 -lt 4 ]]
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias list-file=list_file
++ alias log-error=log_error
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
+ [[ extract =~ ^(platform|p)$ ]]
++ export logs_location=logs
++ alias log-warn=log_warn
++ logs_location=logs
+ [[ extract =~ ^(search|s)$ ]]
++ mkdir -p logs
++ alias print-message=message
+ [[ extract == \h\e\l\p ]]
++ alias print-newline=newline
+ [[ extract == \d\e\b\u\g ]]
++ alias pause=pause
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias print-line=print
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ IFS==
++ alias exit-error=exit_error
+ read -r key value
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias list-file=list_file
++ export actions_logfile=console/run.console
++ alias log-error=log_error
++ actions_logfile=console/run.console
++ touch console/run.console
++ export divisor=--MTc0OTAwNDc1NjY5ODQ5NTAwMAo--
++ alias log-info=log_info
++ divisor=--MTc0OTAwNDc1NjY5ODQ5NTAwMAo--
++ export targets_location=targets
++ targets_location=targets
++ alias log-warn=log_warn
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(extract|x)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ alias system-metrics=system_metrics
++ targets_logfile=.cache/targets.jobs
++ alias print-message=message
++ [[ -n '' ]]
++ alias print-newline=newline
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias pause=pause
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
++ alias validate-address=validate_address
++ alias relative-configpath=relative_configpath
+ [[ config == \h\e\l\p ]]
++ alias warning-message=warning
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export LC_ALL=C
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias parse-listings--helper=parse_listings__helper
++ LC_ALL=C
+ for xitem in "${@}"
++ export 'nl=\n'
+ [[ config =~ ^(export|r)$ ]]
++ nl='\n'
+ [[ config =~ ^(extract|x)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ config =~ ^(logger|l)$ ]]
++ export logs_location=logs
++ alias system-metrics=system_metrics
++ logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
++ export divisor=--MTc0OTAwNDc1NjY5OTU0MzAwMAo--
++ mkdir -p logs
+ [[ config =~ ^(search|s)$ ]]
++ divisor=--MTc0OTAwNDc1NjY5OTU0MzAwMAo--
+ [[ config == \h\e\l\p ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config == \d\e\b\u\g ]]
+ source ./scripts/devops-helpers.shell
++ export targets_location=targets
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
++ targets_location=targets
+ [[ extract =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ IFS==
+ [[ extract =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ export targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(console|o)$ ]]
++ alias warning-message=warning
++ targets_logfile=.cache/targets.jobs
+ [[ config == \v\e\r\b\o\s\e ]]
+++ date +%s%N
++ __DEVOPS_HELPERS_SOURCED=1
++ export LC_ALL=C
+ [[ search =~ ^(export|r)$ ]]
++ LC_ALL=C
+ [[ extract =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
++ export 'nl=\n'
+ [[ search =~ ^(extract|x)$ ]]
++ nl='\n'
++ export cache_location=.cache
+ [[ search =~ ^(logger|l)$ ]]
++ cache_location=.cache
++ export logs_location=logs
+ [[ search =~ ^(platform|p)$ ]]
++ logs_location=logs
+ alias serialize-object=serialize_objects
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ mkdir -p logs
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
+ IFS==
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+++ base64
+ alias serialize-object=serialize_objects
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ alias parse-cisco=main
+++ date +%s%N
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --platform=cisco
+++ base64
+++ date +%s%N
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ tr -dc a-zA-Z0-9
+++ base64
++ export jobs_location=jobs
++ export targets_location=targets
++ jobs_location=jobs
++ targets_location=targets
++ mkdir -p jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ alias parse-cisco=main
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0OTAwNDc1NjcwODIxMjAwMAo--
++ divisor=--MTc0OTAwNDc1NjcwODIxMjAwMAo--
++ mktemp -d
+ [[ -z x ]]
+ source ./scripts/devops-helpers.shell
+ export logs_location=logs
+ logs_location=logs
++ [[ -n '' ]]
+ mkdir -p logs
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ alias serialize-object=serialize_objects
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ set -euo pipefail
++ export divisor=--MTc0OTAwNDc1NjcxMDc3MTAwMAo--
+ export logs_location=logs
+ export LC_ALL=C
+ logs_location=logs
+ LC_ALL=C
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ divisor=--MTc0OTAwNDc1NjcxMDc3MTAwMAo--
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ source ./scripts/devops-helpers.shell
+ set -euo pipefail
+ export LC_ALL=C
++ [[ -n '' ]]
+ LC_ALL=C
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+++ date +%s%N
+ export network_extract__console=console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
++ export divisor=--MTc0OTAwNDc1NjcxMjExMzAwMAo--
++ divisor=--MTc0OTAwNDc1NjcxMjExMzAwMAo--
+ source ./scripts/devops-helpers.shell
+++ base64
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ alias serialize-object=serialize_objects
++ export console_location=console
++ export console_location=console
++ console_location=console
++ console_location=console
++ mktemp -d
++ [[ 5 -lt 4 ]]
++ mkdir -p console
++ mktemp -d
++ mkdir -p console
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.i0CvqdI1nr
+ [[ platform =~ ^(extract|x)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.i0CvqdI1nr
+ [[ platform =~ ^(logger|l)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ local target_platform=cisco
+ source ./scripts/devops-resources.shell
++ echo -e --platform=cisco
+ alias parse-cisco=main
++ alias network-configs--helper=network_configs__helper
+ script_filename=network-extract.shell
+++ tr -dc a-zA-Z0-9
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ touch console/network-extract.console
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ set -euo pipefail
++ alias print-message=message
+ export LC_ALL=C
+ LC_ALL=C
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias network-extract--helper=network_extract__helper
+ [[ -z x ]]
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ alias serialize-object=serialize_objects
+ logs_location=logs
+ mkdir -p logs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --platform=cisco
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ export network_extract__console=console/network-extract.console
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ network_extract__console=console/network-extract.console
+ [[ platform == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ touch console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
++ export console_location=console
+ [[ config =~ ^(export|r)$ ]]
++ console_location=console
+ [[ config =~ ^(extract|x)$ ]]
++ mkdir -p console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ IFS==
+ [[ 7 -eq 0 ]]
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.edkmj2fkcn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console --export --verbose
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ mkdir -p logs
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ export divisor=--MTc0OTAwNDc1NjcxOTQ5OTAwMAo--
+ [[ extract == \d\e\b\u\g ]]
++ divisor=--MTc0OTAwNDc1NjcxOTQ5OTAwMAo--
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export actions_logfile=console/run.console
++ [[ 5 -lt 4 ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ actions_logfile=console/run.console
++ touch console/run.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dk67eX4bJz
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dk67eX4bJz
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GKzlqgFPAS
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GKzlqgFPAS
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ -n '' ]]
+ export 'nl=\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias network-configs--helper=network_configs__helper
+ nl='\n'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ source ./scripts/devops-resources.shell
++ alias exit-error=exit_error
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ touch console/run.console
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
++ alias log-error=log_error
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias exit-error=exit_error
++ alias pause=pause
++ alias print-line=print
++ alias list-file=list_file
+ alias serialize-object=serialize_objects
++ alias print-file=print_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias relative-configpath=relative_configpath
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias system-metrics=system_metrics
++ tr -d '\r'
++ alias pause=pause
++ alias validate-address=validate_address
++ alias print-line=print
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ 7 -eq 0 ]]
++ LC_ALL=C
++ alias print-file=print_file
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.c8c29mouhe/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list
++ alias relative-configpath=relative_configpath
+ script_filename=network-extract.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console --export --verbose
+ script_filename=network-extract
++ grep -v '^\s*$'
+ export network_extract__console=console/network-extract.console
+ alias parse-cisco=main
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias system-metrics=system_metrics
+ [[ -z x ]]
+ export logs_location=logs
+ oIFS=' 	
+ logs_location=logs
'
+ mkdir -p logs
+ for xitem in "${@}"
+ IFS==
+ [[ 7 -eq 0 ]]
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2gdr89layx/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xFj9um3CRh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xFj9um3CRh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export 'nl=\n'
++ nl='\n'
++ [[ -n '' ]]
++ export actions_logfile=console/run.console
++ export cache_location=.cache
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ cache_location=.cache
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
++ [[ 5 -lt 4 ]]
++ logs_location=logs
+ [[ platform =~ ^(config|c)$ ]]
++ mkdir -p logs
++ alias detect-vendor=detect_vendor
+ [[ platform =~ ^(console|o)$ ]]
++ touch console/run.console
++ grep -v '^#'
++ alias exit-error=exit_error
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ [[ platform =~ ^(extract|x)$ ]]
++ alias log-error=log_error
+ [[ platform =~ ^(extract|x)$ ]]
+ script_filename=network-extract.shell
+ [[ platform =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ [[ platform =~ ^(logger|l)$ ]]
+ script_filename=network-extract
++ alias log-warn=log_warn
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export network_extract__console=console/network-extract.console
+ local target_platform=cisco
++ alias print-message=message
+ network_extract__console=console/network-extract.console
+ [[ platform =~ ^(search|s)$ ]]
++ alias print-newline=newline
+ touch console/network-extract.console
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ echo -e --platform=cisco
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export targets_location=targets
++ export cache_location=.cache
++ targets_location=targets
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ export targets_logfile=.cache/targets.jobs
++ mkdir -p logs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ echo -e --platform=cisco
++ export targets_logfile=.cache/targets.jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list
++ targets_logfile=.cache/targets.jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local target_platform=cisco
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qjnra3nk5x/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
+ IFS==
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ oIFS=' 	
'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ export network_extract__console=console/network-extract.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ network_extract__console=console/network-extract.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ touch console/network-extract.console
+ read -r key value
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ newline
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export targets_location=targets
+ [[ logger == \v\e\r\b\o\s\e ]]
++ targets_location=targets
+ for xitem in "${@}"
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ date +%s%N
+ [[ 7 -eq 0 ]]
+++ date +%s%N
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.lj1exwipov/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console --export --verbose
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ local target_platform=cisco
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.n2jy5ltdkq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console --export --verbose
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+++ base64
+ [[ platform =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ platform == \h\e\l\p ]]
+ oIFS=' 	
+ [[ platform == \d\e\b\u\g ]]
'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
++ export console_location=console
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
++ console_location=console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console
++ mkdir -p console
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0OTAwNDc1Njc0MDIzODAwMAo--
++ divisor=--MTc0OTAwNDc1Njc0MDIzODAwMAo--
+ source ./scripts/devops-helpers.shell
++ export divisor=--MTc0OTAwNDc1NjczOTg1NTAwMAo--
++ divisor=--MTc0OTAwNDc1NjczOTg1NTAwMAo--
+ [[ platform == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
+ [[ search =~ ^(console|o)$ ]]
++ actions_logfile=console/run.console
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(config|c)$ ]]
++ touch console/run.console
+ [[ search =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list
+ [[ platform == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ export targets_location=targets
+ IFS==
++ targets_location=targets
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(config|c)$ ]]
++ targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export actions_logfile=console/run.console
++ export divisor=--MTc0OTAwNDc1Njc0NTI0NzAwMAo--
++ actions_logfile=console/run.console
++ divisor=--MTc0OTAwNDc1Njc0NTI0NzAwMAo--
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export actions_logfile=console/run.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z x ]]
++ actions_logfile=console/run.console
+++ date +%s%N
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ [[ config == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
+ logs_location=logs
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ mkdir -p logs
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list
+ alias serialize-object=serialize_objects
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ search == \h\e\l\p ]]
+++ base64
++ export targets_location=targets
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
+ IFS==
+ [[ logger =~ ^(console|o)$ ]]
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ export targets_location=targets
+ [[ search == \d\r\y\-\r\u\n ]]
++ targets_location=targets
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export targets_logfile=.cache/targets.jobs
+ IFS==
++ targets_logfile=.cache/targets.jobs
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console
+ touch console/network-extract.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local export_objects=true
+++ base64
++ export divisor=--MTc0OTAwNDc1Njc1NDEzNDAwMAo--
++ divisor=--MTc0OTAwNDc1Njc1NDEzNDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ script_filename=network-extract
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
++ export targets_location=targets
+ [[ extract == \d\e\b\u\g ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ targets_location=targets
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export targets_logfile=.cache/targets.jobs
+ network_extract__console=console/network-extract.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(console|o)$ ]]
+ touch console/network-extract.console
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console
+ [[ config == \d\e\b\u\g ]]
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ date +%s%N
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console
+ IFS==
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\r\y\-\r\u\n ]]
+ local first_search_entry=10.0.1.2
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ IFS==
+ read -r key value
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+++ base64
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ mkdir -p logs
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
++ echo -e --export
+ [[ export =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local count=1
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ echo
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ local export_objects=true
+ IFS==
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ local last_search_entry=10.0.1.2
+ [[ export =~ ^(platform|p)$ ]]
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+++ tr -dc a-zA-Z0-9
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]'
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ] ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+++ date +%s%N
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]'
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]'
++ export divisor=--MTc0OTAwNDc1Njc1OTQ5OTAwMAo--
+ local count=1
++ divisor=--MTc0OTAwNDc1Njc1OTQ5OTAwMAo--
+ [[ logger == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ for xitem in "${@}"
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ IFS==
+ read -r key value
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
+ source ./scripts/devops-helpers.shell
++ echo -e --verbose
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
++ alias network-extract--helper=network_extract__helper
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --export
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ export divisor=--MTc0OTAwNDc1Njc2Mjg0ODAwMAo--
++ divisor=--MTc0OTAwNDc1Njc2Mjg0ODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
++ export divisor=--MTc0OTAwNDc1Njc2NjYwMDAwMAo--
++ [[ 5 -lt 4 ]]
+ newline
++ divisor=--MTc0OTAwNDc1Njc2NjYwMDAwMAo--
+ [[ export =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ alias parse-cisco=main
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ [[ config =~ ^(extract|x)$ ]]
+ logs_location=logs
+ local count=1
++ alias network-configs--helper=network_configs__helper
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ config == \h\e\l\p ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ config == \d\e\b\u\g ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/devops-helpers.shell
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ for xitem in "${@}"
+ IFS==
++ [[ -n '' ]]
+ read -r key value
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ [[ verbose =~ ^(console|o)$ ]]
+ mkdir -p logs
+ [[ verbose =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ echo -e --platform=cisco
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ alias network-configs--helper=network_configs__helper
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --export
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list != *,* ]]
+ for xitem in "${@}"
+ mapfile -t search_terms
+ IFS==
+ alias serialize-object=serialize_objects
+ read -r key value
+ alias parse-cisco=main
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(config|c)$ ]]
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ export logs_location=logs
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
'
+ logs_location=logs
+ [[ export =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(logger|l)$ ]]
+ debug=false
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ mkdir -p logs
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ export == \d\e\b\u\g ]]
+ dry_run=false
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ export console_output=false
+ console_output=false
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ export =~ ^(search|s)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]]
+ local export_objects=true
+ search_terms=()
+ [[ -z x ]]
+ [[ export =~ ^(extract|x)$ ]]
+ export logs_location=logs
+ declare -a search_terms
+ logs_location=logs
+ [[ export == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]]
+ mkdir -p logs
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ export =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ tr -d '\r'
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ grep -v '^\s*$'
+ for xitem in "${@}"
++ tr -d '\r'
+ IFS==
+ read -r key value
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --verbose
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ grep -v '^\s*$'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ tr -d '\r'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract
+ IFS==
+ read -r key value
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ grep -v '^\s*$'
++ echo -e --platform=cisco
+ output_dir=reports/10.0.0.1/cisco
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ local first_search_entry=10.10.10.10
+ [[ export =~ ^(export|r)$ ]]
+ script_filename=network-extract.shell
+ local last_search_entry=10.10.10.10
+ script_filename=network-extract
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ export network_extract__console=console/network-extract.console
+ [[ true == true ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
++ grep -v '^#'
+ local count=1
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ cfg == \c\f\g ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ local export_objects=true
+ (( i = 0 ))
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
++ echo -e --verbose
++ echo -e --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ newline
+ local count=1
+ script_filename=network-extract
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ mktemp -d
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
+ local first_search_entry=172.16.0.5
+ local last_search_entry=172.16.0.5
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2gdr89layx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console --export --verbose
+ [[ verbose =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(platform|p)$ ]]
+ oIFS=' 	
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
'
+ local first_search_entry=10.0.2.3
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ local verbose=true
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ set -euo pipefail
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export LC_ALL=C
+ local verbose=true
+ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ debug=false
+ [[ -z '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0SyIHpt8tf
+ [[ verbose =~ ^(export|r)$ ]]
+ set -euo pipefail
+ dry_run=false
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0SyIHpt8tf
+ export LC_ALL=C
+ [[ 7 -eq 0 ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ LC_ALL=C
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.n2jy5ltdkq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i = 0 ))
+ local last_search_entry=10.0.2.3
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ platform =~ ^(console|o)$ ]]
+ set -euo pipefail
+ (( i < count ))
+ IFS=' 	
+ export 'nl=\n'
+ [[ platform =~ ^(export|r)$ ]]
'
+ nl='\n'
+ export LC_ALL=C
+ [[ verbose =~ ^(logger|l)$ ]]
+ LC_ALL=C
+ oIFS=' 	
+ [[ platform =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ -z true ]]
'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
++ [[ -n '' ]]
+ local target_platform=cisco
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ true == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ platform == \h\e\l\p ]]
+ debug=false
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ [[ platform == \d\e\b\u\g ]]
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i++ ))
+ export console_output=false
+ for xitem in "${@}"
+ dry_run=false
++ alias detect-vendor=detect_vendor
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
++ alias exit-error=exit_error
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ] ]]
+ console_output=false
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
++ alias list-file=list_file
+ [[ -z true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local verbose=true
+ IFS=' 	
+ local count=1
+ script_filename=network-extract.shell
'
++ alias log-error=log_error
+ [[ -z '' ]]
+ ((  count == 0  ))
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ debug=false
+ [[ -z '' ]]
++ dirname -- ./scripts/network-extract.shell
+ dry_run=false
+ [[ -z true ]]
++ alias log-info=log_info
+ [[ -z '' ]]
+ export console_output=false
+ [[ logger =~ ^(config|c)$ ]]
+ console_output=false
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-warn=log_warn
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console
++ alias print-message=message
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ alias print-newline=newline
++ mktemp -d
+ [[ -z true ]]
++ alias pause=pause
+ script_helper=false
+ [[ logger == \h\e\l\p ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ export console_output=false
+ [[ logger == \d\e\b\u\g ]]
++ alias print-line=print
+ [[ -z cisco ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ mktemp -d
+ console_output=false
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console
+ newline
+ [[ false == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias print-file=print_file
++ mktemp -d
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ output_dir=reports/10.0.1.2/fortinet
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]]
+ newline
++ alias system-metrics=system_metrics
+ [[ -z '' ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose =~ ^(export|r)$ ]]
++ echo -e --verbose
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]]
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ [[ cfg == \c\f\g ]]
+ read -r key value
+ search_terms=()
+ (( i = 0 ))
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ script_helper=false
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]]
++ alias validate-address=validate_address
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list != *,* ]]
++ export cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
++ cache_location=.cache
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ -z cisco ]]
++ mkdir -p logs
+ [[ true == true ]]
+ mapfile -t search_terms
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ declare -a search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo
+ (( i++ ))
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qjnra3nk5x/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]]
+ search_terms=()
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console --export --verbose
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list != *,* ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ mapfile -t search_terms
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ local SCRIPT_DIR=./scripts
+ read -r key value
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ echo -e --export
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EuJqXuURFa
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7uJ69dzzHH
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console
++ tr -d '\r'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RreYxmmMZa
+ [[ logger =~ ^(platform|p)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EuJqXuURFa
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RreYxmmMZa
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7uJ69dzzHH
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ logger == \h\e\l\p ]]
+ export 'nl=\n'
+ nl='\n'
++ tr -d '\r'
+ nl='\n'
+ [[ logger == \d\e\b\u\g ]]
+ source ./scripts/devops-resources.shell
+ [[ logger == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ source ./scripts/devops-resources.shell
+ read -r key value
++ [[ -n '' ]]
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
+ output_dir=reports/10.10.10.10/cisco
++ alias log-info=log_info
++ alias log-info=log_info
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ grep -v '^\s*$'
++ alias log-warn=log_warn
++ tr -d '\r'
++ alias print-message=message
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias list-file=list_file
++ alias pause=pause
++ alias log-error=log_error
++ export jobs_location=jobs
++ grep -v '^\s*$'
++ alias print-line=print
++ alias log-info=log_info
++ jobs_location=jobs
++ alias print-message=message
++ mkdir -p jobs
++ alias log-warn=log_warn
++ alias print-newline=newline
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias print-message=message
++ alias pause=pause
++ alias print-newline=newline
++ alias print-line=print
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias pause=pause
++ alias relative-configpath=relative_configpath
++ alias print-line=print
++ grep -v '^\s*$'
++ grep -v '^#'
++ alias print-file=print_file
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ grep -v '^#'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export 'nl=\n'
++ nl='\n'
++ export LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
++ export cache_location=.cache
++ LC_ALL=C
++ cache_location=.cache
+ [[ logger =~ ^(console|o)$ ]]
++ tr -d '\r'
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(export|r)$ ]]
++ export logs_location=logs
+ [[ logger =~ ^(extract|x)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(logger|l)$ ]]
++ grep -v '^#'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ grep -v '^\s*$'
++ echo -e --export
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias validate-address=validate_address
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias warning-message=warning
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export LC_ALL=C
++ LC_ALL=C
+ IFS==
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ grep -v '^#'
+ read -r key value
++ export logs_location=logs
++ logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ which awk
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export console_location=console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ console_location=console
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ mkdir -p console
+ [[ export == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ local first_search_entry=10.0.0.1
+ [[ export == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
+ [[ export == \v\e\r\b\o\s\e ]]
+ local last_search_entry=10.0.0.1
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ IFS==
+ read -r key value
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ] ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ local first_search_entry=172.18.1.20
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ local last_search_entry=172.18.1.20
+ [[ search == \d\e\b\u\g ]]
+ local count=1
+ [[ search == \d\r\y\-\r\u\n ]]
+ local first_search_entry=172.16.1.6
++ dirname -- ./scripts/network-extract.shell
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ ((  count == 0  ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list
+ local last_search_entry=172.16.1.6
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local verbose=true
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ true == true ]]
+ IFS=' 	
+ (( i = 0 ))
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
'
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]'
+ local count=1
+ [[ -z '' ]]
+ [[ true == true ]]
+ ((  count == 0  ))
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ debug=false
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ echo
+ [[ -z '' ]]
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
++ export jobs_location=jobs
+ dry_run=false
++ jobs_location=jobs
+ (( i < count ))
+ [[ -z true ]]
+ [[ export =~ ^(console|o)$ ]]
++ mkdir -p jobs
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ] ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ export =~ ^(platform|p)$ ]]
++ echo -e --verbose
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ export jobs_location=jobs
+ read -r key value
++ jobs_location=jobs
+ local 'prompt_message=Enter configuration file to be parsed: '
++ mkdir -p jobs
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local first_search_entry=10.0.1.2
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ newline
+ local count=1
+ export console_output=false
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]'
+ console_output=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
++ export actions_logfile=console/run.console
+ ((  count == 0  ))
++ actions_logfile=console/run.console
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
++ touch console/run.console
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ (( i < count ))
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ local script_filename=fortinet-configs.awk
+ (( i++ ))
+ echo
+ (( i < count ))
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ (( i < count ))
+ (( i++ ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -z true ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -z cisco ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ] ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]'
+ (( i < count ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -z '' ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-configs--ips.list ]'
+ script_helper=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ newline
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ local count=1
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ echo
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ which awk
+ (( i++ ))
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]]
+ search_terms=()
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ declare -a search_terms
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]]
+ [[ -z cisco ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ mapfile -t search_terms
+ (( i = 0 ))
+ [[ export =~ ^(config|c)$ ]]
+ (( i < count ))
+ output_dir=reports/10.0.2.3/cisco
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ search =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list
+ [[ export == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ echo -e --verbose
++ IFS=,
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo 10.0.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ newline
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local count=1
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
+ echo
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i++ ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ (( i < count ))
+ declare -a execute__netwowrk_extract
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ which awk
++ export console_location=console
++ console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ verbose =~ ^(config|c)$ ]]
++ export console_location=console
+ [[ verbose =~ ^(console|o)$ ]]
++ console_location=console
+ [[ verbose =~ ^(export|r)$ ]]
++ mkdir -p console
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ mktemp -d
+ [[ -z true ]]
+ [[ -z '' ]]
+ script_filename=network-extract
+ export console_output=false
+ console_output=false
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ touch console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list ]]
++ export targets_location=targets
+ search_terms=()
++ targets_location=targets
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ output_dir=reports/172.16.0.5/cisco
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list != *,* ]]
+ [[ ! -d reports/172.16.0.5/cisco ]]
++ which awk
+ mapfile -t search_terms
+ [[ config =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
++ tr -d '\r'
++ echo -e --config=.cache/resources/misc/switch3.conf
++ IFS=,
++ echo 10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ grep -v '^#'
+++ date +%s%N
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ export actions_logfile=console/run.console
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ actions_logfile=console/run.console
+ dry_run=false
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ export actions_logfile=console/run.console
+ [[ -z true ]]
++ touch console/run.console
++ actions_logfile=console/run.console
+ [[ -z '' ]]
++ touch console/run.console
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ export actions_logfile=console/run.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ actions_logfile=console/run.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]]
++ touch console/run.console
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5jlVYjfSM
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5jlVYjfSM
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pzWzE0ixo5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pzWzE0ixo5
+++ base64
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ which awk
+ export 'nl=\n'
++ [[ 5 -lt 4 ]]
+ nl='\n'
++ alias detect-vendor=detect_vendor
+ source ./scripts/devops-resources.shell
++ alias exit-error=exit_error
+ [[ config =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ alias list-file=list_file
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-error=log_error
++ alias log-info=log_info
++ command -v -- ./scripts/network-extract.shell
++ alias log-warn=log_warn
+++ tr -dc a-zA-Z0-9
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias print-message=message
++ alias exit-error=exit_error
++ alias print-newline=newline
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias pause=pause
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias list-file=list_file
+ [[ config =~ ^(console|o)$ ]]
++ alias print-line=print
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
++ alias log-error=log_error
+ [[ config =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ alias log-info=log_info
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-file=print_file
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(search|s)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias pause=pause
+ [[ verbose == \h\e\l\p ]]
++ alias print-line=print
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias system-metrics=system_metrics
+ local verbose=true
++ alias print-file=print_file
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ alias validate-address=validate_address
+ [[ false == true ]]
++ alias system-metrics=system_metrics
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]]
++ alias warning-message=warning
+ [[ config =~ ^(extract|x)$ ]]
++ export LC_ALL=C
+ search_terms=()
++ tr -d '\r'
+ [[ config =~ ^(logger|l)$ ]]
++ LC_ALL=C
+ declare -a search_terms
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list != *,* ]]
++ export 'nl=\n'
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ [[ config == \h\e\l\p ]]
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ cfg == \c\f\g ]]
+ local target_config=.cache/resources/misc/switch3.conf
++ dirname -- ./scripts/network-extract.shell
++ nl='\n'
+ [[ conf == \c\o\n\f ]]
++ alias validate-address=validate_address
+ mapfile -t search_terms
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ export cache_location=.cache
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ cache_location=.cache
++ alias warning-message=warning
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ config == \h\e\l\p ]]
++ export logs_location=logs
+ [[ config == \d\e\b\u\g ]]
+ local first_search_entry=192.0.2.50
++ logs_location=logs
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ export LC_ALL=C
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ mkdir -p logs
+ local last_search_entry=192.0.2.50
++ LC_ALL=C
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
++ export 'nl=\n'
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ tr -d '\r'
++ grep -v '^\s*$'
+ local awk_bin=/usr/bin/awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ config == \v\e\r\b\o\s\e ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ for xitem in "${@}"
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ IFS=,
++ echo 10.0.1.2
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ grep -v '^\s*$'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ grep -v '^#'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export divisor=--MTc0OTAwNDc1NjgzMzMyNzAwMAo--
++ divisor=--MTc0OTAwNDc1NjgzMzMyNzAwMAo--
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(export|r)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]'
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ alias parse-listings--helper=parse_listings__helper
++ printf '%*s' 12 ''
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ grep -v '^#'
++ dirname reports/10.0.1.2/misc/switch1.conf
++ tr -d '\r'
+ local 'indent=            '
++ alias network-configs--helper=network_configs__helper
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'indent=            '
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ config == \h\e\l\p ]]
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ grep -v '^\s*$'
+ [[ config == \d\e\b\u\g ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ alias serialize-object=serialize_objects
+ read -r key value
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ date +%s%N
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ grep -v '^#'
++ export jobs_location=jobs
++ jobs_location=jobs
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+++ date +%s%N
+++ date +%s%N
++ mkdir -p jobs
+ alias parse-cisco=main
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ local count=1
+ mkdir -p logs
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+++ base64
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ base64
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo
+++ base64
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local first_search_entry=10.0.2.3
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ [[ true == true ]]
+ newline
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ local first_search_entry=172.31.255.254
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ (( i = 0 ))
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=192.168.0.1
+ local last_search_entry=192.168.0.1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ] ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ echo
+ (( i++ ))
++ export console_location=console
+ (( i < count ))
+ local count=1
++ console_location=console
+ ((  count == 0  ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
++ mkdir -p console
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ newline
+ local count=1
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ echo
+ (( i++ ))
+ set -euo pipefail
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ export LC_ALL=C
+ LC_ALL=C
+ local 'prompt_message=Enter configuration file to be parsed: '
+ output_dir=reports/10.0.1.2/misc
+ (( i < count ))
+ output_dir=reports/172.18.1.20/cisco
+ [[ ! -d reports/10.0.1.2/misc ]]
+ script_filename=network-extract.shell
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ script_filename=network-extract
+ [[ -z cisco ]]
+ export network_extract__console=console/network-extract.console
+ [[ true == true ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ export divisor=--MTc0OTAwNDc1Njg0NDgxNzAwMAo--
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ echo
++ divisor=--MTc0OTAwNDc1Njg0NDgxNzAwMAo--
+ [[ -z cisco ]]
+ local last_search_entry=172.31.255.254
+ (( i++ ))
+ source ./scripts/devops-helpers.shell
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export divisor=--MTc0OTAwNDc1Njg0NTIyMzAwMAo--
+ [[ true == true ]]
+ output_dir=reports/10.0.0.1/fortinet
++ [[ -n '' ]]
++ divisor=--MTc0OTAwNDc1Njg0NTIyMzAwMAo--
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ output_dir=reports/172.16.1.6/cisco
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ export divisor=--MTc0OTAwNDc1Njg0NTI2MzAwMAo--
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list ]'
++ divisor=--MTc0OTAwNDc1Njg0NTI2MzAwMAo--
++ [[ 5 -lt 4 ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list ] ]]
++ [[ -n '' ]]
+ source ./scripts/devops-helpers.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ [[ 5 -lt 4 ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ which awk
+ newline
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
+ local count=1
++ which awk
+ (( i = 0 ))
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
+ echo
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list ]'
++ alias network-configs--helper=network_configs__helper
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-configs--ips.list ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local count=1
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
+ ((  count == 0  ))
++ alias network-extract--helper=network_extract__helper
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
++ alias network-extract--helper=network_extract__helper
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
++ alias network-extract--helper=network_extract__helper
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ alias serialize-object=serialize_objects
+ newline
+ alias serialize-object=serialize_objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
 network-object host 192.168.0.100
+ echo
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ result=0
++ command -v -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ mkdir -p logs
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z x ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ export logs_location=logs
+ logs_location=logs
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ mkdir -p logs
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ (( i++ ))
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ local count=1
+ [[ -z cisco ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
++ export actions_logfile=console/run.console

object-group network Mutant-WiFi
 description Controlled guest devices
++ actions_logfile=console/run.console
 network-object host 10.10.10.10'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ touch console/run.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
+ [[ 7 -eq 0 ]]

object-group network MGMT-ACCESS
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.atisdphzd1/network-configs--ips.list =~ ^-*(h|help)$ ]]
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ [[ extract =~ ^(console|o)$ ]]
  "hostname": "access-sw1-west"
}

version 12.4
+ [[ extract =~ ^(export|r)$ ]]
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
+ [[ extract =~ ^(extract|x)$ ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ oIFS=' 	
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
'

+ [[ extract =~ ^(logger|l)$ ]]
object-group network Mutant-WiFi
+ for xitem in "${@}"
 description Controlled guest devices
+ [[ extract =~ ^(platform|p)$ ]]
 network-object host 10.10.10.10'
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ sed '1{/^[[:space:]]*$/d;}'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SZgF8Uu3i8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SZgF8Uu3i8
++ command -v -- ./scripts/network-extract.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local script_filename=cisco-configs.awk
+ export 'nl=\n'
+ nl='\n'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ source ./scripts/devops-resources.shell
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
++ [[ -n '' ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw1.cfg
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
++ alias list-file=list_file
+ [[ extract =~ ^(console|o)$ ]]
++ alias log-error=log_error
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias log-info=log_info
+ [[ extract =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ extract =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias pause=pause
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias print-line=print
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-file=print_file
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ alias relative-configpath=relative_configpath
++ printf '%*s' 12 ''
+ script_filename=network-extract.shell
++ alias system-metrics=system_metrics
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
+ network_extract__console=console/network-extract.console
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ IFS==
+ script_filename=network-extract
+ touch console/network-extract.console
+ [[ cfg == \c\f\g ]]
++ dirname -- ./scripts/network-extract.shell
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ script_filename=network-extract.shell
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ read -r key value
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ mktemp -d
+ network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
++ alias validate-address=validate_address
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ touch console/network-extract.console
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
++ mkdir -p logs
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ echo -e --platform=cisco
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ for xitem in "${@}"
+ local 'indent=            '
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ export targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
++ targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local count=2
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ IFS=,
+ (( i < count ))
++ echo 10.0.2.3
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ echo -e --platform=cisco
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ export jobs_location=jobs
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ jobs_location=jobs
++ mkdir -p jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ 7 -eq 0 ]]
+ output_dir=reports/10.0.2.3/misc
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cjry2ouykk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ ! -d reports/10.0.2.3/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ search =~ ^(export|r)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.vee8o8ado0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ output_dir=reports/192.168.0.1/cisco
+ [[ search =~ ^(logger|l)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ search =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.48b1XZYAHW
+ [[ search =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.47mfikj1sj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.48b1XZYAHW
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
+ oIFS=' 	
+ oIFS=' 	
'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ newline
+ [[ search == \h\e\l\p ]]
'
+ for xitem in "${@}"
+ local count=1
+ export 'nl=\n'
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ echo
+ read -r key value
+ for xitem in "${@}"
+ nl='\n'
+ [[ search == \d\e\b\u\g ]]
+ local script_filename=cisco-configs.awk
+ IFS==
+ (( i++ ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local SCRIPT_DIR=./scripts
+ oIFS=' 	
'
+ source ./scripts/devops-resources.shell
+ read -r key value
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ for xitem in "${@}"
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
++ [[ -n '' ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ local SCRIPT_DIR=./scripts
+ read -r key value
+ local script_filename=cisco-configs.awk
++ [[ 5 -lt 4 ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias detect-vendor=detect_vendor
+ (( i < count ))
++ alias exit-error=exit_error
+ local 'extracted_configuration={
  "vendor": "cisco",
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ platform =~ ^(config|c)$ ]]
  "model": "ASA",
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ [[ platform =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ declare -a execute__netwowrk_extract
+++ date +%s%N
+ local SCRIPT_DIR=./scripts
++ alias log-info=log_info
+ local script_filename=fortinet-configs.awk
++ alias log-warn=log_warn
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ alias print-message=message
  "version": "9.14(3)",
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias print-newline=newline
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias pause=pause
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
++ alias print-line=print
+ [[ conf == \c\o\n\f ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ local target_platform=cisco
+ extract_location=reports/172.31.255.254/misc/switch1.conf
++ alias print-file=print_file
  "domain": "edge.dc.example.com",
+ [[ platform =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
++ command -v -- ./scripts/network-extract.shell
+++ date +%s%N
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ base64
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ echo -e --platform=cisco
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ cfg == \c\f\g ]]
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
  "hostname": "perimeter-fw1"
+++ base64
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ platform == \h\e\l\p ]]

+ [[ platform == \d\e\b\u\g ]]
interface GigabitEthernet0/1
+ [[ platform == \d\r\y\-\r\u\n ]]
 nameif inside
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ IFS==
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ which awk
++ IFS=,
++ echo 172.16.0.5
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ [[ false == true ]]
+ [[ true == true ]]
++ which awk
++ dirname reports/172.31.255.254/misc/switch1.conf
++ which awk
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ serialize_objects
++ export divisor=--MTc0OTAwNDc1Njg3MTY1OTAwMAo--
++ divisor=--MTc0OTAwNDc1Njg3MTY1OTAwMAo--
+ source ./scripts/devops-helpers.shell
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
++ [[ -n '' ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform =~ ^(export|r)$ ]]
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
++ export divisor=--MTc0OTAwNDc1Njg3MjI0NzAwMAo--
++ divisor=--MTc0OTAwNDc1Njg3MjI0NzAwMAo--
+ source ./scripts/devops-helpers.shell
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ export jobs_location=jobs
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ jobs_location=jobs
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ mkdir -p jobs
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias network-extract--helper=network_extract__helper
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ alias serialize-object=serialize_objects
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
+ set -euo pipefail
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ export LC_ALL=C
++ export actions_logfile=console/run.console
+ LC_ALL=C
++ actions_logfile=console/run.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ touch console/run.console
+ [[ platform =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ which awk
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list
+ [[ config =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ which awk
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ read -r key value
+ alias parse-cisco=main
+ [[ platform =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ IFS==
+ [[ platform =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_platform=cisco
+ [[ config == \v\e\r\b\o\s\e ]]
object network Stark-Tower
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
 host 10.0.0.1
 description Core services gateway'
+ IFS==
+ read -r key value
+ result=0
+ alias serialize-object=serialize_objects
+ [[ -n {
+ [[ -z x ]]
++ which awk
+ export logs_location=logs
  "vendor": "cisco",
+ logs_location=logs
+ [[ platform == \h\e\l\p ]]
+ mkdir -p logs
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=reports/172.31.255.254/misc
+ [[ ! -d reports/172.31.255.254/misc ]]
++ which awk
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
++ mktemp -d
+ IFS==
  "model": "ASA",
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ alias parse-cisco=main
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ IFS=,
++ echo 172.16.1.6
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/10.10.10.10/cisco
++ export console_location=console
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 172.18.1.20
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
++ IFS=,
++ command -v -- ./scripts/network-extract.shell
++ echo 10.0.0.1
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
++ basename reports/10.10.10.10/cisco/access-sw1-west
 nameif inside
+ network_extract__console=console/network-extract.console
++ IFS=,
+ touch console/network-extract.console
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
++ echo 10.0.2.3
 host 10.0.0.1
 description Core services gateway ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IywBKInLOL
+ [[ logger == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IywBKInLOL
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ IFS==
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ 7 -eq 0 ]]
++ [[ 5 -lt 4 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ryrkc2wivx/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias detect-vendor=detect_vendor
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console --export --verbose
++ alias exit-error=exit_error
+ [[ export =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ oIFS=' 	
+ local export_objects=true
'
+ [[ export =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias pause=pause
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
+ for xitem in "${@}"
+ IFS==
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
++ alias relative-configpath=relative_configpath
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
++ alias system-metrics=system_metrics
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ alias warning-message=warning
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export LC_ALL=C
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ export == \v\e\r\b\o\s\e ]]
++ LC_ALL=C
+ for xitem in "${@}"
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ echo -e --verbose
++ export cache_location=.cache
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --platform=cisco
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ read -r key value
+ output_dir=reports/192.0.2.50/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.i4giry7pra/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console --export --verbose
++ export actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ oIFS=' 	
'
++ echo -e --platform=fortinet
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list
++ echo -e --export
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=console/run.console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.vxozodmxfk/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
'
+++ base64
++ echo -e --platform=fortinet
++ echo -e --verbose
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ixuzgychxy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console --export --verbose
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ local verbose=true
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ export console_output=false
+ [[ export =~ ^(config|c)$ ]]
+ console_output=false
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ export =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ export =~ ^(export|r)$ ]]
+ script_helper=false
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local target_platform=fortinet
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]]
+ [[ search =~ ^(search|s)$ ]]
+ search_terms=()
+ [[ platform == \h\e\l\p ]]
+ declare -a search_terms
+ [[ platform == \d\e\b\u\g ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list != *,* ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ export == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ local verbose=true
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ IFS=' 	
+ for xitem in "${@}"
+ for xitem in "${@}"
'
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ read -r key value
+ IFS==
+ read -r key value
+ [[ -z '' ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ platform =~ ^(console|o)$ ]]
+ dry_run=false
+ [[ extract == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ console_output=false
+ for xitem in "${@}"
+ [[ -z true ]]
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console ]]
+ read -r key value
+ [[ -z '' ]]
+ [[ platform =~ ^(export|r)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ search_terms=()
+ declare -a search_terms
+ local target_platform=fortinet
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(logger|l)$ ]]
++ export divisor=--MTc0OTAwNDc1Njg5Njk3NDAwMAo--
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ [[ extract == \h\e\l\p ]]
'
++ divisor=--MTc0OTAwNDc1Njg5Njk3NDAwMAo--
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ extract == \d\r\y\-\r\u\n ]]
+ console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console ]]
+ IFS==
+ read -r key value
+ [[ -z '' ]]
++ export console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ console_location=console
++ printf '%*s' 12 ''
++ mkdir -p console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]]
+ search_terms=()
++ echo -e --platform=fortinet
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list
+ source ./scripts/devops-helpers.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(console|o)$ ]]
++ echo -e --verbose
++ echo -e --verbose
++ dirname -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ declare -a execute__netwowrk_extract
++ alias parse-listings--helper=parse_listings__helper
+ [[ search == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
+ for xitem in "${@}"
+ local 'indent=            '
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ tr -d '\r'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ grep -v '^#'
++ grep -v '^#'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ grep -v '^\s*$'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list
+ [[ verbose == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS=' 	
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
++ grep -v '^#'
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ debug=false
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local verbose=true
+ [[ config =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ config =~ ^(logger|l)$ ]]
+ debug=false
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ [[ config =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ IFS=' 	
+ [[ platform =~ ^(extract|x)$ ]]
'
+ [[ -z true ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ debug=false
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ dry_run=false
+ [[ -z '' ]]
+ [[ -z true ]]
+ export console_output=false
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ export console_output=false
+ console_output=false
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ local target_platform=cisco
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
++ targets_location=targets
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ console_output=false
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ script_helper=false
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ export console_output=false
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local first_search_entry=192.168.0.100
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console
+ console_output=false
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]]
+ read -r key value
+ local last_search_entry=192.168.0.100
+ search_terms=()
+ read -r key value
+ declare -a search_terms
+ for xitem in "${@}"
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]]
+ mapfile -t search_terms
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console ]]
+ search_terms=()
+ [[ -z '' ]]
+ script_helper=false
+ declare -a search_terms
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]]
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ search_terms=()
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ declare -a search_terms
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list != *,* ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]]
+ mapfile -t search_terms
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ local first_search_entry=192.168.100.100
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list != *,* ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]'
+ for xitem in "${@}"
+ mapfile -t search_terms
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ local last_search_entry=192.168.100.100
+ [[ platform =~ ^(config|c)$ ]]
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ for xitem in "${@}"
+ local count=1
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
++ alias network-extract--helper=network_extract__helper
++ export targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ] ]]
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ local script_filename=cisco-configs.awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]'
+ local count=1
+ local target_platform=cisco
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ [[ platform =~ ^(search|s)$ ]]
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ [[ platform == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
+ [[ platform == \d\e\b\u\g ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ echo
+ read -r key value
+ set -euo pipefail
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ (( i++ ))
+ export LC_ALL=C
+ (( i < count ))
+ LC_ALL=C
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ export targets_location=targets
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ -z cisco ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local first_search_entry=192.168.1.11
+ local last_search_entry=192.168.1.11
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ echo -e --export
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console
+ local count=1
+ ((  count == 0  ))
++ tr -d '\r'
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
++ tr -d '\r'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
++ echo -e --export
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ grep -v '^\s*$'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ grep -v '^#'
++ grep -v '^#'
+ echo
+++ base64
+++ tr -dc a-zA-Z0-9
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.My8MiGsPW2
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ set -euo pipefail
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.My8MiGsPW2
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ export LC_ALL=C
+ LC_ALL=C
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
++ alias exit-error=exit_error
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ [[ config =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ export =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ export =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local export_objects=true
+ local first_search_entry=192.168.0.1
++ alias print-message=message
+ script_filename=network-extract.shell
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ script_filename=network-extract
++ alias print-newline=newline
+ [[ config == \d\e\b\u\g ]]
+ export network_extract__console=console/network-extract.console
+ [[ export =~ ^(extract|x)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ touch console/network-extract.console
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local last_search_entry=192.168.0.1
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console
+ [[ export =~ ^(platform|p)$ ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ export =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console
+ script_filename=network-extract.shell
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ cfg == \c\f\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ read -r key value
+ local first_search_entry=192.168.2.12
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ local first_search_entry=198.51.100.75
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ mktemp -d
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ local last_search_entry=192.168.2.12
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ config =~ ^(search|s)$ ]]
+ local last_search_entry=198.51.100.75
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ] ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ [[ export == \d\e\b\u\g ]]
+ local awk_bin=/usr/bin/awk
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local 'extracted_configuration={
+ [[ true == true ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
++ export divisor=--MTc0OTAwNDc1NjkyNjEyNzAwMAo--
+ IFS==
++ which awk
+ export logs_location=logs
+ for xitem in "${@}"
++ alias validate-address=validate_address
+ [[ logger == \v\e\r\b\o\s\e ]]
++ divisor=--MTc0OTAwNDc1NjkyNjEyNzAwMAo--
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
++ alias warning-message=warning
+ for xitem in "${@}"
++ IFS=,
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ IFS==
++ export LC_ALL=C
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ [[ extract == \h\e\l\p ]]
++ echo 10.0.1.2
++ which awk
+++ date +%s%N
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
++ LC_ALL=C
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
++ export 'nl=\n'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ IFS==
+ read -r key value
+ IFS==
+ IFS==
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ] ]]
+ read -r key value
++ nl='\n'
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
++ [[ -n '' ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ read -r key value
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
++ export cache_location=.cache
+ read -r key value
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ] ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ cache_location=.cache
++ __DEVOPS_HELPERS_SOURCED=1
++ export logs_location=logs
++ logs_location=logs
++ [[ 5 -lt 4 ]]
++ mkdir -p logs
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ alias parse-listings--helper=parse_listings__helper
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
+ logs_location=logs
+ local count=1
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ ((  count == 0  ))
+ mkdir -p logs
+ script_filename=network-extract
+ local count=1
+ (( i = 0 ))
+++ base64
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console
+ echo
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ (( i < count ))
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias network-extract--helper=network_extract__helper
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ alias serialize-object=serialize_objects
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ newline
++ echo -e --verbose
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ echo
+ newline
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
++ echo -e --export
+ (( i < count ))
++ echo -e --export
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ydom3gH79u
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ydom3gH79u
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ output_dir=reports/192.168.0.100/cisco
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ echo
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ nl='\n'
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ source ./scripts/devops-resources.shell
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias exit-error=exit_error
+ [[ logger =~ ^(export|r)$ ]]
++ alias list-file=list_file
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
++ alias log-error=log_error
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ alias log-info=log_info
+ [[ logger =~ ^(logger|l)$ ]]
+ newline 2
++ alias log-warn=log_warn
+ [[ logger =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ logger =~ ^(extract|x)$ ]]
++ alias print-newline=newline
++ export divisor=--MTc0OTAwNDc1NjkzNDAyMzAwMAo--
+ [[ logger =~ ^(logger|l)$ ]]
++ divisor=--MTc0OTAwNDc1NjkzNDAyMzAwMAo--
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
++ alias pause=pause
+ [[ logger =~ ^(search|s)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ logger == \h\e\l\p ]]
++ alias print-line=print
++ [[ -n '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ declare -a execute__netwowrk_extract
+ [[ logger == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ alias system-metrics=system_metrics
++ echo -e --export
++ __DEVOPS_HELPERS_SOURCED=1
++ alias validate-address=validate_address
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ extract =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ [[ extract =~ ^(export|r)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(platform|p)$ ]]
++ mkdir -p logs
+ [[ extract =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ extract == \h\e\l\p ]]
+ export network_extract__console=console/network-extract.console
+ [[ extract == \d\e\b\u\g ]]
+ network_extract__console=console/network-extract.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ touch console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local export_objects=true
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ export console_location=console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ console_location=console
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
++ mkdir -p console
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ output_dir=reports/192.168.100.100/cisco
+ IFS==
+ local verbose=true
+ read -r key value
+ [[ ! -d reports/192.168.100.100/cisco ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.1.11/cisco
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
'
+ IFS==
+ [[ -z '' ]]
+ debug=false
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ local verbose=true
+ dry_run=false
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ local target_platform=cisco
+ export console_output=false
+ [[ platform =~ ^(search|s)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ platform == \h\e\l\p ]]
+ script_filename=network-extract.shell
+ IFS=' 	
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ script_helper=false
+ for xitem in "${@}"
+ [[ false == true ]]
'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ IFS==
+ script_filename=network-extract
+ debug=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]]
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
+ search_terms=()
+ [[ -z '' ]]
+ declare -a search_terms
+ dry_run=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]]
+ [[ -z true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ export network_extract__console=console/network-extract.console
++ IFS=,
+ [[ extract =~ ^(config|c)$ ]]
++ echo 192.0.2.50
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ [[ -z '' ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ search_terms=()
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ declare -a search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list != *,* ]]
++ echo -e --platform=cisco
+ mapfile -t search_terms
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ verbose == \h\e\l\p ]]
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local export_objects=true
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ touch console/network-extract.console
+ IFS=' 	
'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ export console_output=false
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ console_output=false
+ [[ export == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ [[ -z true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console ]]
+ local script_filename=cisco-configs.awk
+ [[ -z '' ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ for xitem in "${@}"
++ command -v -- ./scripts/network-extract.shell
+ IFS==
+ script_helper=false
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ read -r key value
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ cfg == \c\f\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]]
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ search_terms=()
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list != *,* ]]
++ echo -e --platform=cisco
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ 7 -eq 0 ]]
+ declare -a execute__netwowrk_extract
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yyz7htu6tq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
  "vendor": "fortinet",
+ local count=1
+ oIFS=' 	
  "model": "FortiGate-60F",
'
  "version": "v7.2.5.F",
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ alias serialize-object=serialize_objects
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
++ echo -e --verbose
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
++ export actions_logfile=console/run.console
++ dirname -- ./scripts/network-extract.shell
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --platform=cisco
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list
++ grep -v '^#'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ platform =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.2.12/cisco
+ output_dir=reports/192.168.0.1/cisco
+ [[ platform =~ ^(console|o)$ ]]
+ [[ ! -d reports/192.168.2.12/cisco ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ verbose =~ ^(export|r)$ ]]
++ export targets_location=targets
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ output_dir=reports/198.51.100.75/cisco
+ [[ verbose =~ ^(logger|l)$ ]]
++ targets_location=targets
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(search|s)$ ]]
++ targets_logfile=.cache/targets.jobs
++ export console_location=console
+ [[ verbose == \h\e\l\p ]]
++ console_location=console
+ [[ verbose =~ ^(config|c)$ ]]
++ mkdir -p console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local verbose=true
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ IFS=' 	
'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console
+ alias parse-cisco=main
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ debug=false
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ export console_output=false
+ [[ logger == \d\e\b\u\g ]]
+ local first_search_entry=192.168.0.100
+ [[ platform == \h\e\l\p ]]
+ console_output=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ local last_search_entry=192.168.0.100
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
++ which awk
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console ]]
+ read -r key value
+ [[ -z '' ]]
+ IFS==
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local verbose=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]]
+ IFS=' 	
'
+ search_terms=()
+ [[ -z '' ]]
+ declare -a search_terms
+ debug=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list != *,* ]]
+ [[ -z true ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ script_helper=false
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]'
++ IFS=,
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ] ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]'
++ echo 192.168.0.100
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ which awk
+ [[ search =~ ^(export|r)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ local first_search_entry=192.168.1.10
+ [[ search =~ ^(extract|x)$ ]]
+ local last_search_entry=192.168.1.10
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ search_terms=()
+ [[ true == true ]]
+ declare -a search_terms
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
+ [[ search == \h\e\l\p ]]
+ local count=1
+ [[ search == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ] ]]
+ declare -a execute__netwowrk_extract
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ ((  count == 0  ))
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ IFS==
+ read -r key value
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ local count=1
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.atisdphzd1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ ((  count == 0  ))
+ newline
++ which awk
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console --export --verbose
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ -z x ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ logs_location=logs
+ newline
+ oIFS=' 	
'
+ mkdir -p logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ local verbose=true
+ export network_extract__console=console/network-extract.console
+ [[ 7 -eq 0 ]]
+ echo
+ (( i < count ))
+ IFS=' 	
+ IFS==
+ (( i++ ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ryrkc2wivx/network-configs--ips.list =~ ^-*(h|help)$ ]]
'
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ -z '' ]]
+ debug=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z '' ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ dry_run=false
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z true ]]
+ read -r key value
+ [[ -z cisco ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ [[ -z fortinet ]]
+ local count=2
+ local first_search_entry=192.168.1.11
+ export console_output=false
+++ date +%s%N
+ console_output=false
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local last_search_entry=192.168.1.11
+ [[ logger =~ ^(export|r)$ ]]
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console
+ local count=1
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ (( i = 0 ))
+ [[ false == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]]
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ mapfile -t search_terms
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ which awk
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console
+++ base64
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-configs--ips.list ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ local count=1
++ dirname -- ./scripts/network-extract.shell
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
++ tr -d '\r'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
++ dirname -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
++ tr -d '\r'
+ newline
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export actions_logfile=console/run.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=console/run.console
++ grep -v '^\s*$'
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ tr -d '\r'
++ grep -v '^#'
++ grep -v '^\s*$'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ export divisor=--MTc0OTAwNDc1Njk2NTEwNTAwMAo--
++ divisor=--MTc0OTAwNDc1Njk2NTEwNTAwMAo--
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ source ./scripts/devops-helpers.shell
+ [[ -z fortinet ]]
++ grep -v '^#'
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ alias network-configs--helper=network_configs__helper
+ local SCRIPT_DIR=./scripts
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
++ alias network-extract--helper=network_extract__helper
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local script_filename=cisco-configs.awk
+ local export_objects=true
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ [[ config =~ ^(extract|x)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ logger =~ ^(export|r)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ true == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ set -euo pipefail
+ [[ logger =~ ^(search|s)$ ]]
++ IFS=,
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ echo 192.168.100.100
+ for xitem in "${@}"
+ IFS==
+ alias parse-cisco=main
+ read -r key value
++ IFS=,
+ [[ export == \h\e\l\p ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ] ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ echo 192.168.1.11
+ [[ export == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z x ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ export logs_location=logs
+ local first_search_entry=10.10.10.10
+ logs_location=logs
+ local last_search_entry=10.10.10.10
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ local count=1
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ mkdir -p logs
+ read -r key value
+ declare -a execute__netwowrk_extract
+ read -r key value
+ [[ true == true ]]
+ ((  count == 0  ))
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ newline
+ [[ cfg == \c\f\g ]]
+ local count=1
++ which awk
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ] ]]
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local awk_bin=/usr/bin/awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ ((  count == 0  ))
+ echo
+ (( i++ ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ newline
+ [[ -z fortinet ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ for xitem in "${@}"
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ local 'indent=            '
++ mktemp -d
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
++ which awk
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local first_search_entry=172.16.0.5
+ local last_search_entry=172.16.0.5
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ newline
+ [[ true == true ]]
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]'
+ (( i < count ))
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ] ]]
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-configs--ips.list ]'
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ (( i < count ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
++ which awk
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --verbose
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ [[ cfg == \c\f\g ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ script_filename=network-extract.shell
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ script_filename=network-extract
+ (( i = 0 ))
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ echo
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AV9oubzfen
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AV9oubzfen
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ IFS=,
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo 192.168.0.1
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+++ date +%s%N
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ alias print-file=print_file
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
++ alias relative-configpath=relative_configpath
+ declare -a execute__netwowrk_extract
+ local awk_bin=/usr/bin/awk
+ output_dir=reports/192.168.1.10/fortinet
++ alias system-metrics=system_metrics
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ alias validate-address=validate_address
+ local export_objects=true
+ [[ extract =~ ^(logger|l)$ ]]
++ IFS=,
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ [[ extract =~ ^(search|s)$ ]]
+ [[ ! -d reports/192.168.1.10/fortinet ]]
++ export LC_ALL=C
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ LC_ALL=C
++ echo 192.168.2.12
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export cache_location=.cache
++ cache_location=.cache
+ for xitem in "${@}"
++ export logs_location=logs
+++ base64
++ logs_location=logs
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
++ mkdir -p logs
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ export =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+++ tr -dc a-zA-Z0-9
++ which awk
++ IFS=,
++ echo 198.51.100.75
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local 'indent=            '
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ 7 -eq 0 ]]
+ debug=false
+ [[ true == true ]]
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ -z '' ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2gdr89layx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ dry_run=false
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console --export --verbose
+ declare -a execute__netwowrk_extract
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -z true ]]
+ [[ -z '' ]]
+ newline
+ export console_output=false
+ console_output=false
+ local count=1
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ oIFS=' 	
'
+ echo
+ for xitem in "${@}"
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ IFS==
+ read -r key value
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ printf '%*s' 12 ''
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]]
++ command -v -- ./scripts/network-extract.shell
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ [[ true == true ]]
++ echo -e --platform=fortinet
++ which awk
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --verbose
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ newline
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ export jobs_location=jobs
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ jobs_location=jobs
+ local awk_bin=/usr/bin/awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export divisor=--MTc0OTAwNDc1Njk4NTYzNTAwMAo--
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ mkdir -p jobs
++ divisor=--MTc0OTAwNDc1Njk4NTYzNTAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list
+ output_dir=reports/192.168.0.100/cisco
+ source ./scripts/devops-helpers.shell
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ ! -d reports/192.168.0.100/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
++ [[ 5 -lt 4 ]]
++ echo -e --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ output_dir=reports/192.168.1.11/fortinet
 description Guest VLAN Gateway
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/192.168.1.11/fortinet ]]

++ tr -d '\r'
object-group network MGMT-ACCESS
 description Management objects
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
 network-object host 192.168.0.1
+ local awk_bin=/usr/bin/awk
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ cfg == \c\f\g ]]
 network-object host 192.168.0.100
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local awk_bin=/usr/bin/awk
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ output_dir=reports/172.16.1.6/fortinet
 network-object host 10.10.10.10'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ ! -d reports/172.16.1.6/fortinet ]]
++ printf '%*s' 12 ''
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^\s*$'
++ printf '%*s' 12 ''
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(config|c)$ ]]
+ local 'indent=            '
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ output_dir=reports/10.10.10.10/cisco
+ local target_platform=fortinet
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ alias network-extract--helper=network_extract__helper
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ read -r key value
++ grep -v '^#'
+ [[ verbose =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ local script_filename=fortinet-configs.awk
+ (( i++ ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i < count ))
++ export console_location=console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(export|r)$ ]]
++ console_location=console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ mkdir -p console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local count=1
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local 'indent=            '
+ [[ search == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'indent=            '
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ read -r key value
+ local verbose=true
+ (( i++ ))
+ [[ verbose =~ ^(search|s)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ export logs_location=logs
+ logs_location=logs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ mkdir -p logs
  "model": "",
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ IFS=' 	
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ newline
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ newline

+ local count=1
++ dirname -- ./scripts/network-extract.shell
+ (( i = 0 ))
version 12.4
hostname access-sw1-west

interface Vlan100
++ command -v -- ./scripts/network-extract.shell
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

+ (( i < count ))
object-group network MGMT-ACCESS
+ echo
 description Management objects
 network-object host 192.168.0.1
+ (( i++ ))
+ (( i < count ))
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ command -v -- ./scripts/network-extract.shell
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
version 12.4
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
'
hostname access-sw1-west
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z '' ]]

+ debug=false
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z '' ]]
interface Vlan100
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(extract|x)$ ]]
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

+ [[ verbose =~ ^(logger|l)$ ]]
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ IFS=' 	
'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -z '' ]]
+ [[ -z '' ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local count=1
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ dry_run=false
+ [[ -z true ]]
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z '' ]]
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ debug=false
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z '' ]]
+ debug=false
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ which awk
+ export console_output=false
+ [[ false == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]]
+ search_terms=()
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ declare -a search_terms
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ console_output=false
+ [[ -z '' ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ dry_run=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]]
+ [[ -z true ]]
+ local first_search_entry=10.0.0.1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list != *,* ]]
+ local last_search_entry=10.0.0.1
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ export console_output=false
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ newline
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ script_helper=false
+ [[ -z true ]]
+ newline
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/172.16.0.5/misc
+ [[ ! -d reports/172.16.0.5/misc ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ] ]]
+ script_helper=false
+ search_terms=()
+ [[ false == true ]]
+ declare -a search_terms
+ echo
+ set -euo pipefail
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ export LC_ALL=C
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
++ export actions_logfile=console/run.console
+ LC_ALL=C
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]]
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
++ actions_logfile=console/run.console
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ script_filename=network-extract.shell
++ touch console/run.console
+ local 'indent=            '
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ mapfile -t search_terms
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ search_terms=()
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ declare -a search_terms
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ mapfile -t search_terms
+ (( i < count ))
+ echo
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ mktemp -d
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
+ local SCRIPT_DIR=./scripts
 network-object host 192.168.100.100
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 10.10.10.10'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console
+ local 'extracted_configuration={
+ [[ logger =~ ^(platform|p)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ [[ logger =~ ^(search|s)$ ]]
  "hostname": "branch-isr-02"
}

+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
version 16.9
+ [[ logger == \d\r\y\-\r\u\n ]]
hostname branch-isr-02

+ [[ logger == \v\e\r\b\o\s\e ]]
+ script_filename=network-extract.shell
object-group network Lantern-DMZ
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
+ newline
+ IFS==
+ script_filename=network-extract
+ read -r key value
+ local count=1
+ export network_extract__console=console/network-extract.console
+ (( i = 0 ))
+ network_extract__console=console/network-extract.console
+ (( i < count ))
+ echo
+ touch console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ newline 2
++ tr -d '\r'
 description Protected but public-facing zone
+ result=0
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
+ [[ -n {
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "ASA",
  "model": "",
  "version": "9.12(4)",
  "version": "16.9",
+ local script_filename=fortinet-configs.awk
  "domain": "",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
  "hostname": "branch-isr-02"
+ local count=2
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ true == true ]]
}
+ local SCRIPT_DIR=./scripts
}

+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ script_filename=network-extract
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
version 16.9
+ (( i < count ))

+ local script_filename=cisco-configs.awk
++ tr -d '\r'
+ export network_extract__console=console/network-extract.console
+ echo
+ local script_filename=fortinet-configs.awk
ASA Version 9.12(4)
hostname branch-isr-02
+ local script_filepath=./scripts/extract/cisco-configs.awk

object-group network Lantern-DMZ
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
+ [[ search =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
++ targets_logfile=.cache/targets.jobs
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))

+ [[ config == \h\e\l\p ]]
 description Protected but public-facing zone
+ [[ config == \d\e\b\u\g ]]
+ echo
++ IFS=,
 network-object host 172.18.1.20
+ network_extract__console=console/network-extract.console
+ [[ config == \d\r\y\-\r\u\n ]]
interface GigabitEthernet0/1
++ grep -v '^\s*$'
++ which awk
++ echo 192.168.1.10
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
 network-object host 192.168.1.11 ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ tr -d '\r'
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
++ grep -v '^\s*$'
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "cisco",
++ which awk
  "model": "",
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
++ which awk
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
++ echo -e --export
+ newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yh2xpiAdXh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yh2xpiAdXh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ grep -v '^#'
+++ date +%s%N
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ (( i = 0 ))
+ (( i < count ))
  set comment "QA node in Peter'\''s Lab"
++ [[ -n '' ]]
 next
+ local SCRIPT_DIR=./scripts
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
end'
+ echo
+ local 'indent=            '
++ [[ 5 -lt 4 ]]
+++ base64
+ [[ true == true ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ result=0
+ local script_filename=cisco-configs.awk
+ newline
+ (( i++ ))
+ [[ -n {
+ local count=1
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
+ (( i = 0 ))
++ alias list-file=list_file
  set subnet 10.0.1.2 255.255.255.255
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
  set comment "QA node in Peter's Lab"
+ (( i < count ))
++ alias log-error=log_error
 next
end ]]
+ [[ true == true ]]
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias log-warn=log_warn
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+++ tr -dc a-zA-Z0-9
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
++ alias print-message=message
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ read -r key value
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ alias print-newline=newline
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ newline
+ touch console/network-extract.console
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ alias pause=pause
+ read -r key value
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias print-line=print
+ (( i++ ))
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ alias print-file=print_file
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
++ alias relative-configpath=relative_configpath
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias system-metrics=system_metrics
+ (( i++ ))
+ (( i < count ))
+ network_extract__console=console/network-extract.console
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ touch console/network-extract.console
++ which awk
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console --export --verbose
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ which awk
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ oIFS=' 	
+ [[ logger == \d\r\y\-\r\u\n ]]
'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ declare -a execute__netwowrk_extract
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ [[ config =~ ^(config|c)$ ]]
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
  set comment "QA node in Peter'\''s Lab"
 next
+ [[ config =~ ^(console|o)$ ]]
end'
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ extract =~ ^(export|r)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ config == \h\e\l\p ]]
config firewall address
+ [[ extract =~ ^(extract|x)$ ]]
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ echo -en '{
+ [[ config == \d\e\b\u\g ]]
  "vendor": "fortinet",
+ [[ config == \d\r\y\-\r\u\n ]]
  "model": "FortiGate-60F",
+ [[ config == \v\e\r\b\o\s\e ]]
  "version": "v7.2.5.F",
+ for xitem in "${@}"
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ IFS==
}
+ read -r key value

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(console|o)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ config =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ sed '1{/^[[:space:]]*$/d;}'
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ newline
+ local count=1
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'indent=            '
+ [[ extract =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ IFS=,
+ IFS==
+ read -r key value
++ echo 192.168.0.1
++ which awk
++ echo -e --export
+ local 'indent=            '
+ [[ true == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ newline
+ [[ config =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ IFS==
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ printf '%*s' 12 ''
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ declare -a execute__netwowrk_extract
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ newline
+ local awk_bin=/usr/bin/awk
++ echo -e --export
+ (( i = 0 ))
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local count=1
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ false == true ]]
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cjry2ouykk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
++ IFS=,
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ serialize_objects
++ export jobs_location=jobs
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ echo
++ echo 172.31.255.254
+ (( i++ ))
++ jobs_location=jobs
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
++ mkdir -p jobs
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ echo -e --export
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ declare -a execute__netwowrk_extract
+ newline
+ newline 2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yyz7htu6tq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=2
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list
+ echo
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ oIFS=' 	
+ (( i++ ))
'
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ newline
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ oIFS=' 	
'
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ true == true ]]
+ for xitem in "${@}"
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ printf '%*s' 12 ''
++ which awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
++ sed -e '1s|^\(-\)\{1,\}||'
hostname perimeter-fw1
domain-name edge.dc.example.com

++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ export =~ ^(config|c)$ ]]
+ result=0
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ export =~ ^(export|r)$ ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ local export_objects=true

ASA Version 9.14(3)
+ [[ export =~ ^(extract|x)$ ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ export =~ ^(logger|l)$ ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ [[ export =~ ^(platform|p)$ ]]

++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(search|s)$ ]]
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ local parent_dir=reports/10.0.0.1/cisco
  "domain": "edge.dc.example.com",
++ export console_location=console
  "hostname": "perimeter-fw1"
}
++ console_location=console

ASA Version 9.14(3)
++ mkdir -p console
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
+ newline
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
  "vendor": "cisco",
  "model": "ASA",
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
+ local count=1
  "version": "9.14(3)",
+ (( i = 0 ))
  "domain": "edge.dc.example.com",
+ (( i < count ))
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ [[ export =~ ^(config|c)$ ]]
object network Magneto-Core
 host 172.16.0.5
+ [[ export =~ ^(console|o)$ ]]
 description WAN firewall entry point'
+ [[ export =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ export =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ local export_objects=true
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local 'extracted_configuration={
+ [[ export == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ newline
+ IFS==
+ [[ export == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
  "model": "",
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
  "version": "16.9",
  "domain": "",
+ newline
  "hostname": "branch-isr-02"
}
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ read -r key value

+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ basename reports/10.0.0.1/cisco/perimeter-fw1
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ serialize_objects
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list
+ local target_platform=cisco
+ [[ search == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ (( i = 0 ))
version 16.9
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
hostname branch-isr-02

+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
interface GigabitEthernet0/0/2
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
 ip address 10.0.2.3 255.255.255.0
++ printf '%*s' 12 ''
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local search_pattern
+ [[ extract == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ extract == \h\e\l\p ]]
+ local 'indent=            '
 description Dev VLAN
+ (( i++ ))
+ newline

+ [[ extract == \d\e\b\u\g ]]
object network Panther-Gateway
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 host 10.0.2.3
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ [[ true == true ]]
+ (( i < count ))
 description Secure outbound concentrator'
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ result=0
+ IFS==
+ read -r key value
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ printf '%*s' 12 ''
+ message '                .cache/resources/misc/switch1.conf'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \d\e\b\u\g ]]
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ [[ -n {
  "vendor": "cisco",
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ extract == \d\r\y\-\r\u\n ]]
  "model": "",
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ local 'indent=            '
  "version": "v7.2.5.F",
  "domain": "",
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ true == true ]]
  "hostname": "fg-branch-vpn-01"
}

++ sed -e '1s|^\(-\)\{1,\}||'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
config firewall address
 edit "IronMan-HQ"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ result=0
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ newline
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ local count=1
}
+ (( i = 0 ))

+ (( i < count ))
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ echo
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ (( i++ ))
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
+ (( i < count ))
end ]]
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(config|c)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ search =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export actions_logfile=console/run.console
  "version": "16.9",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "domain": "",
+ [[ extract == \v\e\r\b\o\s\e ]]
  "hostname": "branch-isr-02"
+ [[ search =~ ^(export|r)$ ]]
+ newline
}
++ actions_logfile=console/run.console

++ touch console/run.console
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ local 'extracted_configuration={
  "vendor": "cisco",
 description Dev VLAN
  "model": "",
  "version": "16.9",

  "domain": "",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(extract|x)$ ]]
  "hostname": "branch-isr-02"
}

+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
version 16.9
hostname branch-isr-02
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ local count=1
object network Panther-Gateway
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo

+ [[ search =~ ^(platform|p)$ ]]
interface GigabitEthernet0/0/0
 host 10.0.2.3
+ local search_pattern
 description Secure outbound concentrator ]]
+ read -r key value
+ newline 2
++ echo -e --verbose
++ echo -e --config=.cache/resources/misc/switch3.conf
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/misc/fw1.cfg'
+ (( i++ ))
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ true == true ]]
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
  set subnet 10.0.0.1 255.255.255.255
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
  set comment "Main node at Stark Tower"
 ip address 172.16.1.6 255.255.255.0
 next
end'
++ echo -e --verbose
+ [[ -n {
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

++ sed -e '1s|^\(-\)\{1,\}||'
#hostname="fg-branch-vpn-01"
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ local 'message=                .cache/resources/misc/fw1.cfg'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo -e '                .cache/resources/misc/fw1.cfg'

+ newline
config firewall address
+ local parent_dir=reports/10.0.1.2/fortinet
+ local count=1
 edit "IronMan-HQ"
+ (( i = 0 ))
  set subnet 10.0.0.1 255.255.255.255
+ (( i < count ))
  set comment "Main node at Stark Tower"
+ echo
+ newline
++ echo -e --platform=fortinet
+ (( i++ ))
 next
+ (( i < count ))
end ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local 'extracted_configuration={
+ echo -en '{
  "vendor": "fortinet",
+ [[ search == \d\r\y\-\r\u\n ]]
  "model": "FortiGate-60F",
  "vendor": "cisco",
  "version": "v7.2.5.F",
  "model": "",
  "domain": "",
  "version": "16.9",
  "hostname": "fg-branch-vpn-01"
  "domain": "",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}
 description ISP uplink
+ [[ search == \v\e\r\b\o\s\e ]]
  "hostname": "branch-isr-02"

+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
#hostname="fg-branch-vpn-01"
}
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 edit "IronMan-HQ"
+ [[ search =~ ^(config|c)$ ]]
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
 next
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
end'
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ search =~ ^(export|r)$ ]]

+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ search =~ ^(extract|x)$ ]]
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ result=0
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ [[ verbose =~ ^(console|o)$ ]]
  "hostname": "branch-isr-02"
+ [[ verbose =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ print '{
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
  "vendor": "cisco",
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
  "model": "",
  "version": "16.9",
  "domain": "",
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list
  "hostname": "branch-isr-02"
+ [[ search == \h\e\l\p ]]
}

++ sed -e '1s|^\(-\)\{1,\}||'
version 16.9
+ [[ search == \d\e\b\u\g ]]
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
+ [[ verbose =~ ^(search|s)$ ]]
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
+ [[ verbose == \h\e\l\p ]]
 description Secure outbound concentrator ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo -en '{
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
  "model": "",

++ echo -e --platform=fortinet
+ local verbose=true
  "version": "16.9",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "",
version 16.9
  "hostname": "branch-isr-02"
}
}
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))

version 16.9
+ echo
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ search == \d\r\y\-\r\u\n ]]
hostname branch-isr-02
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS=' 	

'
+ [[ -z '' ]]
+ for xitem in "${@}"
+ debug=false
+ [[ -z '' ]]
+ IFS==
+ dry_run=false
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ echo -e --platform=fortinet
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -z true ]]
+ [[ -z '' ]]

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ (( i < count ))
object-group network Lantern-DMZ
+ newline 2
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ local count=2
  "model": "",
  "version": "16.9",
  "domain": "",
+ (( i = 0 ))
  "hostname": "branch-isr-02"
+ [[ verbose =~ ^(config|c)$ ]]
}
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ local target_config=.cache/resources/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ [[ config =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ (( i++ ))
+ [[ config =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
  "vendor": "cisco",
+ newline
  "model": "",
+ local search_pattern
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local count=1
+ result=0
+ (( i = 0 ))

+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
version 16.9
hostname branch-isr-02

+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
+ echo
+ [[ -n {
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
object-group network Lantern-DMZ
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ [[ platform =~ ^(console|o)$ ]]
  "vendor": "cisco",
+ local count=1
  "model": "",
+ (( i = 0 ))
  "version": "",
+ [[ false == true ]]
  "domain": "",
+ (( i < count ))
+ [[ true == true ]]
+ echo
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ (( i++ ))
+ search_terms=()
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ serialize_objects
+ [[ config =~ ^(logger|l)$ ]]
+ search_pattern=10.0.0.1
+ [[ config =~ ^(platform|p)$ ]]
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
 network-object host 192.168.1.11 ]]
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+++ date +%s%N
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'extracted_configuration={
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
+ for xitem in "${@}"
  "model": "",
  "version": "",
+ IFS==
  "domain": "",
  "hostname": ""
+ declare -a search_terms
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ print '{
}
  "vendor": "cisco",
+ newline 2
+ [[ platform =~ ^(export|r)$ ]]

  "model": "",
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list != *,* ]]
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
interface Vlan10
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
 ip address 10.0.1.2 255.255.255.0'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(console|o)$ ]]
+ result=0
  "version": "16.9",
++ export divisor=--MTc0OTAwNDc1NzAxNTQ4NDAwMAo--
+ (( i = 0 ))
+ [[ platform =~ ^(platform|p)$ ]]
  "domain": "",
+ local count=2
+ [[ verbose =~ ^(platform|p)$ ]]
  "hostname": "branch-isr-02"
+ [[ logger =~ ^(export|r)$ ]]
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+++ base64
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local verbose=true
+ IFS=' 	
'
+ [[ -n {
  "vendor": "cisco",
+ print '{
+ local target_platform=fortinet
+ [[ platform =~ ^(console|o)$ ]]
  "model": "",
  "vendor": "cisco",
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(search|s)$ ]]
+ debug=false
  "model": "",
+ [[ verbose == \h\e\l\p ]]
  "version": "",
  "domain": "",
+ [[ -z '' ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ [[ platform =~ ^(console|o)$ ]]
+ echo -en '{
+ [[ platform =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ platform =~ ^(extract|x)$ ]]
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(logger|l)$ ]]
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ local target_platform=fortinet
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i < count ))
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ [[ platform == \h\e\l\p ]]
+ local target_platform=fortinet
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ dry_run=false
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ cut -d/ -f2
++ cut -d/ -f2
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -z true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local parent_dir=reports/172.16.0.5/cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ grep -v '^\s*$'
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ export console_output=false
+ console_output=false
+ serialize_objects
++ export divisor=--MTc0OTAwNDc1NzA1MTM4OTAwMAo--
+ [[ -z true ]]
++ divisor=--MTc0OTAwNDc1NzA1MTM4OTAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console
+ local verbose=true
++ [[ -n '' ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ IFS=' 	
++ __DEVOPS_HELPERS_SOURCED=1
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ newline 2
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ [[ true == true ]]
+ newline
+ awk -v divisor=--MTc0OTAwNDc1NjUxMjk5MTAwMAo-- '
+ local count=1
                  BEGIN {
++ grep -v '^#'
++ alias network-configs--helper=network_configs__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console ]]
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ -z '' ]]
                    in_json_header = 0;
+ script_helper=false
                    blk = "";
                  }
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ [[ false == true ]]
                  /^[[:space:]]*$/ { next }
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ newline
+ [[ config =~ ^(config|c)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ alias network-extract--helper=network_extract__helper
+ local count=1
                    blk = $0;
+ (( i = 0 ))
                    next;
+ (( i < count ))
                  }
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
                  {
+ echo
+ search_pattern=10.0.1.2
                    blk = blk divisor " " $0;
+ (( i++ ))
                  }
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
+ mkdir -p reports/10.0.1.2/fortinet/.objects
                  END {
+ [[ logger == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ debug=false
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ IFS==
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ dry_run=false
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
                  }
+ read -r key value
++ mktemp -d
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ cat -n reports/172.31.255.254/misc/switch1.conf
  "model": "",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ alias serialize-object=serialize_objects
+ (( i = 0 ))
+ [[ config =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
  "model": "",
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
  "version": "",
+ grep -F 10.0.0.1
  "version": "",
  "domain": "",
+ newline 2
  "hostname": ""
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ search_terms=()
  "domain": "",
+ declare -a search_terms
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
}
+ for xitem in "${@}"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ [[ -z true ]]

+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list != *,* ]]
  "hostname": ""
+ mapfile -t search_terms
interface Vlan10
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
+ echo
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
 ip address 10.0.1.2 255.255.255.0'
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ export console_output=false
}
+ console_output=false

object-group network Metropolis-Internal
+ [[ -z true ]]
+ [[ -n {
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console ]]
 description Core internal LAN for application clusters
  "vendor": "cisco",
+ [[ -z '' ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
+ local count=2
+ (( i = 0 ))
 ip address 10.0.1.2 255.255.255.0 ]]
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ echo
+ alias parse-cisco=main
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ (( i++ ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
 network-object host 10.0.2.3
+ [[ config =~ ^(platform|p)$ ]]
 network-object 192.168.2.0 255.255.255.0
+ script_helper=false
+ [[ config =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ [[ config == \v\e\r\b\o\s\e ]]
+ declare -a search_terms
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local parent_dir=reports/10.0.0.1/fortinet
+ local search_pattern
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]]
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ [[ config =~ ^(logger|l)$ ]]
 network-object host 192.168.2.12

+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ set -euo pipefail
+ sed '1{/^[[:space:]]*$/d;}'
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ export LC_ALL=C
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ LC_ALL=C
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ newline 2
+ [[ config == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \d\e\b\u\g ]]
+ local first_search_entry=172.16.1.6
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ newline
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ local count=1

+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "cisco",
+ (( i++ ))
  "model": "",
+ (( i < count ))
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

+ [[ false == true ]]
object network Kent-Server
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
 host 10.0.2.3
+ result=0
+ local last_search_entry=172.16.1.6
+ [[ 0 -ne 0 ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ local count=2
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
version 12.4
+ serialize_objects
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
hostname access-sw1-west
+ case "${target_platform}" in
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ awk -v divisor=--MTc0OTAwNDc1NjUyMDg4MjAwMAo-- '
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ local count=1
                    # Skip platform metadata
++ tr -d '\r'
                    /^#(hostname|model|config-version)=/ { next }
+ (( i = 0 ))

+ script_filename=network-extract.shell
                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ (( i < count ))
+ script_filename=network-extract
+ echo
                      next;
                    }
+ export network_extract__console=console/network-extract.console

                    # Add edit line to current block
                    /^ edit / {
+ network_extract__console=console/network-extract.console
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
+ touch console/network-extract.console
+ (( i++ ))
                    /^ next$/ {
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
                      blk = blk divisor " " $0;
 description Internal mail & identity services ]]
+ [[ extract =~ ^(export|r)$ ]]
                      next;
                    }

+ [[ extract =~ ^(extract|x)$ ]]
                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
                    {
+ [[ extract =~ ^(logger|l)$ ]]
                      blk = blk divisor " " $0;
                    }

+ [[ extract =~ ^(platform|p)$ ]]
                    END {
                      # No need for final print — all blocks end with end
                    }
+ [[ extract =~ ^(search|s)$ ]]
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
++ echo -e --export
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7hxa2FeLpH
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7hxa2FeLpH
+ grep -F 10.0.1.2
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"

+ export 'nl=\n'
+ IFS==
interface Vlan1
+ nl='\n'
++ grep -v '^\s*$'
+ read -r key value
+ source ./scripts/devops-resources.shell
+ newline
+ local count=1
++ [[ -n '' ]]
+ (( i = 0 ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i < count ))
++ dirname reports/172.31.255.254/misc/switch1.conf
++ [[ 5 -lt 4 ]]
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
++ tr -d '\r'
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
++ cut -d/ -f2
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ grep -v '^#'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
++ grep -v '^\s*$'
+ case "${target_file}" in
 ip address 192.168.0.1 255.255.255.0
+ [[ logger =~ ^(search|s)$ ]]
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console
+ local search_pattern
++ mktemp -d
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger =~ ^(platform|p)$ ]]
+ local parent_dir=reports/172.31.255.254/misc
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ search_pattern=172.16.0.5
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ [[ 7 -eq 0 ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.n2jy5ltdkq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console --export --verbose
+ read -r key value
++ alias detect-vendor=detect_vendor
+ newline
+ local count=1
++ alias exit-error=exit_error
+ (( i = 0 ))
+ oIFS=' 	
+ (( i < count ))
'
+ echo
+ for xitem in "${@}"
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ newline 2
++ mktemp -d
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
 description Management Interface

+ local count=1
object-group network MGMT-ACCESS
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ local count=1
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ local count=2
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ local first_search_entry=10.10.10.10
+ (( i = 0 ))
+ newline
++ alias list-file=list_file
+ local last_search_entry=10.10.10.10
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
 description Management objects
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console
+ echo
++ alias log-error=log_error
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ basename reports/172.31.255.254/misc/switch1
+ echo
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ print '{
  "vendor": "cisco",
+ echo
+ echo
 network-object host 192.168.0.1
+ [[ logger =~ ^(platform|p)$ ]]
  "model": "",
+ [[ false == true ]]
  "version": "",
++ alias log-info=log_info
+ [[ true == true ]]
  "domain": "",
+ [[ true == true ]]
+ [[ export =~ ^(export|r)$ ]]
  "hostname": ""
}

object-group network Metropolis-Internal
+ [[ extract =~ ^(config|c)$ ]]
+ local first_search_entry=192.168.1.10
+ local export_objects=true
++ alias log-warn=log_warn
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
 network-object host 192.168.0.100
 description Core internal LAN for application clusters
+ (( i < count ))
+ newline
+ (( i++ ))
+ local last_search_entry=192.168.1.10
+ [[ extract =~ ^(export|r)$ ]]
 network-object host 10.0.2.3
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
++ alias print-message=message
+ (( i = 0 ))
 network-object 192.168.2.0 255.255.255.0
+ [[ logger =~ ^(search|s)$ ]]
++ alias print-newline=newline
 network-object host 192.168.2.12
+ (( i < count ))
 network-object host 10.10.10.10 ]]
+ [[ false == true ]]

+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ (( i < count ))
object network Kent-Server
++ alias pause=pause
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
 host 10.0.2.3
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
++ alias print-line=print
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGpGG3jjoG
+ echo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGpGG3jjoG
+ [[ logger == \h\e\l\p ]]
+ return 0
+ (( i++ ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ export 'nl=\n'
 description Internal mail & identity services'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
++ [[ -n '' ]]
++ echo -e --platform=cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ -n {
++ alias print-file=print_file
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
  "vendor": "cisco",
++ alias relative-configpath=relative_configpath
+ [[ export == \h\e\l\p ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console
}

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console ]]
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ case "${target_file}" in
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console
 network-object host 10.0.2.3
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
 network-object 192.168.2.0 255.255.255.0
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ alias system-metrics=system_metrics
 network-object host 192.168.2.12
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'

+ serialize_objects
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ echo -en '{
  "vendor": "cisco",
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
  "model": "",
  "version": "",
  "domain": "",
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
  "hostname": ""
}
++ [[ 5 -lt 4 ]]
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list

+ serialize_objects
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
++ echo -e --export
+ local count=1

++ alias detect-vendor=detect_vendor
+ ((  count == 0  ))
object network Kent-Server
++ cut -d/ -f2
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
 host 10.0.2.3
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
 description Internal mail & identity services'
+ newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
+ local count=1
+ (( i = 0 ))
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ (( i < count ))
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --export
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias exit-error=exit_error
+ [[ extract == \d\e\b\u\g ]]
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
++ alias list-file=list_file
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ] ]]
++ alias warning-message=warning
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
+ IFS==
++ export LC_ALL=C
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
++ alias log-error=log_error
++ LC_ALL=C
+ read -r key value
+ local count=1
++ alias log-info=log_info
+ sed '1{/^[[:space:]]*$/d;}'
+ ((  count == 0  ))
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ alias log-warn=log_warn
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ -z cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.1.2/misc/switch1.conf
++ alias pause=pause
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
++ alias print-file=print_file
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ alias relative-configpath=relative_configpath
++ export 'nl=\n'
+ newline
++ nl='\n'
+ local search_pattern
+ local count=1
++ export cache_location=.cache
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
++ cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ local 'prompt_message=Enter configuration file to be parsed: '
  "model": "",
+ [[ -z .cache/resources/misc/fw1.cfg ]]
  "version": "12.4",
  "domain": "",
+ [[ -z cisco ]]
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pLBafX7xP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pLBafX7xP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ -n {
  "vendor": "cisco",
+ source ./scripts/devops-resources.shell
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ [[ -n '' ]]
 description Management Interface

object-group network MGMT-ACCESS
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ alias list-file=list_file
 description Management Interface

++ alias log-error=log_error
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ alias log-info=log_info
++ alias log-warn=log_warn
+ case "${target_platform}" in
++ alias print-message=message
+ awk -v divisor=--MTc0OTAwNDc1NjU1MjQ0OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ echo -e --export
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/fortinet/.objects
++ alias system-metrics=system_metrics
+ [[ true == true ]]
+ newline
+ local count=1
++ export logs_location=logs
+ (( i = 0 ))
++ logs_location=logs
+ [[ true == true ]]
+ (( i < count ))
++ mkdir -p logs
+ [[ search =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console ]]
++ alias validate-address=validate_address
+ case "${target_file}" in
+ [[ search =~ ^(extract|x)$ ]]
+ newline
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--perimeter-fw1.cfg.console
++ alias warning-message=warning
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
++ export LC_ALL=C
+ newline
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
+ [[ export =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ newline
+ local count=1
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ local count=1
+ echo
+ local export_objects=true
+ IFS==
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ read -r key value
+ echo
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ (( i++ ))
++ LC_ALL=C
+ (( i < count ))
+ return 0
+ local count=2
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ local parent_dir=reports/10.0.2.3/cisco
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(console|o)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ grep -F 172.16.0.5
++ echo reports/172.31.255.254/misc/switch1.conf
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ conf == \c\o\n\f ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ [[ export == \h\e\l\p ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ export == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local parent_dir=reports/172.16.1.6/cisco
+ case "${target_file}" in
+ (( i < count ))
++ export 'nl=\n'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ (( i++ ))
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ nl='\n'
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ cut -d/ -f2
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --platform=cisco
+ IFS==
+ read -r key value
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
++ export cache_location=.cache
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ cache_location=.cache
+ [[ true == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export logs_location=logs
+ IFS==
++ logs_location=logs
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p logs
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ IFS==
+ read -r key value
++ basename reports/10.0.2.3/cisco/branch-isr-02
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ serialize_objects
++ basename reports/172.16.1.6/cisco/branch-isr-02
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ newline
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local count=1
+ [[ export =~ ^(logger|l)$ ]]
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ echo
+ [[ export =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ result=0
+ exit 0
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jNNdYsb1A1 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jNNdYsb1A1
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ for xitem in "${@}"
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ search_pattern=172.31.255.254
+ IFS==
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ read -r key value
+ mkdir -p reports/172.31.255.254/misc/.objects
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ newline 2
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ serialize_objects
+ result=0
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ (( i++ ))
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ case "${target_platform}" in
++ dirname reports/172.16.1.6/misc/switch3.conf
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ awk -v divisor=--MTc0OTAwNDc1NjU2MDA4ODAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
++ echo -e --platform=fortinet
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--fg-branch-vpn-01.cfg.console
+ grep -F 10.0.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ cat -n reports/10.0.2.3/misc/fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console
+ [[ config =~ ^(config|c)$ ]]
++ export console_location=console
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
++ console_location=console
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ mkdir -p console
+ [[ config =~ ^(extract|x)$ ]]
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
+ sed '/^[[:space:]]*$/d'
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ export jobs_location=jobs
+ [[ verbose =~ ^(logger|l)$ ]]
+ output_dir=reports/172.16.1.6/misc
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ ! -d reports/172.16.1.6/misc ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ verbose == \h\e\l\p ]]
+ local parent_dir=reports/172.18.1.20/cisco
+ [[ verbose == \d\e\b\u\g ]]
+ [[ cfg == \c\f\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local verbose=true
+ IFS=' 	
+ case "${target_platform}" in
++ dirname reports/10.0.1.2/misc/switch1.conf
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
'
+ [[ platform =~ ^(export|r)$ ]]
+ awk -v divisor=--MTc0OTAwNDc1NjU3Mzk5MTAwMAo-- '
                  BEGIN {
+ [[ platform =~ ^(extract|x)$ ]]
                    in_json_header = 0;
                    blk = "";
                  }
+ [[ platform =~ ^(logger|l)$ ]]
                  /^[[:space:]]*$/ { next }
++ export actions_logfile=console/run.console
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
                  /^{$/ { in_json_header = 1; next }
+ [[ platform =~ ^(platform|p)$ ]]
++ actions_logfile=console/run.console
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
++ touch console/run.console
                      next;
+ [[ platform =~ ^(config|c)$ ]]
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ platform =~ ^(console|o)$ ]]
++ export console_location=console
                    blk = $0;
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
++ console_location=console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
                    next;
+ local count=2
++ mkdir -p console
                  }
                  {
+ local search_pattern
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ jobs_location=jobs
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ result=0
+ [[ -z '' ]]
+ [[ cfg == \c\f\g ]]
+ exit 0
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UuDAuPKYM5 ]]
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
++ mkdir -p jobs
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UuDAuPKYM5
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ grep -F 172.31.255.254
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local search_pattern
+ (( i = 0 ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ echo
+ [[ logger == \h\e\l\p ]]
+ (( i++ ))
+ (( i < count ))
+ echo
++ echo -e --verbose
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ 0 -ne 0 ]]
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ debug=false
+ local verbose=true
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
++ command -v -- ./scripts/network-extract.shell
+ IFS=' 	
'
+ newline
+ newline
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ local target_platform=cisco
+ local count=1
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ echo
++ basename reports/172.18.1.20/cisco/branch-isr-02
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ debug=false
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ dry_run=false
+ [[ -z '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ dry_run=false
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local parent_dir=reports/10.0.1.2/misc
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ cat -n
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mktemp -d
+ IFS==
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ read -r key value
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ [[ -z true ]]
+ newline
+ [[ -z '' ]]
+ local count=1
+ export console_output=false
+ console_output=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo
+ [[ -z true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ (( i++ ))
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ output_dir=reports/10.10.10.10/cisco
+ (( i < count ))
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ local search_pattern
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ script_helper=false
++ export console_location=console
+ [[ -z '' ]]
++ console_location=console
++ cut -d/ -f2
+ [[ false == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ mkdir -p console
++ dirname reports/192.168.1.10/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
++ basename reports/10.0.1.2/misc/switch1
+++ date +%s%N
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ local verbose=true
++ cut -d/ -f2
+ [[ true == true ]]
+ IFS=' 	
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console
+ [[ -z true ]]
+ case "${target_file}" in
+++ base64
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console ]]
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ -z '' ]]
+ export console_output=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ [[ verbose =~ ^(logger|l)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ echo -e --platform=fortinet
+++ tr -dc a-zA-Z0-9
+ cat -n
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
+ search_terms=()
+ newline
+ declare -a search_terms
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --export
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console
+ export console_output=false
+ console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ script_helper=false
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SfDpOhCVoE
+ (( i++ ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SfDpOhCVoE
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ [[ false == true ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ export actions_logfile=console/run.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose == \h\e\l\p ]]
++ actions_logfile=console/run.console
++ touch console/run.console
+ search_pattern=10.0.2.3
++ [[ 5 -lt 4 ]]
+ mkdir -p reports/10.0.2.3/cisco/.objects
++ cut -d/ -f2
++ alias detect-vendor=detect_vendor
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
+ output_dir=reports/192.168.1.10/misc
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list != *,* ]]
++ alias exit-error=exit_error
+ mapfile -t search_terms
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]]
+ local SCRIPT_DIR=./scripts
+ local search_pattern
+ search_terms=()
+ [[ -z '' ]]
+ declare -a search_terms
+ script_helper=false
+ search_pattern=172.16.1.6
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
++ alias list-file=list_file
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]]
+ [[ verbose == \d\e\b\u\g ]]
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ [[ false == true ]]
+ local script_filename=cisco-configs.awk
++ alias log-error=log_error
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
++ alias log-info=log_info
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list != *,* ]]
++ alias log-warn=log_warn
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]]
++ alias print-message=message
+ search_terms=()
+ declare -a search_terms
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias print-newline=newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list != *,* ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local verbose=true
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ logger =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ logger =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ -z '' ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console
+ debug=false
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ dry_run=false
++ alias print-file=print_file
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ logger == \h\e\l\p ]]
++ alias relative-configpath=relative_configpath
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ for xitem in "${@}"
++ dirname -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ serialize_objects
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ alias validate-address=validate_address
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias warning-message=warning
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]]
++ export LC_ALL=C
+ search_terms=()
++ LC_ALL=C
+ declare -a search_terms
++ export 'nl=\n'
++ nl='\n'
++ export divisor=--MTc0OTAwNDc1NzExNTQ3MjAwMAo--
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]]
++ divisor=--MTc0OTAwNDc1NzExNTQ3MjAwMAo--
++ export cache_location=.cache
++ cache_location=.cache
+ source ./scripts/devops-helpers.shell
++ export logs_location=logs
++ logs_location=logs
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list != *,* ]]
++ mkdir -p logs
+ mapfile -t search_terms
+ newline
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console ]]
+ exit 0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console
++ alias network-configs--helper=network_configs__helper
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HbNuwtgmdN ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HbNuwtgmdN
++ command -v -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
++ echo reports/10.0.1.2/misc/switch1.conf
+ logs_location=logs
+ mkdir -p logs
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ tr -d '\r'
+ [[ true == true ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ touch console/run.console
+ search_pattern=172.18.1.20
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
++ cut -d/ -f2
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ tr -d '\r'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ grep -v '^\s*$'
+ [[ export =~ ^(config|c)$ ]]
++ export targets_location=targets
+ [[ export =~ ^(console|o)$ ]]
++ echo -e --export
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
++ targets_location=targets
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ serialize_objects
++ grep -v '^\s*$'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^#'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ tr -d '\r'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(extract|x)$ ]]
++ grep -v '^#'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console ]]
++ grep -v '^\s*$'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0QuhtHOiy/network-extract--switch1.conf.console
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ grep -v '^\s*$'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ case "${target_platform}" in
++ which awk
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ awk -v divisor=--MTc0OTAwNDc1NjU1MTg4NzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ script_filename=network-extract.shell
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ script_filename=network-extract
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ export network_extract__console=console/network-extract.console
                  }
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ grep -v '^#'
++ grep -v '^#'
+ [[ logger =~ ^(console|o)$ ]]
+ result=0
+ exit 0
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kIcBmuypqw ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kIcBmuypqw
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ logger =~ ^(extract|x)$ ]]
+ local parent_dir=reports/10.0.2.3/misc
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ search_pattern=10.0.1.2
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console
+ IFS==
+ [[ logger =~ ^(platform|p)$ ]]
+ read -r key value
+ mkdir -p reports/10.0.1.2/misc/.objects
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
+ IFS==
+ [[ export =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ read -r key value
+ local first_search_entry=203.0.113.25
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(console|o)$ ]]
+ local first_search_entry=192.168.0.1
+ local parent_dir=reports/192.168.0.1/cisco
++ export targets_location=targets
+ local last_search_entry=203.0.113.25
++ targets_location=targets
+ [[ export =~ ^(export|r)$ ]]
+ local last_search_entry=192.168.0.1
++ export targets_logfile=.cache/targets.jobs
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local export_objects=true
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ true == true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ search_pattern=10.10.10.10
+ [[ export =~ ^(platform|p)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ export =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ] ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ for xitem in "${@}"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ] ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ local count=1
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ ((  count == 0  ))
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ IFS==
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ newline
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ read -r key value
+ grep -F 10.0.2.3
+ result=0
+ exit 0
++ IFS=,
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qaRapE7qmf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qaRapE7qmf
++ echo 172.16.1.6
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ date +%s%N
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ case "${target_platform}" in
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ (( i < count ))
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ awk -v divisor=--MTc0OTAwNDc1NjU3MTkxNTAwMAo-- '
                  BEGIN {
+ local first_search_entry=192.168.100.100
                    in_json_header = 0;
+ awk -v divisor=--MTc0OTAwNDc1NjU1MjkzNDAwMAo-- '
+ (( i < count ))
                    blk = "";
++ divisor=--MTc0OTAwNDc1NzAxNTQ4NDAwMAo--
                  }
+ [[ search =~ ^(export|r)$ ]]
+ echo
                  /^[[:space:]]*$/ { next }
                  BEGIN {
                  /^{$/ { in_json_header = 1; next }
                    in_json_header = 0;
                  /^}$/ {
+ (( i++ ))
                    if (in_json_header == 1) {
                    blk = "";
+ (( i < count ))
+ local first_search_entry=192.0.2.50
                  }
+ source ./scripts/devops-helpers.shell
+ local first_search_entry=10.0.2.3
                  /^[[:space:]]*$/ { next }
                      in_json_header = 0;
+ local last_search_entry=10.0.2.3
                  /^{$/ { in_json_header = 1; next }
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
                  /^}$/ {
                    if (in_json_header == 1) {
                      next;
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search =~ ^(extract|x)$ ]]
                      in_json_header = 0;
                    }
+ [[ true == true ]]
                  }
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                      next;
                    }
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  }
                  (in_json_header == 1) { next }
+ local first_search_entry=172.18.1.20
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  (in_json_header == 1) { next }
+ local last_search_entry=172.18.1.20
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
                    blk = $0;
                  /^[^[:space:]]/ {
++ which awk
                    next;
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local last_search_entry=192.0.2.50
                  }
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
                    blk = $0;
++ [[ -n '' ]]
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
++ readonly __DEVOPS_HELPERS_SOURCED=1
                  {
                    next;
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/192.168.0.1/cisco/access-sw1-west
+ [[ search =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
                    blk = blk divisor " " $0;
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
                  }
+ [[ search =~ ^(platform|p)$ ]]
                  }
                  END {
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ true == true ]]
+++ base64
                  }
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(search|s)$ ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
                  {
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ] ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
                    blk = blk divisor " " $0;
                  }
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-configs--ips.list ]'
                  END {
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ [[ 5 -lt 4 ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]'
                  }
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local count=1
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local count=1
+ ((  count == 0  ))
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ search == \h\e\l\p ]]
  "version": "12.2",
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ] ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ local count=1
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --verbose
+ (( i < count ))
+ newline
++ alias parse-listings--helper=parse_listings__helper
+ local count=1
+ (( i = 0 ))
++ echo -e --export
+ (( i < count ))
+ print '{
++ which awk
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ print '{
  "vendor": "cisco",

  "model": "",
ASA Version 9.12(4)
  "version": "16.9",
hostname dmz-fw2-backup
  "domain": "",
domain-name global.dmz.example.net
+++ tr -dc a-zA-Z0-9

  "hostname": "branch-isr-02"
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
}


version 16.9
object-group network Sector-Wireless
hostname branch-isr-02
 description Staff WiFi clients

 network-object host 192.168.100.100
object-group network Lantern-DMZ
 network-object host 10.10.10.10'
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ echo
 network-object host 192.168.1.11'
++ alias network-configs--helper=network_configs__helper
+ [[ -n {
+ [[ -n {
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "model": "ASA",
  "version": "16.9",
  "version": "9.12(4)",
  "domain": "",
  "domain": "global.dmz.example.net",
  "hostname": "branch-isr-02"
  "hostname": "dmz-fw2-backup"
}
}


ASA Version 9.12(4)
++ sed -e '1s|^\(-\)\{1,\}||'
version 16.9
hostname dmz-fw2-backup
hostname branch-isr-02
domain-name global.dmz.example.net


+ [[ search == \d\e\b\u\g ]]
object-group network Lantern-DMZ
interface GigabitEthernet0/1
 description Protected but public-facing zone
 nameif inside
 network-object host 172.18.1.20
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
++ alias network-extract--helper=network_extract__helper
+ [[ search == \d\r\y\-\r\u\n ]]
 network-object host 192.168.1.11 ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]'
+ for xitem in "${@}"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]'

+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ] ]]
object network Titan-WLAN-Host
+ IFS==
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]'
+ echo -en '{
 host 192.168.100.100
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-configs--ips.list ]'
  "vendor": "cisco",
 description Backup inside NAT IP
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'

  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
object-group network Sector-Wireless
 description Staff WiFi clients
+ local 'prompt_message=Enter configuration file to be parsed: '
hostname branch-isr-02
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ echo -en '{
+ alias serialize-object=serialize_objects
  "vendor": "cisco",
  "model": "ASA",
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-configs--ips.list ]'
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ local count=1
domain-name global.dmz.example.net
+ ((  count == 0  ))

interface GigabitEthernet0/1
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]

object network Titan-WLAN-Host
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
 host 192.168.100.100
+ local count=1
 description Backup inside NAT IP
+ newline

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local count=1
+ ((  count == 0  ))
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ (( i = 0 ))
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ (( i < count ))
+ [[ -z cisco ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ local count=1
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -z cisco ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ alias parse-cisco=main
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]

+ newline
+ [[ -z x ]]
+ [[ -z cisco ]]
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ export logs_location=logs
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ newline
+ logs_location=logs
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ mkdir -p logs
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ (( i < count ))
+ echo
+ [[ 7 -eq 0 ]]
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.n2jy5ltdkq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console --export --verbose
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local script_filename=cisco-configs.awk
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ local 'extracted_configuration={
+ IFS==
  "vendor": "cisco",
+ read -r key value
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ (( i = 0 ))
 network-object host 192.168.2.12
+ (( i < count ))
  "domain": "",
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ [[ conf == \c\o\n\f ]]
+ (( i++ ))
object network Hydra-Link
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ case "${target_platform}" in
+ [[ extract =~ ^(console|o)$ ]]
 network-object host 198.51.100.75'
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ result=0
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ extract =~ ^(logger|l)$ ]]
  "hostname": "campus-sw-access01"
+ awk -v divisor=--MTc0OTAwNDc1NjU0MzgxODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ [[ extract =~ ^(platform|p)$ ]]
                    }
+ final_output=reports/10.0.0.1/misc/switch1.conf
++ which awk
                  }
+ extract_location=reports/10.0.0.1/misc/switch1.conf
 host 198.51.100.75
                  (in_json_header == 1) { next }
+ [[ export =~ ^(console|o)$ ]]
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract =~ ^(search|s)$ ]]
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
}
+ [[ extract == \h\e\l\p ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
 description Branch NAT egress
+ [[ extract == \d\e\b\u\g ]]

  "hostname": "branch-isr-02"
++ IFS=,
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
}
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ local export_objects=true
 network-object host 198.51.100.75'
++ echo 10.10.10.10
+ [[ export =~ ^(extract|x)$ ]]


+ sed '1{/^[[:space:]]*$/d;}'
version 16.9
version 12.2
+ [[ extract == \v\e\r\b\o\s\e ]]
hostname campus-sw-access01
+ for xitem in "${@}"
hostname branch-isr-02
+ result=0
+ IFS==
+ [[ export =~ ^(logger|l)$ ]]

interface Vlan1
+ read -r key value

 ip address 192.168.0.1 255.255.255.0
interface GigabitEthernet0/0/1
 description Switch Mgmt
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -n {
 ip address 192.168.2.12 255.255.255.0

 description Workstation LAN
+ local search_pattern
object-group network Floor-Networks
+ [[ export =~ ^(platform|p)$ ]]
  "vendor": "cisco",

object-group network Hydra-Edge
 description Remote site uplink
 description End-user and service devices
 network-object host 192.168.0.1
+ grep -F 10.10.10.10
 network-object host 192.168.2.12
 network-object host 192.168.0.100
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
  "model": "",
  "version": "16.9",
 network-object host 198.51.100.75 ]]
+ [[ export =~ ^(search|s)$ ]]
 network-object host 10.10.10.10'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ declare -a execute__netwowrk_extract
+ [[ export == \v\e\r\b\o\s\e ]]
++ IFS=,
++ IFS=,
++ echo 192.168.0.100
++ basename reports/10.0.2.3/misc/fw1
++ echo 192.168.1.11
+ result=0
+ [[ -n {
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
++ IFS=,
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "branch-isr-02"
}
  "domain": "",
  "hostname": "campus-sw-access01"

version 16.9
++ echo 10.10.10.10
hostname branch-isr-02
}

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
+ for xitem in "${@}"
+ IFS==
+ sed '/^[[:space:]]*$/d'
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
++ which awk
+ declare -a execute__netwowrk_extract
++ printf '%*s' 12 ''
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
++ dirname reports/10.0.0.1/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ script_filename=network-extract.shell
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ script_filename=network-extract
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
+ export network_extract__console=console/network-extract.console
 description Global secure relay
 network-object host 192.0.2.50'
+ network_extract__console=console/network-extract.console
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",

  "version": "9.12(4)",
 network-object host 192.168.2.12
  "domain": "global.dmz.example.net",
+ touch console/network-extract.console
  "hostname": "dmz-fw2-backup"
version 12.2
 network-object host 198.51.100.75 ]]
}

hostname campus-sw-access01

ASA Version 9.12(4)
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
hostname dmz-fw2-backup
 description Switch Mgmt
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ local 'indent=            '
+ [[ true == true ]]
+ newline 2

object-group network Floor-Networks
 description End-user and service devices
+ [[ config =~ ^(config|c)$ ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ newline 2
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ result=0
+ [[ config =~ ^(export|r)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(logger|l)$ ]]
++ which awk
+ [[ config =~ ^(platform|p)$ ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ [[ config =~ ^(search|s)$ ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ config == \h\e\l\p ]]
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ config == \d\e\b\u\g ]]
+ [[ cfg == \c\f\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
+ print '{
 network-object host 10.10.10.10 ]]
+ [[ cfg == \c\f\g ]]
+ newline
  "vendor": "cisco",
+ [[ cfg == \c\f\g ]]
+ local count=2
  "model": "",
+ for xitem in "${@}"
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local count=1
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ IFS==

+ read -r key value
+ final_output=reports/172.18.1.20/misc/fw1.cfg
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
version 16.9
+ (( i < count ))
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ echo
hostname branch-isr-02

+ local count=1
+ (( i++ ))
interface GigabitEthernet0/0/1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
 ip address 192.168.2.12 255.255.255.0
+ (( i < count ))
+ echo
 description Workstation LAN
++ which awk

object-group network Hydra-Edge
+ print '{
+ echo
+ output_dir=reports/10.0.0.1/misc
 description Remote site uplink
 network-object host 192.168.2.12
  "vendor": "cisco",
+ (( i++ ))
 network-object host 198.51.100.75'
  "model": "ASA",
  "version": "9.12(4)",
+ (( i < count ))
  "domain": "global.dmz.example.net",
+ echo
  "hostname": "dmz-fw2-backup"
+ local count=2
}
+ (( i++ ))
++ echo -e --platform=cisco
+ [[ -n {
+ (( i++ ))

+ [[ ! -d reports/10.0.0.1/misc ]]
ASA Version 9.12(4)
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
  "version": "16.9",
hostname dmz-fw2-backup
  "domain": "",
domain-name global.dmz.example.net
  "hostname": "branch-isr-02"
+ (( i < count ))
}

object-group network Watchtower-DMZ

 description Global secure relay
version 16.9
 network-object host 192.0.2.50'
hostname branch-isr-02

+ [[ true == true ]]
interface GigabitEthernet0/0/1
+ (( i < count ))
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
++ which awk
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ [[ -n {
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -en '{
+ (( i < count ))
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "ASA",
  "model": "",
  "version": "16.9",
+ print '{
  "version": "9.12(4)",
++ IFS=,
  "domain": "",
  "vendor": "cisco",
  "domain": "global.dmz.example.net",
+ newline
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
  "model": "",
  "hostname": "branch-isr-02"
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
  "hostname": "dmz-fw2-backup"
++ echo 172.16.1.6
}
  "version": "16.9",
}
+ local count=1
  "domain": "",

  "hostname": "branch-isr-02"

version 16.9
hostname branch-isr-02
ASA Version 9.12(4)
}
++ echo -e --verbose

hostname dmz-fw2-backup

interface GigabitEthernet0/0/1
domain-name global.dmz.example.net
 ip address 192.168.2.12 255.255.255.0

 description Workstation LAN
version 16.9

object-group network Watchtower-DMZ
object-group network Hydra-Edge
 description Global secure relay
 description Remote site uplink
 network-object host 192.0.2.50 ]]
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Hydra-Edge
+ echo -en '{
 description Remote site uplink
  "vendor": "cisco",
 network-object host 192.168.2.12
  "model": "ASA",
+ print '{
  "vendor": "cisco",
 network-object host 198.51.100.75'
  "model": "",
  "version": "9.12(4)",
  "version": "12.2",
  "domain": "global.dmz.example.net",
  "domain": "",
  "hostname": "dmz-fw2-backup"
  "hostname": "campus-sw-access01"
}
}


ASA Version 9.12(4)
version 12.2
hostname dmz-fw2-backup
hostname campus-sw-access01
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ [[ -n {
+ sed '1{/^[[:space:]]*$/d;}'
  "vendor": "cisco",

domain-name global.dmz.example.net
  "model": "",
interface Vlan1

 ip address 192.168.0.1 255.255.255.0
  "version": "16.9",
++ IFS=,
object-group network Watchtower-DMZ
  "domain": "",
 description Global secure relay
 description Switch Mgmt
 network-object host 192.0.2.50'

object-group network Floor-Networks
++ echo 172.16.0.5
  "hostname": "branch-isr-02"
 description End-user and service devices
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
 network-object host 192.168.0.1
}

 network-object host 192.168.0.100
version 16.9
 network-object host 10.10.10.10'
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
 network-object host 198.51.100.75 ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ -n {
  "vendor": "cisco",
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ case "${target_file}" in
  "model": "",
  "model": "",
  "version": "16.9",
  "version": "12.2",
  "domain": "",
  "domain": "",
  "hostname": "branch-isr-02"
  "hostname": "campus-sw-access01"
}
}
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list

+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
version 16.9

hostname branch-isr-02
version 12.2

hostname campus-sw-access01
object network Hydra-Link

 host 198.51.100.75
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
 description Branch NAT egress
interface Vlan1

+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ (( i = 0 ))
object-group network Hydra-Edge
+ (( i < count ))
 ip address 192.168.0.1 255.255.255.0
 description Remote site uplink
 description Switch Mgmt
+ echo
 network-object host 192.168.2.12

+ (( i++ ))
object-group network Floor-Networks
 description End-user and service devices
+ (( i++ ))
+ (( i < count ))
 network-object host 198.51.100.75'
 network-object host 192.168.0.1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ command -v -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2gdr89layx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console --export --verbose
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ cat -n
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ for xitem in "${@}"
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ IFS==
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local count=1
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ declare -a execute__netwowrk_extract
+ echo
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ false == true ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ read -r key value
+ newline
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ echo
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ (( i < count ))
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ (( i++ ))
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ (( i < count ))
+ newline 2
+ output_dir=reports/192.0.2.50/cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ local count=2
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/172.18.1.20/misc
+ echo
+ serialize_objects
+ [[ ! -d reports/172.18.1.20/misc ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ newline 2
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
++ dirname -- ./scripts/network-extract.shell
+ newline
+ newline
+ local count=2
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ which awk
+ [[ platform == \h\e\l\p ]]
+ echo
+ [[ platform == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
++ which awk
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline 2
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local 'indent=            '
+ IFS=' 	
++ printf '%*s' 12 ''
'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
++ command -v -- ./scripts/network-extract.shell
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
+ echo
+ local count=2
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
++ printf '%*s' 12 ''
+ (( i++ ))
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ return 0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(console|o)$ ]]
+ debug=false
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ [[ extract =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console
+ [[ -z '' ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ export console_output=false
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console
+ local 'indent=            '
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ for xitem in "${@}"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console
+ IFS==
+ read -r key value
+ console_output=false
+ local 'indent=            '
+ echo
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ newline
+ newline
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ true == true ]]
+ local count=1
+ [[ -z '' ]]
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ [[ false == true ]]
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ newline
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ (( i = 0 ))
+ local count=1
+ echo
+ newline
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]]
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ search_terms=()
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ mapfile -t search_terms
++ dirname -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ echo
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline 2
+ local awk_bin=/usr/bin/awk
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=2
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ false == true ]]
++ echo -e --platform=cisco
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ newline
+ local count=1
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ search =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ search =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ serialize_objects
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ local count=1
+ (( i = 0 ))
+ local parent_dir=reports/192.168.0.100/cisco
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ (( i = 0 ))
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ local 'indent=            '
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ false == true ]]
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ newline
+ [[ true == true ]]
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local count=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ [[ true == true ]]
+ (( i++ ))
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--access-sw1-west.cfg.console
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
++ tr -d '\r'
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ (( i = 0 ))
  "model": "FortiGate-60F",
+ serialize_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(config|c)$ ]]
+ newline
  "version": "v7.2.5.F",
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ local count=1
+ serialize_objects
+ (( i = 0 ))
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
++ which awk
++ grep -v '^\s*$'
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ which awk
+ echo
}
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ result=0
+ [[ config =~ ^(console|o)$ ]]
+ [[ 0 -ne 0 ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ grep -v '^#'
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ logger =~ ^(console|o)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ config =~ ^(export|r)$ ]]
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]

+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
config firewall address
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local count=1
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ [[ config =~ ^(search|s)$ ]]
  set comment "Wakandan data store"
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ platform == \h\e\l\p ]]
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ platform == \d\e\b\u\g ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ IFS==
+ read -r key value
+ newline
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i < count ))
+ echo
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ false == true ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ true == true ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ serialize_objects
+ local parent_dir=reports/192.0.2.50/cisco
 next
end'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ result=0
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n {
+ for xitem in "${@}"
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ IFS==
  "domain": "",
+ read -r key value
  "hostname": "fg-branch-vpn-01"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
}

#hostname="fg-branch-vpn-01"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
#model="FortiGate-60F"
+ [[ logger == \d\r\y\-\r\u\n ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ logger == \v\e\r\b\o\s\e ]]
config firewall address
+ for xitem in "${@}"
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ IFS==
  set comment "Wakandan data store"
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ local count=1
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ echo
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ (( i < count ))
+ serialize_objects
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ (( i++ ))
+ (( i < count ))
 next
+ read -r key value
end ]]
+ result=0
+ exit 0
+ local search_pattern
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AVwIonUXL0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AVwIonUXL0
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
++ IFS=,
+ local last_search_entry=192.168.100.100
+ local first_search_entry=198.51.100.75
+ (( i++ ))
+ local 'extracted_configuration={
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
+ (( i < count ))
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
++ echo 10.0.0.1
  "vendor": "cisco",
++ IFS=,
++ echo 10.0.2.3
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
++ IFS=,
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
  "model": "",
  "version": "12.2",
+ [[ false == true ]]
++ echo 192.0.2.50
  "domain": "",
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ local target_config=.cache/resources/misc/switch1.conf
+ declare -a execute__netwowrk_extract
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local parent_dir=reports/192.168.1.11/cisco
+ declare -a execute__netwowrk_extract
+ [[ config =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ] ]]
++ IFS=,
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ [[ config =~ ^(extract|x)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
++ echo 172.18.1.20
+ [[ config =~ ^(logger|l)$ ]]
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ local count=1
+ [[ config =~ ^(platform|p)$ ]]
+ ((  count == 0  ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ declare -a execute__netwowrk_extract
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ config == \h\e\l\p ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ serialize_objects
+ for xitem in "${@}"
+ IFS==
  "hostname": "campus-sw-access01"
+ read -r key value
}

version 12.2
hostname campus-sw-access01
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')

+ declare -a execute__netwowrk_extract
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ newline
  "domain": "",
+ local 'extracted_configuration={
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ local count=1
#model="FortiGate-60F"
  "vendor": "cisco",
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i = 0 ))

++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
  "model": "",
config firewall address
object-group network Floor-Networks
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ (( i < count ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "version": "12.2",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ echo -e --export
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
  "domain": "",
+ echo
 description End-user and service devices
 network-object host 192.168.0.1
  "hostname": "campus-sw-access01"
 network-object host 192.168.0.100
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "fortinet",
++ which awk
  "model": "FortiGate-200F",
+ local parent_dir=reports/192.168.100.100/cisco
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ result=0
  "model": "",
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ (( i < count ))
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
  "domain": "",
  "version": "",
+ local search_pattern
  "domain": "",
++ which awk
  "hostname": "fg-campus-core"
}

++ echo -e --export
#hostname="fg-campus-core"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ -z fortinet ]]
++ cut -d/ -f2
+ local parent_dir=reports/198.51.100.75/cisco
+ [[ true == true ]]
  "hostname": "campus-sw-access01"
++ basename reports/192.168.1.11/cisco/branch-isr-02
  "version": "12.2",
}

version 12.2
hostname campus-sw-access01

+ sed '1{/^[[:space:]]*$/d;}'
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  "domain": "",
object-group network Floor-Networks
  set subnet 192.168.1.11 255.255.255.255
  "hostname": "campus-sw-access01"
 description End-user and service devices
+ local parent_dir=reports/192.168.2.12/cisco
  set comment "Captain America’s secure endpoint"
+ newline
}
 network-object host 192.168.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
 next
end'
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local awk_bin=/usr/bin/awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ logger == \h\e\l\p ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local awk_bin=/usr/bin/awk
+ [[ logger == \d\e\b\u\g ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "vendor": "fortinet",
+ [[ logger == \d\r\y\-\r\u\n ]]
  "model": "FortiGate-200F",
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ IFS==
+ local count=1
+ read -r key value
+ (( i = 0 ))

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
+ (( i < count ))
 network-object host 192.168.0.100
 description End-user and service devices
+ echo
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
 network-object host 10.10.10.10 ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
  "hostname": "fg-campus-core"
+ local awk_bin=/usr/bin/awk
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'

+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ basename reports/198.51.100.75/cisco/branch-isr-02
++ cut -d/ -f2
+ [[ extract =~ ^(export|r)$ ]]
+ local search_pattern
+ search_pattern=192.168.0.100
+ local 'extracted_configuration={
+ local parent_dir=reports/192.168.0.1/cisco
  "vendor": "cisco",
config firewall address
 edit "Hawkeye-Nest"
++ basename reports/192.168.2.12/cisco/branch-isr-02
  set subnet 172.16.1.6 255.255.255.255
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ [[ extract =~ ^(extract|x)$ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
  set comment "Remote sniper node"
 network-object host 203.0.113.25
 next
+ [[ extract =~ ^(logger|l)$ ]]
+ newline 2
 network-object host 172.16.0.5
end'
+ [[ extract =~ ^(platform|p)$ ]]

+ result=0
object network Edge-Terminal
 host 172.16.0.5
+ [[ extract =~ ^(search|s)$ ]]
 description Internet firewall handoff'
++ printf '%*s' 12 ''
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ -n {
+ local count=2
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ (( i = 0 ))
  "version": "",
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
++ printf '%*s' 12 ''
+ result=0
+ [[ extract == \d\e\b\u\g ]]
  "domain": "",
+ [[ export =~ ^(config|c)$ ]]
+ echo
+ [[ export =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ local export_objects=true
  "model": "",
  "version": "",
+ [[ export =~ ^(extract|x)$ ]]
  "domain": "",
+ local 'indent=            '
  "hostname": ""
}

+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'indent=            '
  "hostname": "fg-campus-core"
object-group network Panther-Edge
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ [[ true == true ]]
}
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
++ printf '%*s' 12 ''
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
+ newline
 description End-user and service devices
 network-object host 192.168.0.1
+ local count=1
 network-object host 192.168.0.100
+ print '{
+ newline
 description Internet-facing proxy systems
  "vendor": "fortinet",
+ local export_objects=true
  "model": "FortiGate-200F",
+ (( i = 0 ))
+ [[ export =~ ^(extract|x)$ ]]
+ local count=1
  "version": "",
 network-object host 10.10.10.10'
  "domain": "",
+ (( i < count ))
+ (( i = 0 ))
+ [[ export =~ ^(logger|l)$ ]]
 network-object host 203.0.113.25

+ echo
+ for xitem in "${@}"
+ (( i < count ))
  "hostname": "fg-campus-core"
 network-object host 172.16.0.5
+ [[ -n {
  "vendor": "cisco",
+ echo
  "model": "",
}
+ (( i++ ))
  "version": "12.2",
+ print '{
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
  "domain": "",
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
  "vendor": "cisco",
+ local 'indent=            '

#hostname="fg-campus-core"
  "hostname": "campus-sw-access01"
+ (( i < count ))
  "model": "",
+ IFS==
+ (( i < count ))

+ [[ extract =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
}
#hostname="fg-campus-core"
++ printf '%*s' 12 ''
#model="FortiGate-200F"
object network Edge-Terminal
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ extract =~ ^(console|o)$ ]]
  "version": "12.2",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'


config firewall address
version 12.2
 edit "Cap-HQ"
  "domain": "",
  "hostname": "campus-sw-access01"
hostname campus-sw-access01
}

object-group network Floor-Networks

+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ extract =~ ^(export|r)$ ]]
  set subnet 192.168.1.11 255.255.255.255
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
 description End-user and service devices
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 192.168.0.1
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
version 12.2
  set comment "Captain America’s secure endpoint"
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
 next
 network-object host 192.168.0.100
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
end'
+ local count=1
#model="FortiGate-200F"
hostname campus-sw-access01
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
object-group network Floor-Networks
+ (( i < count ))
 network-object host 10.10.10.10 ]]
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ read -r key value
++ echo -e --export
+ [[ export =~ ^(search|s)$ ]]
 description End-user and service devices

+ [[ -n {
+ local 'indent=            '
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ newline
+ echo
  "vendor": "fortinet",
 network-object host 192.168.0.1
++ basename reports/192.168.0.1/cisco/campus-sw-access01
+ echo -en '{
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
 network-object host 192.168.0.100
+ [[ extract =~ ^(logger|l)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
config firewall address
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
  "vendor": "cisco",
  "model": "FortiGate-200F",
 edit "Hawkeye-Nest"
 network-object host 10.10.10.10'
  "model": "",
  "version": "12.2",
  "version": "",
  "domain": "",
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
  "hostname": "campus-sw-access01"
 host 172.16.0.5
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ -n {
}
  set subnet 172.16.1.6 255.255.255.255
+ local count=1
 description Internet firewall handoff ]]
+ [[ extract =~ ^(search|s)$ ]]
  "domain": "",
  set comment "Remote sniper node"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": "fg-campus-core"
  "vendor": "cisco",

}
version 12.2

+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "model": "",
#hostname="fg-campus-core"
+ [[ extract == \h\e\l\p ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
hostname campus-sw-access01
+ [[ extract == \d\e\b\u\g ]]
+ [[ export == \d\e\b\u\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "version": "12.2",
#model="FortiGate-200F"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'

+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ message '                .cache/resources/misc/fw3.cfg'
  "domain": "",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
config firewall address
  "hostname": "campus-sw-access01"
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
object-group network Floor-Networks
+ local 'message=                .cache/resources/misc/fw3.cfg'
 description End-user and service devices
}
 edit "Cap-HQ"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 192.168.0.1

 network-object host 192.168.0.100
  set subnet 192.168.1.11 255.255.255.255
version 12.2
 next
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
hostname campus-sw-access01
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i = 0 ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
end ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
 network-object host 10.10.10.10'
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
  set comment "Captain America’s secure endpoint"
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list

+ search_pattern=192.0.2.50
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
 next
object-group network Floor-Networks
+ newline
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
end ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i = 0 ))
+ IFS==
+ local count=1
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
+ (( i = 0 ))
+ read -r key value
+ local search_pattern
 description End-user and service devices
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo -en '{
+ local search_pattern
+ echo
  "vendor": "fortinet",
+ for xitem in "${@}"
+ mkdir -p reports/192.0.2.50/cisco/.objects
  "model": "FortiGate-200F",
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
  "version": "",
 network-object host 192.168.0.1
+ (( i++ ))
  "domain": "",
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ sed '1{/^[[:space:]]*$/d;}'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 192.168.0.100
  "hostname": "fg-campus-core"
 network-object host 10.10.10.10 ]]
+ local search_pattern
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ set -euo pipefail
+ (( i < count ))
}
+ (( i++ ))

#hostname="fg-campus-core"
+ export LC_ALL=C
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
#model="FortiGate-200F"
+ echo -en '{
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo
  "vendor": "cisco",
+ IFS==

  "model": "",
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
config firewall address
  "version": "12.2",
+ read -r key value
+ (( i++ ))
  "domain": "",
+ (( i < count ))
+ message '                .cache/resources/misc/fw1.cfg'
 edit "Cap-HQ"
  "hostname": "campus-sw-access01"
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set subnet 192.168.1.11 255.255.255.255
}
  set comment "Captain America’s secure endpoint"
+ local count=1
+ LC_ALL=C
 next
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ (( i = 0 ))

+ local 'message=                .cache/resources/misc/fw1.cfg'
version 12.2
+ (( i < count ))
end'
+ (( i < count ))
hostname campus-sw-access01
+ echo

object-group network Floor-Networks
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ (( i++ ))
 description End-user and service devices
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ newline
 network-object host 10.10.10.10'
+ (( i < count ))
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ print '{
  "vendor": "cisco",
  "model": "",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "version": "",
  "domain": "",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "hostname": ""
}
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ export actions_logfile=console/run.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ message '                .cache/resources/misc/switch1.conf'
++ export divisor=--MTc0OTAwNDc1NzEzOTI0NjAwMAo--
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
++ divisor=--MTc0OTAwNDc1NzEzOTI0NjAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ -n {
+ local 'message=                .cache/resources/misc/switch1.conf'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ echo -e '                .cache/resources/misc/switch1.conf'
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
+ newline
 description Internet firewall handoff ]]
+ print '{
+ local count=1
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ (( i = 0 ))
+ echo -en '{
  "vendor": "cisco",
  "version": "",
  "domain": "",
  "model": "",
  "hostname": "fg-campus-core"
  "version": "",
}

  "domain": "",
++ echo -e --platform=fortinet
#hostname="fg-campus-core"
#model="FortiGate-200F"
  "hostname": ""
}


object-group network Panther-Edge
config firewall address
 description Internet-facing proxy systems
+ (( i < count ))
 edit "Hawkeye-Nest"
+ echo
 network-object host 203.0.113.25
 network-object host 172.16.0.5
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
+ (( i++ ))

 next
end'
object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ (( i < count ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local search_pattern
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ echo -e --platform=cisco
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
++ cut -d/ -f2
++ echo -e --verbose
+ awk -v divisor=--MTc0OTAwNDc1NjYzMzA4NzAwMAo-- '
                  BEGIN {
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ export == \v\e\r\b\o\s\e ]]
                    if (in_json_header == 1) {
++ sed -e '1s|^\(-\)\{1,\}||'
                      in_json_header = 0;
++ cut -d/ -f2
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ for xitem in "${@}"
                    blk = blk divisor " " $0;
                  }
                  END {
+ IFS==
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ read -r key value
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
++ cut -d/ -f2
+ newline 2
+ search_pattern=192.168.1.11
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ case "${target_platform}" in
+ newline 2
+ awk -v divisor=--MTc0OTAwNDc1NjU3Mzc2NzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ newline 2
++ echo -e --verbose
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ local count=2
+ grep -F 192.168.0.100
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i = 0 ))
object-group network Wakanda-Core
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ [[ platform =~ ^(console|o)$ ]]
+ echo
 network-object 10.0.0.0 255.255.255.0

+ local 'extracted_configuration={
+ [[ platform =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
  "vendor": "cisco",
object network Panther-Gateway
+ newline
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ grep -F 192.0.2.50
  "model": "",
 host 10.0.2.3
+ [[ platform =~ ^(logger|l)$ ]]
 description Secure outbound concentrator'
+ local count=2
  "version": "",
+ [[ platform =~ ^(platform|p)$ ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local count=2
+ search_pattern=192.168.100.100
  "domain": "",
  "hostname": ""
}
+ [[ platform =~ ^(config|c)$ ]]

object-group network Fortress-Wireless
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ newline 2
+ [[ platform =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ result=0
 description Secure wireless access layer
+ [[ platform =~ ^(export|r)$ ]]
+ search_pattern=192.168.2.12
+ [[ -n {
 network-object host 172.18.1.20
+ [[ platform =~ ^(search|s)$ ]]
 network-object host 192.168.1.10'
+ mkdir -p reports/192.168.2.12/cisco/.objects
  "vendor": "cisco",
+ [[ platform == \h\e\l\p ]]
  "model": "",
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fDnvAyg6BN
+ result=0
  "version": "",
+ [[ platform == \d\e\b\u\g ]]
  "domain": "",
+ search_pattern=198.51.100.75
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ platform == \v\e\r\b\o\s\e ]]
+ newline 2
+ (( i = 0 ))
+ echo
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ [[ -n {
+ (( i < count ))
  "hostname": ""
+ (( i = 0 ))
}
+ (( i++ ))

+ (( i < count ))
  "vendor": "cisco",
++ [[ -n '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
object-group network Wakanda-Core
+ (( i < count ))
+ local count=2
 description National Core Routing Zone
+ local 'extracted_configuration={
+ echo
+ local count=2
  "vendor": "cisco",
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fDnvAyg6BN
  "model": "ASA",
+ [[ true == true ]]
  "version": "",
+ IFS==
 network-object host 192.168.1.10
+ [[ platform =~ ^(extract|x)$ ]]
  "version": "9.14(3)",
  "domain": "",
+ read -r key value
 network-object host 10.0.2.3
  "hostname": ""
}

  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
 network-object 10.0.0.0 255.255.255.0
object-group network Fortress-Wireless

+ (( i < count ))
ASA Version 9.14(3)
+ (( i = 0 ))
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
hostname perimeter-fw1
+ (( i = 0 ))
 description Secure wireless access layer

+ (( i++ ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
domain-name edge.dc.example.com
+ (( i < count ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'

object network Panther-Gateway
+ (( i++ ))
 host 10.0.2.3
 network-object host 172.18.1.20
object-group network Avengers-DMZ
+ (( i < count ))
+ echo
 network-object host 192.168.1.10 ]]
+ sed '/^[[:space:]]*$/d'
+ export 'nl=\n'
 description Public access layer
 description Secure outbound concentrator ]]
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ [[ platform =~ ^(logger|l)$ ]]
+ result=0
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n {
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
  "vendor": "cisco",
+ echo
  "model": "ASA",
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ local target_platform=fortinet
  "version": "9.14(3)",
+ nl='\n'
++ cut -d/ -f2
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo
+ (( i++ ))
+ [[ platform =~ ^(search|s)$ ]]
+ source ./scripts/devops-resources.shell
  "domain": "edge.dc.example.com",
+ (( i++ ))
+ echo
+ (( i++ ))
+ local 'extracted_configuration={
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
  "vendor": "cisco",
  "model": "",
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i++ ))
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
  "version": "",
+ (( i < count ))
+ [[ false == true ]]
  "hostname": "perimeter-fw1"
+ (( i < count ))
++ [[ -n '' ]]
}
+ [[ true == true ]]
+ [[ true == true ]]

+ [[ verbose =~ ^(platform|p)$ ]]
ASA Version 9.14(3)
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
hostname perimeter-fw1
+ [[ verbose == \d\e\b\u\g ]]
domain-name edge.dc.example.com
+ [[ verbose == \d\r\y\-\r\u\n ]]

object-group network Avengers-DMZ
+ [[ verbose == \v\e\r\b\o\s\e ]]
 description Public access layer
+ local verbose=true
 network-object host 192.0.2.50
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ IFS=' 	
 network-object host 203.0.113.25
'
+ (( i < count ))
  "domain": "",
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo
+ [[ platform == \d\e\b\u\g ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ -z '' ]]
  "hostname": ""
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ (( i++ ))
++ [[ 5 -lt 4 ]]
+ newline
+ debug=false
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ alias detect-vendor=detect_vendor
+ result=0
+ (( i++ ))
++ alias exit-error=exit_error
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

+ [[ true == true ]]
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ -n {
  "vendor": "cisco",
  "version": "",
  "model": "",
  "domain": "",
  "hostname": ""
}
  "version": "",
+ [[ -n {

  "vendor": "cisco",
object-group network Wakanda-Core
  "model": "",
 description National Core Routing Zone
  "version": "",
 network-object host 192.168.1.10
  "domain": "",
 network-object host 10.0.2.3
  "hostname": ""
 network-object 10.0.0.0 255.255.255.0
}


object network Panther-Gateway
object-group network Fortress-Wireless
 host 10.0.2.3
 description Secure wireless access layer
 description Secure outbound concentrator ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ echo -en '{

  "vendor": "cisco",
  "model": "",
object-group network Wakanda-Core
  "version": "",
 description National Core Routing Zone
  "domain": "",
 network-object host 192.168.1.10
  "hostname": ""
 network-object host 10.0.2.3
}
 network-object 10.0.0.0 255.255.255.0


object-group network Fortress-Wireless
object network Panther-Gateway
 description Secure wireless access layer
 host 10.0.2.3
 network-object host 172.18.1.20
 description Secure outbound concentrator'
 network-object host 192.168.1.10'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
++ alias list-file=list_file
+ for xitem in "${@}"
+ result=0
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
++ alias log-error=log_error
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ read -r key value
+ [[ true == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ result=0
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
  "domain": "",
  "hostname": ""
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ (( i = 0 ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
}
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
++ alias log-info=log_info
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ newline
+ search_pattern=192.168.0.1
++ alias log-warn=log_warn
+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
++ alias print-message=message
+ echo
+ [[ verbose =~ ^(platform|p)$ ]]
+ dry_run=false
+ (( i++ ))
++ alias print-newline=newline
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ console_output=false
+ local verbose=true
+ [[ -z true ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ IFS=' 	
+ script_helper=false
'
+ newline
+ [[ -z '' ]]
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ debug=false
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ (( i < count ))
+ local count=1
+ echo
+ [[ -z '' ]]
+ (( i++ ))

+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ serialize_objects
+ dry_run=false
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ newline
+ (( i < count ))
+ [[ -z true ]]
+ [[ false == true ]]
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
++ alias pause=pause
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]]
object-group network Avengers-Office
+ export console_output=false
+ search_terms=()
+ console_output=false
+ declare -a search_terms
+ (( i = 0 ))
 description VLAN access layer
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
++ alias print-line=print
+ output_dir=reports/198.51.100.75/fortinet
+ newline
+ (( i < count ))
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ echo
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]]
+ [[ -z true ]]
 network-object host 10.0.0.1
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ (( i++ ))
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local count=1
++ alias print-file=print_file
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list != *,* ]]
+ [[ -z '' ]]
+ (( i < count ))
+ mapfile -t search_terms
+ (( i = 0 ))
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
++ alias relative-configpath=relative_configpath
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ alias system-metrics=system_metrics
+ (( i < count ))
+ echo
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ (( i++ ))
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i < count ))
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
++ alias validate-address=validate_address
+ case "${target_file}" in
+ case "${target_platform}" in
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ awk -v divisor=--MTc0OTAwNDc1NjYzNTk4MDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ local count=1
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
                  }
+ (( i < count ))
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ cat -n
+ newline 2
+ case "${target_platform}" in
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console
+ awk -v divisor=--MTc0OTAwNDc1NjYyOTk3MjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ local count=2
                  /^[[:space:]]*$/ { next }
+ (( i = 0 ))
                  /^{$/ { in_json_header = 1; next }
+ (( i < count ))
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ newline 2
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ echo
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ case "${target_platform}" in
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1NjY0NDkyNzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ awk -v divisor=--MTc0OTAwNDc1NjY2ODY3NzAwMAo-- '
                  BEGIN {
                    blk = "";
                    in_json_header = 0;
                  }
                    blk = "";
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
                  }
                  /^[[:space:]]*$/ { next }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                    }
                  }
                  /^[^[:space:]]/ {
                  (in_json_header == 1) { next }
+ local count=2
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                  /^[^[:space:]]/ {
                    next;
++ sed -e '1s|^\(-\)\{1,\}||'
                  }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  {
                    blk = $0;
                    blk = blk divisor " " $0;
                    next;
+ (( i = 0 ))
                  }
                  }
                  {
++ tr -d '\r'
                  END {
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
                    blk = blk divisor " " $0;
+ echo
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i++ ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                  }
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i++ ))
+ (( i < count ))
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console
+ local count=2
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ true == true ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ newline
++ grep -v '^\s*$'
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ echo
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ (( i++ ))
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ echo
++ nl='\n'
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ echo
+ (( i++ ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ (( i++ ))
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
++ grep -v '^#'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n {
  "vendor": "cisco",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console ]]
  "model": "",
  "version": "",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console
  "domain": "",
  "hostname": ""
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console ]]
}
+ case "${target_file}" in

object-group network Avengers-Office
 description VLAN access layer
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ command -v -- ./scripts/network-extract.shell
+ grep -F 192.168.100.100
+ (( i++ ))
+ (( i < count ))
++ export cache_location=.cache
++ cache_location=.cache
++ echo -e --export
++ export logs_location=logs
+ [[ false == true ]]
++ logs_location=logs
+ [[ true == true ]]
+ local parent_dir=reports/192.168.1.10/fortinet
++ mkdir -p logs
+ grep -F 192.168.2.12
+ grep -F 192.168.1.11
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ tr -d '\r'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ local first_search_entry=203.0.113.25
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ logger =~ ^(extract|x)$ ]]
+ local last_search_entry=203.0.113.25
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ newline
+ serialize_objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ [[ false == true ]]
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ [[ logger =~ ^(logger|l)$ ]]
+ grep -F 198.51.100.75
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
++ grep -v '^\s*$'
+ sed '1{/^[[:space:]]*$/d;}'
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ sed '/^[[:space:]]*$/d'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ newline
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ echo
+ [[ false == true ]]
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ newline
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ -z cisco ]]
+ local count=1
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ serialize_objects
+ (( i = 0 ))
+ serialize_objects
+ [[ true == true ]]
++ grep -v '^#'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ false == true ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--dmz-fw2-backup.cfg.console
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ [[ export =~ ^(config|c)$ ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ [[ logger == \h\e\l\p ]]
+ serialize_objects
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
++ export jobs_location=jobs
++ jobs_location=jobs
+ IFS==
+ read -r key value
++ mkdir -p jobs
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ serialize_objects
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ newline
+ echo
+ result=0
+ newline
+ local count=1
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ newline 2
+ (( i++ ))
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ case "${target_platform}" in
+ local count=2
++ dirname -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ awk -v divisor=--MTc0OTAwNDc1NjY0NTc3NTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ echo
                  }
+ [[ false == true ]]
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ (( i++ ))
+ cat -n
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
                      in_json_header = 0;
+ (( i < count ))
                      next;
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ false == true ]]
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ true == true ]]
+ (( i++ ))
                    blk = $0;
+ (( i < count ))
                    next;
+ echo
                  }
                  {
+ newline
+ (( i++ ))
                    blk = blk divisor " " $0;
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ (( i < count ))
                  }
+ [[ true == true ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ true == true ]]
+ serialize_objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ grep -F 192.168.0.1
+ local first_search_entry=192.168.1.10
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ local last_search_entry=192.168.1.10
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
++ echo -e --verbose
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
+ local parent_dir=reports/10.0.2.3/misc
+ local parent_dir=reports/172.18.1.20/misc
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
+ serialize_objects
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
++ echo -e --export
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ result=0
+ exit 0
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lmmeQpGbu2 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lmmeQpGbu2
+ local count=1
+ (( i = 0 ))
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ serialize_objects
+ (( i < count ))
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ echo
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ (( i++ ))
+ sed '/^[[:space:]]*$/d'
+ local parent_dir=reports/192.0.2.50/cisco
+ (( i < count ))
+ result=0
+ local search_pattern
+ [[ 0 -ne 0 ]]
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ local script_filename=fortinet-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ result=0
++ basename reports/172.18.1.20/misc/fw1
+ [[ 0 -ne 0 ]]
+ newline
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ local count=1
++ basename reports/10.0.2.3/misc/fw3
+ (( i = 0 ))
+ newline
+ result=0
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local parent_dir=reports/192.168.0.100/cisco
+ echo
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ local parent_dir=reports/192.168.1.11/fortinet
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -z cisco ]]
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ newline
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ echo
+ (( i++ ))
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ newline
+ echo
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local count=1
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ return 0
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
++ export console_location=console
+ (( i++ ))
+ newline
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ (( i < count ))
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ [[ true == true ]]
++ console_location=console
+ local count=1
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ cfg == \c\f\g ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ newline
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ mkdir -p console
+ echo
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ case "${target_file}" in
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console
++ basename reports/192.0.2.50/cisco/perimeter-fw1
++ which awk
+ cat -n
++ basename reports/192.168.1.11/fortinet/fg-campus-core
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ local verbose=true
+ local search_pattern
+ local search_pattern
+ IFS=' 	
'
+ [[ -z '' ]]
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ cut -d/ -f2
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]]
+ cat -n
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ search_terms=()
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local parent_dir=reports/10.10.10.10/cisco
+ local parent_dir=reports/172.16.1.6/fortinet
+ [[ export =~ ^(config|c)$ ]]
+ local parent_dir=reports/172.16.0.5/misc
+ newline
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ local count=1
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ (( i = 0 ))
++ touch console/run.console
+ (( i < count ))
+ local search_pattern
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ local search_pattern
+ return 0
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ output_dir=reports/203.0.113.25/cisco
+ [[ export =~ ^(logger|l)$ ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
++ echo reports/10.0.2.3/misc/fw3.cfg
++ echo reports/172.18.1.20/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console
+ [[ false == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ cat -n
++ cut -d/ -f2
++ IFS=,
+ (( i < count ))
++ echo 198.51.100.75
++ cut -d/ -f2
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
++ tr -d '\r'
++ command -v -- ./scripts/network-extract.shell
++ basename reports/172.16.1.6/fortinet/fg-campus-core
++ basename reports/10.10.10.10/cisco/campus-sw-access01
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ serialize_objects
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console ]]
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--access-sw1-west.cfg.console
+ echo
+ cat -n
+ (( i++ ))
++ basename reports/172.16.0.5/misc/fw3
+ (( i < count ))
+ return 0
++ grep -v '^\s*$'
++ cut -d/ -f2
+ [[ true == true ]]
++ dirname reports/10.0.0.1/misc/switch1.conf
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ grep -v '^#'
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ dirname -- ./scripts/network-extract.shell
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ echo -e --verbose
++ cut -d/ -f2
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_pattern=10.0.2.3
+ search_pattern=172.18.1.20
+ mkdir -p reports/10.0.2.3/misc/.objects
+ mkdir -p reports/172.18.1.20/misc/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ newline
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ local search_pattern
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console
+ local search_pattern
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ return 0
+ [[ export =~ ^(logger|l)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console
++ export targets_location=targets
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ targets_location=targets
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console ]]
+ search_pattern=192.0.2.50
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--branch-isr-02.cfg.console
+ local search_pattern
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console
++ export targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(search|s)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console ]]
+ [[ export == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(console|o)$ ]]
+ local parent_dir=reports/10.0.0.1/misc
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local search_pattern
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ cat -n
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(search|s)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ true == true ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ local first_search_entry=192.168.1.10
+ console_output=false
+ [[ -z true ]]
+ local last_search_entry=192.168.1.10
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]]
+ search_terms=()
+ case "${target_platform}" in
+ [[ true == true ]]
+ declare -a search_terms
+ awk -v divisor=--MTc0OTAwNDc1NjcwODIxMjAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ] ]]

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-configs--ips.list ]'
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

+ local count=1
                    # Finalize block at end
                    /^end$/ {
+ ((  count == 0  ))
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/192.168.1.10/misc/fw3.cfg
++ actions_logfile=console/run.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]'
++ touch console/run.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]'
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-configs--ips.list ]'
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ declare -a execute__netwowrk_extract
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ local count=1
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ newline
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ local count=1
++ echo reports/172.16.0.5/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ grep -F 172.16.1.6
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+++ date +%s%N
++ cut -d/ -f2
++ echo 192.168.1.10
+ echo
+ (( i++ ))
+ (( i < count ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ cut -d/ -f2
++ __DEVOPS_HELPERS_SOURCED=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ case "${target_platform}" in
++ cut -d/ -f2
+ [[ export == \v\e\r\b\o\s\e ]]
+ awk -v divisor=--MTc0OTAwNDc1NjU3MTg5ODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+++ base64
                  }
                ' reports/10.0.1.2/misc/switch1.conf
+ local first_search_entry=192.168.2.12
+ [[ true == true ]]
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ which awk
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
++ echo reports/10.0.2.3/misc/fw1.cfg
+ grep -F 172.18.1.20
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+++ base64
++ echo -e --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
++ cut -d/ -f2
+ declare -a execute__netwowrk_extract
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ which awk
++ cut -d/ -f2
+ echo
+ (( i++ ))
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ for xitem in "${@}"
+ local count=1
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z fortinet ]]
+ read -r key value
+ echo
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ sed '/^[[:space:]]*$/d'
+ echo
+ grep -F 10.0.1.2
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ alias serialize-object=serialize_objects
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local awk_bin=/usr/bin/awk
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
++ which awk
++ tr -d '\r'
+++ date +%s%N
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ cat -n
+ search_pattern=10.0.2.3
+ mkdir -p reports/10.0.2.3/misc/.objects
+++ base64
++ grep -v '^\s*$'
++ export divisor=--MTc0OTAwNDc1NzI2OTg3NjAwMAo--
++ divisor=--MTc0OTAwNDc1NzI2OTg3NjAwMAo--
+ search_pattern=192.168.0.1
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ [[ -n '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ printf '%*s' 12 ''
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yyz7htu6tq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console --export --verbose
+ IFS=' 	
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
++ echo -e --verbose
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
++ [[ 5 -lt 4 ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'indent=            '
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ result=0
++ alias parse-listings--helper=parse_listings__helper
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]]
+ (( i++ ))
+ search_terms=()
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ declare -a search_terms
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list != *,* ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ mapfile -t search_terms
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local count=1
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ alias network-configs--helper=network_configs__helper
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ newline
+ result=0
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
++ alias network-extract--helper=network_extract__helper
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ printf '%*s' 12 ''
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ alias serialize-object=serialize_objects
+ return 0
+ message '                .cache/resources/misc/switch3.conf'
+ newline
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ script_filename=network-extract.shell
+ local 'message=                .cache/resources/misc/switch3.conf'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ local count=1
+ [[ true == true ]]
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract
+ echo
+ (( i++ ))
+ (( i < count ))
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
+ touch console/network-extract.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'indent=            '
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console ]]
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console ]]
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
++ export divisor=--MTc0OTAwNDc1NzI3NjAxODAwMAo--
++ divisor=--MTc0OTAwNDc1NzI3NjAxODAwMAo--
+ local first_search_entry=10.0.0.1
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ local last_search_entry=10.0.0.1
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ source ./scripts/devops-helpers.shell
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ alias parse-cisco=main
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z x ]]
++ [[ 5 -lt 4 ]]
+ newline
+ export logs_location=logs
+ logs_location=logs
+ local count=1
+ (( i = 0 ))
+ mkdir -p logs
+ (( i < count ))
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-configs--ips.list ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
++ alias parse-listings--helper=parse_listings__helper
+ ((  count == 0  ))
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ export =~ ^(config|c)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ oIFS=' 	
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
+ [[ export =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local export_objects=true
+ newline
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ export =~ ^(logger|l)$ ]]
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
'
+ local count=1
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ (( i = 0 ))
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ search_pattern=192.168.1.11
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ read -r key value
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
++ printf '%*s' 12 ''
+ case "${target_file}" in
+ cat reports/10.0.1.2/misc/.objects/switch1.list
++ alias network-configs--helper=network_configs__helper
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias network-extract--helper=network_extract__helper
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ case "${target_file}" in
+ local 'indent=            '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ alias serialize-object=serialize_objects
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ tr -d '\r'
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ cat -n
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ cat -n
+ (( i = 0 ))
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=1
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ echo
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i++ ))
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ -z x ]]
+ (( i = 0 ))
+ export logs_location=logs
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ export == \d\e\b\u\g ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ logs_location=logs
+ local verbose=true
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ mkdir -p logs
+ for xitem in "${@}"
+ echo
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ IFS=' 	
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ cat -n
+ read -r key value
+ [[ true == true ]]
+ (( i++ ))
+ [[ verbose =~ ^(extract|x)$ ]]
'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ debug=false
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ grep -v '^\s*$'
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ script_helper=false
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ [[ false == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]]
+ search_terms=()
+ case "${target_platform}" in
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1NjU5OTE2NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ awk -v divisor=--MTc0OTAwNDc1NjYxMzQ3MTAwMAo-- '
                  BEGIN {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
                    in_json_header = 0;
++ grep -v '^#'
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.atisdphzd1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i++ ))
+ output_dir=reports/192.168.100.100/fortinet
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/192.168.0.1/fortinet
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ output_dir=reports/203.0.113.25/cisco
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ oIFS=' 	
+ echo
'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+ script_filename=network-extract.shell
+ (( i < count ))
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console ]]
+ newline
+ return 0
+ for xitem in "${@}"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console
+ script_filename=network-extract
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console ]]
+ IFS==
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ output_dir=reports/192.168.2.12/fortinet
+ read -r key value
+ [[ true == true ]]
+ case "${target_file}" in
+ export network_extract__console=console/network-extract.console
+ local count=1
+ return 0
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--branch-isr-02.cfg.console
+ network_extract__console=console/network-extract.console
+ (( i < count ))
+ touch console/network-extract.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ grep -F 192.168.0.1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console
+ grep -F 10.0.2.3
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ command -v -- ./scripts/network-extract.shell
+ script_filename=network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ command -v -- ./scripts/network-extract.shell
+ touch console/network-extract.console
++ tr -d '\r'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
  "model": "",
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "version": "",
++ grep -v '^\s*$'
+ [[ true == true ]]
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ result=0
+ [[ -n {
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
  "vendor": "cisco",
  "model": "",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ] ]]
  "version": "",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
  "domain": "",
  "hostname": ""
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ [[ search =~ ^(config|c)$ ]]
+ ((  count == 0  ))
++ grep -v '^#'
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ echo -e --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ conf == \c\o\n\f ]]
+ local 'extracted_configuration={
+ final_output=reports/10.0.0.1/misc/switch3.conf
  "vendor": "cisco",
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
  "model": "ASA",
+ [[ 7 -eq 0 ]]
+ result=0
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.atisdphzd1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ print '{
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console --export --verbose
+ result=0
  "vendor": "cisco",
++ dirname -- ./scripts/network-extract.shell
  "version": "9.12(4)",
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
  "model": "",
+ [[ true == true ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

+ oIFS=' 	
'
interface Vlan2
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
 ip address 172.16.1.6 255.255.255.0'
++ dirname -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
  "domain": "global.dmz.example.net",
+ [[ -n {
  "vendor": "cisco",
  "hostname": "dmz-fw2-backup"
}
  "model": "",

+ [[ true == true ]]
ASA Version 9.12(4)
+ [[ 0 -ne 0 ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console ]]
  "version": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console
+ local 'extracted_configuration={
hostname dmz-fw2-backup
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console
  "vendor": "cisco",
+ [[ true == true ]]
domain-name global.dmz.example.net
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console
  "model": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console ]]
  "domain": "",
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ 7 -eq 0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
  "hostname": ""
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ result=0
}
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cjry2ouykk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console ]]
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
  "version": "",
+ exit 0

  "domain": "",

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XYQRE0hkjp ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console
+ newline
+ search_pattern=192.168.0.100
interface Vlan2
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console --export --verbose
 ip address 172.16.1.6 255.255.255.0'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console
  "hostname": ""
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ local count=1
+ case "${target_file}" in
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console ]]
+ (( i = 0 ))
+ [[ search =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console ]]
interface GigabitEthernet0/0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XYQRE0hkjp
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_file}" in
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ case "${target_file}" in

+ newline
+ local first_search_entry=198.51.100.75
+ echo
 nameif guest
+ oIFS=' 	
+ local last_search_entry=198.51.100.75
'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WIyFoWste5/network-extract--switch1.conf.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--branch-isr-02.cfg.console
object-group network Fortress-Wireless
+ for xitem in "${@}"
 description Secure wireless access layer
 network-object host 172.18.1.20
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ search =~ ^(export|r)$ ]]
 network-object host 192.168.1.10'
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
+ local count=1
+ (( i < count ))
 ip address 10.10.10.10 255.255.255.0
+ (( i = 0 ))
 description Guest access interface

+ (( i < count ))
object network Shield-WiFi-Alias
 host 10.10.10.10
+ echo
 description Guest NAT

+ (( i++ ))
object-group network Sector-Wireless
+ (( i < count ))
+ IFS==
 description Staff WiFi clients
+ read -r key value
+ [[ true == true ]]
++ dirname reports/10.0.0.1/misc/switch3.conf
+ [[ search =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
 network-object host 192.168.100.100
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ result=0
 network-object host 10.10.10.10'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n {
+ [[ search =~ ^(logger|l)$ ]]
+ result=0
  "vendor": "cisco",
+ [[ search =~ ^(platform|p)$ ]]
+ local SCRIPT_DIR=./scripts
  "model": "",
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local verbose=true
  "version": "",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
  "domain": "",
+ [[ -n {
  "hostname": ""
+ IFS=' 	
+ local script_filename=fortinet-configs.awk
  "vendor": "cisco",
}
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
'
+ [[ search =~ ^(extract|x)$ ]]
++ export divisor=--MTc0OTAwNDc1NzI2NzA2MTAwMAo--
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ] ]]

  "model": "ASA",
+ local script_filepath=./scripts/extract/fortinet-configs.awk
  "version": "9.12(4)",
+ [[ search == \h\e\l\p ]]
object-group network Fortress-Wireless
+ [[ search =~ ^(logger|l)$ ]]
 description Secure wireless access layer
+ [[ -z '' ]]
+ [[ search =~ ^(platform|p)$ ]]
  "domain": "global.dmz.example.net",
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
  "hostname": "dmz-fw2-backup"
+ search_pattern=172.16.0.5
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ local count=1
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ result=0
}
+ exit 0

+ local count=1
ASA Version 9.12(4)
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B42RYdOEMg ]]
+ ((  count == 0  ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B42RYdOEMg
+ result=0
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ exit 0
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3AUw285IsZ ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3AUw285IsZ
+ newline
+ local count=1
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ grep -F 192.168.1.10
++ basename reports/10.0.0.1/misc/switch1
+ (( i < count ))
+ IFS==
+ read -r key value
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local SCRIPT_DIR=./scripts
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local script_filename=fortinet-configs.awk
+ case "${target_file}" in
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ cat reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
++ which awk
  "hostname": ""
}

object-group network Fortress-Wireless
++ sed -e '1s|^\(-\)\{1,\}||'
 description Secure wireless access layer
 network-object host 172.18.1.20
+ newline
 network-object host 192.168.1.10'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
  "version": "",
  "domain": "",
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
  "hostname": ""
}
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'

object-group network Fortress-Wireless
 description Secure wireless access layer
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ newline 2
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ output_dir=reports/10.0.0.1/misc
++ which awk
+ [[ ! -d reports/10.0.0.1/misc ]]
+ cat -n
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ local count=2
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
++ which awk
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ result=0
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bV5j02BY6F ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bV5j02BY6F
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ result=0
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SOekcTfFp3 ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SOekcTfFp3
+ newline
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list
+ local count=1
+ [[ search == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ search == \d\e\b\u\g ]]
+ result=0
+ (( i < count ))
+ exit 0
+ [[ search =~ ^(config|c)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ezwoiqO8cP ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ezwoiqO8cP
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ cat -n reports/172.16.1.6/misc/switch3.conf
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ verbose == \d\e\b\u\g ]]
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console
++ IFS=,
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
++ echo 192.168.100.100
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ newline
+ local verbose=true
++ IFS=,
+ [[ search =~ ^(config|c)$ ]]
+ local count=1
+ IFS=' 	
+ (( i = 0 ))
'
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ [[ -z '' ]]
+ [[ search =~ ^(console|o)$ ]]
++ echo 203.0.113.25
+ (( i++ ))
+ debug=false
+ newline 2
+ [[ -z '' ]]
+ [[ search =~ ^(export|r)$ ]]
+ dry_run=false
+ (( i < count ))
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ search =~ ^(platform|p)$ ]]
+ return 0
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ local count=2
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console
+ IFS==
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console ]]
+ [[ config =~ ^(console|o)$ ]]
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ read -r key value
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console ]]
+ [[ config =~ ^(export|r)$ ]]
++ IFS=,
++ which awk
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ IFS=,
++ echo 192.168.2.12
++ echo 192.168.0.1
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ echo
+ case "${target_file}" in
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ newline 2
+ [[ config =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ output_dir=reports/192.168.2.12/fortinet
+ [[ config =~ ^(search|s)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ config == \h\e\l\p ]]
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ [[ config == \d\r\y\-\r\u\n ]]
+ newline
+ [[ config == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ local count=1
+ for xitem in "${@}"
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ local count=2
+ (( i = 0 ))
+ console_output=false
+ (( i < count ))
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ dry_run=false
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ (( i = 0 ))
+ echo
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ read -r key value
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ (( i < count ))
+ (( i++ ))
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ newline
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console ]]
+ (( i < count ))
+ [[ -z true ]]
+ [[ -z '' ]]
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ export console_output=false
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ -z '' ]]
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ script_helper=false
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ false == true ]]
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ serialize_objects
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local script_filename=cisco-configs.awk
+ (( i++ ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ console_output=false
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ case "${target_file}" in
++ which awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw1.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ [[ -z true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ local awk_bin=/usr/bin/awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list != *,* ]]
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ mapfile -t search_terms
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ dirname reports/172.16.1.6/misc/switch3.conf
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
++ which awk
+ [[ config =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ local awk_bin=/usr/bin/awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--access-sw1-west.cfg.console
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ config =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ config =~ ^(extract|x)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ printf '%*s' 12 ''
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ true == true ]]
+ search_pattern=10.10.10.10
+ [[ config == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ local 'indent=            '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]
+ IFS==
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ output_dir=reports/198.51.100.75/cisco
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i < count ))
+ echo
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ false == true ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ true == true ]]
+ local parent_dir=reports/172.16.1.6/misc
+ newline
+ local count=1
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ (( i < count ))
+ echo
+ serialize_objects
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
+ local 'indent=            '
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ echo
+ [[ config =~ ^(config|c)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ printf '%*s' 12 ''
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ grep -v '^\s*$'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ tr -d '\r'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local target_config=.cache/resources/misc/fw1.cfg
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ [[ config =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ result=0
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
++ basename reports/172.16.1.6/misc/switch3
+ newline
+ [[ extract =~ ^(platform|p)$ ]]
+ read -r key value
+ exit 0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ grep -v '^#'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tw070dpquJ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract == \h\e\l\p ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Tw070dpquJ
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ for xitem in "${@}"
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local SCRIPT_DIR=./scripts
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ grep -v '^\s*$'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local script_filename=fortinet-configs.awk
+ [[ true == true ]]
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ newline
+ local count=1
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1
+ echo
+ result=0
+ (( i++ ))
+ exit 0
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.guQ4pGBSu6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.guQ4pGBSu6
++ dirname -- ./scripts/network-extract.shell
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(extract|x)$ ]]
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
+ [[ extract =~ ^(platform|p)$ ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ local search_pattern
+ [[ extract =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --platform=fortinet
+ read -r key value
+ local parent_dir=reports/192.168.1.10/misc
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ search_pattern=172.16.1.6
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ] ]]
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local count=1
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ ((  count == 0  ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ divisor=--MTc0OTAwNDc1NzI2NzA2MTAwMAo--
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ newline
+ [[ extract == \h\e\l\p ]]
+ local first_search_entry=10.10.10.10
+ [[ extract == \d\e\b\u\g ]]
+ mkdir -p reports/172.16.0.5/misc/.objects
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local count=1
+ (( i = 0 ))
+ local last_search_entry=10.10.10.10
+ (( i = 0 ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ IFS==
+ local 'extracted_configuration={
+ [[ true == true ]]
++ basename reports/192.168.1.10/misc/fw1
+ read -r key value
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ echo
config system interface
 edit "wifi"
+ source ./scripts/devops-helpers.shell
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
 next
end
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ] ]]

+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
++ [[ -n '' ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
++ readonly __DEVOPS_HELPERS_SOURCED=1
config firewall address
+ (( i++ ))
 edit "Titan-WLAN-Host"
+ local count=1
  set subnet 192.168.100.100 255.255.255.255
+ ((  count == 0  ))
  set comment "Guest WiFi node"
 next
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
end

+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
config firewall address
+ (( i < count ))
 edit "Wanda-Field"
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ (( i = 0 ))
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ [[ -z fortinet ]]
+ result=0
+ [[ true == true ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

+ newline
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ local count=1

+ (( i = 0 ))
+ local parent_dir=reports/10.10.10.10/cisco
config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
++ mktemp -d
 next
end

++ which awk
config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ (( i < count ))
end ]]
++ echo reports/172.16.1.6/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ echo
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ echo -e --platform=cisco

object network Sentinel-NAT
 host 203.0.113.25
+ (( i++ ))
 description Corporate NAT edge'
+ (( i < count ))
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
 description Corporate NAT edge ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
++ IFS=,
++ echo 192.168.2.12
+ echo
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i++ ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(config|c)$ ]]
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ [[ extract == \h\e\l\p ]]
  "domain": "",
++ echo -e --platform=cisco
  "hostname": "fg-campus-core"
}

+ local awk_bin=/usr/bin/awk
#hostname="fg-campus-core"
+ print '{
#model="FortiGate-200F"

config system interface
  "vendor": "cisco",
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
  "model": "ASA",
+ [[ extract == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ extract == \d\r\y\-\r\u\n ]]
 next
  "version": "9.12(4)",
end

  "domain": "global.dmz.example.net",
config firewall address
  "hostname": "dmz-fw2-backup"
 edit "Titan-WLAN-Host"
}
  set subnet 192.168.100.100 255.255.255.255

  set comment "Guest WiFi node"
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'extracted_configuration={
ASA Version 9.12(4)
 next
  "vendor": "fortinet",
end
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",

hostname dmz-fw2-backup
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ local 'extracted_configuration={
domain-name global.dmz.example.net
  "domain": "",
  "vendor": "fortinet",
config firewall address
 edit "Wanda-Field"

object network Sentinel-NAT
 host 203.0.113.25
  set subnet 192.168.100.100 255.255.255.255
 description Corporate NAT edge'
  set comment "Wanda’s chaos relay"
 next
end'
+ for xitem in "${@}"
+ IFS==
  "hostname": "fg-branch-vpn-01"
}

+ local search_pattern
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ read -r key value
  "model": "FortiGate-60F",
+ [[ -n {
+ [[ -n {
  "version": "v7.2.5.F",
  "vendor": "fortinet",
  "vendor": "cisco",
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  "domain": "",
  "model": "FortiGate-200F",
  "version": "",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "",
  "domain": "global.dmz.example.net",
  "hostname": "fg-campus-core"
  "hostname": "dmz-fw2-backup"
}
}


#hostname="fg-campus-core"
ASA Version 9.12(4)
++ which awk
hostname dmz-fw2-backup
#model="FortiGate-200F"
domain-name global.dmz.example.net



config firewall address
config system interface
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  "hostname": "fg-branch-vpn-01"
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "wifi"
  set comment "Backup uplink for Milano crew"
}
object network Sentinel-NAT
  set ip 192.168.100.100 255.255.255.0
 host 203.0.113.25
 description Corporate NAT edge ]]
  set alias "Wireless VLAN"
 next

end
+ echo -en '{
  "vendor": "cisco",

  "model": "ASA",
config firewall address
 next
  "version": "9.12(4)",
 edit "Titan-WLAN-Host"
#hostname="fg-branch-vpn-01"
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
  "domain": "global.dmz.example.net",
  set subnet 192.168.100.100 255.255.255.255
end'
#model="FortiGate-60F"
+ sed '1{/^[[:space:]]*$/d;}'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  set comment "Guest WiFi node"
+ [[ -z fortinet ]]
  "hostname": "dmz-fw2-backup"

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console
config system interface
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ result=0
 edit "internal"
+ [[ true == true ]]
}
 next
+ [[ -n {
  "vendor": "fortinet",

end
  "model": "FortiGate-60F",
  set ip 192.168.2.12 255.255.255.0
++ alias parse-listings--helper=parse_listings__helper

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console ]]
  set alias "User LAN"
config firewall address
  "version": "v7.2.5.F",
 edit "Wanda-Field"
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ newline
}
 next
ASA Version 9.12(4)

+ local count=1
  set subnet 192.168.100.100 255.255.255.255
+ (( i < count ))
end
hostname dmz-fw2-backup
#hostname="fg-branch-vpn-01"
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console
  set comment "Wanda’s chaos relay"

domain-name global.dmz.example.net
#model="FortiGate-60F"
 next

end ]]
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
config firewall address
++ printf '%*s' 12 ''
  set alias "Wireless VLAN"
 edit "Branch-Gateway"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ sed '/^[[:space:]]*$/d'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
config firewall address
 next
 edit "Guardians-Relay"
end'
+ local 'indent=            '
+ [[ true == true ]]
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ result=0
+ [[ -n {
+ newline
  "vendor": "fortinet",
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ local count=1
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ (( i = 0 ))
+ local search_pattern
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console
  "domain": "",
+ (( i++ ))
  "hostname": "fg-branch-vpn-01"
+ [[ platform =~ ^(console|o)$ ]]
+ search_pattern=172.16.1.6
+ (( i < count ))
}
+ [[ platform =~ ^(export|r)$ ]]
+ mkdir -p reports/172.16.1.6/misc/.objects
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ IFS=,

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ platform =~ ^(extract|x)$ ]]
++ echo 198.51.100.75
+ [[ platform =~ ^(logger|l)$ ]]

config system interface
 edit "internal"
+ [[ platform =~ ^(platform|p)$ ]]
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ local target_platform=cisco
end
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]

+ [[ platform == \h\e\l\p ]]
config firewall address
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7DPGvx2IX0
+ [[ platform == \d\r\y\-\r\u\n ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7DPGvx2IX0
+ [[ platform == \v\e\r\b\o\s\e ]]
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ for xitem in "${@}"
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set comment "Primary LAN gateway"
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ read -r key value
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute__netwowrk_extract
 next
end ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ echo reports/192.168.1.10/misc/fw1.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ message '                .cache/resources/misc/switch3.conf'
+ local awk_bin=/usr/bin/awk
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ newline
+ newline 2
+ local count=1
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
+ export 'nl=\n'
+ local count=2
+ echo
+ nl='\n'
+ local count=2
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ source ./scripts/devops-resources.shell
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ result=0
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
+ [[ platform =~ ^(console|o)$ ]]
+ echo
+ (( i < count ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i++ ))
++ which awk
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ [[ 5 -lt 4 ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ alias detect-vendor=detect_vendor
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ alias exit-error=exit_error
+ (( i++ ))

+ (( i < count ))
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
#hostname="fg-branch-vpn-01"
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ echo
#model="FortiGate-60F"
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ alias list-file=list_file
+ (( i++ ))

+ [[ cfg == \c\f\g ]]
+ local target_platform=cisco
config system interface
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
 edit "internal"
+ case "${target_file}" in
+ newline
  set ip 192.168.2.12 255.255.255.0
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
  set alias "User LAN"
+ [[ platform == \h\e\l\p ]]
 next
+ [[ platform == \d\e\b\u\g ]]
end

+ [[ platform == \d\r\y\-\r\u\n ]]
config firewall address
 edit "Branch-Gateway"
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ local count=1
++ alias log-info=log_info
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ platform == \v\e\r\b\o\s\e ]]
  set subnet 192.168.2.12 255.255.255.255
+ newline
  set comment "Primary LAN gateway"
 next
+ local count=1
end'
+ (( i = 0 ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ (( i = 0 ))
  "version": "v7.2.5.F",
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
+ (( i < count ))
  set ip 192.168.2.12 255.255.255.0
+ echo
  set alias "User LAN"
 next
end
+ (( i++ ))

++ cut -d/ -f2
+ (( i < count ))
config firewall address
++ printf '%*s' 12 ''
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ sed '1{/^[[:space:]]*$/d;}'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
+ for xitem in "${@}"
  set ip 192.168.2.12 255.255.255.0
++ alias log-warn=log_warn
+ IFS==
  set alias "User LAN"
+ read -r key value
 next
end
++ alias print-message=message

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ local 'indent=            '
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ [[ true == true ]]
++ alias print-newline=newline
+ [[ logger =~ ^(config|c)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ newline
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
++ alias network-configs--helper=network_configs__helper
++ alias pause=pause
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ echo
++ alias print-line=print
+ (( i++ ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ alias print-file=print_file
+ case "${target_file}" in
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local search_pattern
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ return 0
+ [[ logger == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--branch-isr-02.cfg.console
+ IFS==
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ read -r key value
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform =~ ^(config|c)$ ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ local target_platform=cisco
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ echo
++ alias validate-address=validate_address
+ (( i++ ))
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias warning-message=warning
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export LC_ALL=C
++ LC_ALL=C
+ IFS==
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ local awk_bin=/usr/bin/awk
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1Njc2NjYwMDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ case "${target_platform}" in
                      in_json_header = 0;
                      next;
+ case "${target_platform}" in
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ case "${target_platform}" in
                  {
+ awk -v divisor=--MTc0OTAwNDc1NjY5ODQ5NTAwMAo-- '
                    blk = blk divisor " " $0;
                  BEGIN {
+ awk -v divisor=--MTc0OTAwNDc1NjcxMjExMzAwMAo-- '
                  }
                  BEGIN {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    in_json_header = 0;
                  }
                    in_json_header = 0;
                ' reports/172.16.1.6/misc/switch3.conf
                    blk = "";
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  }
                  /^{$/ { in_json_header = 1; next }
                  /^[[:space:]]*$/ { next }
+ awk -v divisor=--MTc0OTAwNDc1NjcxMDc3MTAwMAo-- '
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    BEGIN {
                    if (in_json_header == 1) {
                      blk = "";
                      in_json_header = 0;
                      in_json_header = 0;
                      next;
                    }

                  /^}$/ {
                    if (in_json_header == 1) {
                    }
                    # Skip blank lines
                      in_json_header = 0;
                  }
                    /^[[:space:]]*$/ { next }
                  (in_json_header == 1) { next }
                      next;
                  /^[^[:space:]]/ {
                    }

                    # Skip JSON preamble
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                  }
                    blk = $0;
                    (in_json_header == 1) { next }
                    next;

                  }
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
                  (in_json_header == 1) { next }
                  {

                  /^[^[:space:]]/ {
                    blk = blk divisor " " $0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                    blk = $0;
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
                    next;
                    # Start of a new block
                  }
                  END {
                    /^config / {
                      if (blk != "") print blk;
                  {
                      blk = $0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      next;
                  }
                    }
                ' reports/172.16.0.5/misc/fw3.cfg

                    # Add edit line to current block
                    blk = blk divisor " " $0;
                  }
                    /^ edit / {
                  END {
                      blk = blk divisor " " $0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                      next;
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
                    }
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console
+ search_pattern=10.10.10.10

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ grep -F 172.16.1.6
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ logger =~ ^(config|c)$ ]]
+ newline 2
+ [[ logger =~ ^(console|o)$ ]]
+ newline 2
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local count=2
+ (( i = 0 ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console
+ (( i < count ))
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
+ [[ logger =~ ^(search|s)$ ]]
+ echo
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ (( i++ ))
+ local count=1
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ local count=2
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ local 'indent=            '
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ true == true ]]
}
+ newline
+ (( i < count ))
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ [[ false == true ]]
+ [[ true == true ]]

object-group network Spider-Net
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ echo
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i++ ))
+ (( i < count ))
+ result=0
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ false == true ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ serialize_objects
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
  "version": "",
+ newline
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
  "domain": "",
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ echo
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
  "hostname": ""
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ serialize_objects
+ echo
}
+ output_dir=reports/10.10.10.10/fortinet
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ export jobs_location=jobs
+ (( i++ ))
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg

interface Vlan1
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
 ip address 10.0.0.1 255.255.255.0

+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
object-group network Spider-Net
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ echo -e --export
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
 description Web access switches
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ jobs_location=jobs
+ echo
+ (( i++ ))
++ mkdir -p jobs
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ cfg == \c\f\g ]]
+ case "${target_platform}" in
+ [[ true == true ]]
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console
+ local 'extracted_configuration={
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ true == true ]]
  "vendor": "fortinet",
+ [[ export =~ ^(config|c)$ ]]
+ awk -v divisor=--MTc0OTAwNDc1Njc1OTQ5OTAwMAo-- '
+ [[ logger =~ ^(search|s)$ ]]
                  BEGIN {
                    in_json_header = 0;
  "model": "FortiGate-200F",
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
  "version": "",
                    blk = "";
+ [[ export =~ ^(console|o)$ ]]
  "domain": "",
+ [[ logger == \h\e\l\p ]]
                  }
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ alias serialize-object=serialize_objects
                  /^}$/ {
  "hostname": "fg-campus-core"
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ export =~ ^(export|r)$ ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
}
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
++ sed -e '1s|^\(-\)\{1,\}||'
                ' reports/192.168.1.10/misc/fw1.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ local export_objects=true

+ [[ export =~ ^(extract|x)$ ]]
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ [[ logger =~ ^(console|o)$ ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ export =~ ^(logger|l)$ ]]
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ result=0
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n {
+ [[ export =~ ^(search|s)$ ]]
  "vendor": "fortinet",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
  "model": "FortiGate-200F",
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
  "version": "",
+ [[ export == \d\r\y\-\r\u\n ]]
  "domain": "",
+ [[ logger == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
  "hostname": "fg-campus-core"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
}

+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
#hostname="fg-campus-core"
+ for xitem in "${@}"
+ IFS==
#model="FortiGate-200F"
+ IFS==

+ for xitem in "${@}"
+ read -r key value
+ print '{
+ read -r key value
config firewall address
  "vendor": "cisco",
+ grep -F 192.168.1.10
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
 edit "Vision-Link"
+ IFS==

+ read -r key value
interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 network-object 192.168.12.0 255.255.255.0'
 next
end ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
}

interface Vlan1
+ case "${target_platform}" in
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ awk -v divisor=--MTc0OTAwNDc1NjY5OTU0MzAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
+ sed '/^[[:space:]]*$/d'
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ case "${target_platform}" in
+ cat reports/172.16.1.6/misc/.objects/switch3.list
+ awk -v divisor=--MTc0OTAwNDc1Njc2Mjg0ODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ local parent_dir=reports/192.168.100.100/fortinet
+ [[ -n {
+ [[ export =~ ^(config|c)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ [[ export =~ ^(console|o)$ ]]
  "hostname": "fg-campus-core"
}

+ [[ export =~ ^(export|r)$ ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"

+ local export_objects=true
config firewall address
 edit "Vision-Link"
+ [[ export =~ ^(extract|x)$ ]]
  set subnet 192.168.2.12 255.255.255.255
++ echo -e --verbose
+ [[ export =~ ^(logger|l)$ ]]
  set comment "Vision’s quantum channel"
+ local parent_dir=reports/203.0.113.25/cisco
 next
end ]]
+ [[ export =~ ^(platform|p)$ ]]
++ echo -e --export
+ echo -en '{
  "vendor": "fortinet",
+ newline
  "model": "FortiGate-200F",
+ newline
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ [[ export =~ ^(search|s)$ ]]

+ local count=1
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ (( i = 0 ))

+ [[ export == \h\e\l\p ]]
+ local count=1
config firewall address
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
 edit "Vision-Link"
+ (( i < count ))
  set subnet 192.168.2.12 255.255.255.255
+ cat -n
+ echo
  set comment "Vision’s quantum channel"
+ [[ export == \d\r\y\-\r\u\n ]]
 next
+ (( i++ ))
end'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ (( i < count ))
+ read -r key value
+ (( i < count ))
+ grep -F 10.10.10.10
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
++ export console_location=console
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
++ console_location=console
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
++ mkdir -p console
+ output_dir=reports/10.10.10.10/fortinet
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ sed '1{/^[[:space:]]*$/d;}'
++ basename reports/192.168.100.100/fortinet/fg-campus-core
+ result=0
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline 2
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
++ echo -e --export
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ newline
+ local count=1
++ printf '%*s' 12 ''
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
}
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]

ASA Version 9.12(4)
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
interface GigabitEthernet0/2
+ newline
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ local count=1
 description Outbound Internet NAT interface'
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ result=0
+ (( i < count ))
+ [[ -n {
++ dirname -- ./scripts/network-extract.shell
  "vendor": "cisco",
++ command -v -- ./scripts/network-extract.shell
+ newline
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ echo
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ (( i++ ))
+ (( i < count ))
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
++ echo -e --verbose
+ return 0
  "model": "ASA",
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
  "version": "9.12(4)",
+ [[ export =~ ^(config|c)$ ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ case "${target_file}" in
+ [[ true == true ]]
}
+ [[ export =~ ^(console|o)$ ]]

+ cat reports/192.168.1.10/misc/.objects/fw1.list
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ verbose =~ ^(config|c)$ ]]
domain-name global.dmz.example.net
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console

+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console ]]
interface GigabitEthernet0/2
+ local export_objects=true
+ [[ verbose =~ ^(export|r)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console
 nameif outside
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
 ip address 198.51.100.75 255.255.255.0
+ [[ verbose =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'indent=            '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ case "${target_file}" in
+ [[ true == true ]]
 description Outbound Internet NAT interface ]]
+ [[ export =~ ^(logger|l)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local search_pattern
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ read -r key value
+ local search_pattern
+ [[ verbose == \h\e\l\p ]]
+ newline 2
+ [[ -z x ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ local count=2
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ debug=false
+ echo
+ [[ -z '' ]]
+ dry_run=false
+ (( i++ ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ echo
+ export console_output=false
++ export actions_logfile=console/run.console
+ result=0
+ console_output=false
+ (( i++ ))
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
++ actions_logfile=console/run.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ [[ -z true ]]
+ [[ 0 -ne 0 ]]
++ touch console/run.console
+ newline
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ true == true ]]
+ local count=1
+ [[ -z '' ]]
+ cat -n
+ script_helper=false
+ (( i = 0 ))
+ export logs_location=logs
+ logs_location=logs
+ [[ false == true ]]
+ mkdir -p logs
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ search_terms=()
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ declare -a search_terms
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
+ newline
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list != *,* ]]
+ local count=1
+ mapfile -t search_terms
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ echo
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ local parent_dir=reports/192.168.0.1/fortinet
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ echo
  "model": "ASA",
++ dirname -- ./scripts/network-extract.shell
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ export =~ ^(config|c)$ ]]
+ grep -F 192.168.1.11
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -n {
+ [[ export =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "vendor": "cisco",
+ [[ export =~ ^(search|s)$ ]]
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ export == \h\e\l\p ]]
  "hostname": "dmz-fw2-backup"
}
+ [[ export == \d\e\b\u\g ]]

+ [[ export == \d\r\y\-\r\u\n ]]
+ local parent_dir=reports/192.168.2.12/fortinet
ASA Version 9.12(4)
+ [[ export == \v\e\r\b\o\s\e ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ grep -F 172.16.0.5
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ grep -F 172.16.1.6
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
++ echo reports/10.0.0.1/misc/switch1.conf
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ cut -d/ -f2
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
++ echo -e --verbose
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
++ cut -d/ -f2
++ tr -d '\r'
+ [[ verbose =~ ^(config|c)$ ]]
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ newline
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local verbose=true
+ (( i = 0 ))
+ newline
+ IFS=' 	
'
+ (( i < count ))
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ true == true ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console ]]
+ script_helper=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
++ grep -v '^\s*$'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=1
+ echo
+ (( i++ ))
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ (( i < count ))
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--switch3.conf.console
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ IFS==
+ [[ true == true ]]
+ return 0
+ [[ true == true ]]
++ grep -v '^#'
+ cat -n
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ result=0
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ exit 0
+ grep -F 192.168.0.100
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CvBjOg8jb2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CvBjOg8jb2
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1NjcxOTQ5OTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
                    blk = blk divisor " " $0;
                  }
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ result=0
+ newline
+ exit 0
+ local count=1
+ output_dir=reports/192.168.1.10/misc
+ (( i = 0 ))
+ [[ ! -d reports/192.168.1.10/misc ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gvU0bUKqbt ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gvU0bUKqbt
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ sed '/^[[:space:]]*$/d'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ sed '/^[[:space:]]*$/d'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ IFS=,
+ [[ -z .cache/resources/misc/switch1.conf ]]
++ echo 203.0.113.25
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ grep -F 10.10.10.10
+ cat -n
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ read -r key value
+ local script_filename=fortinet-configs.awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ export targets_location=targets
++ targets_location=targets
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--campus-sw-access01.cfg.console
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ which awk
+ sed '/^[[:space:]]*$/d'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z881naYldl ]]
++ export targets_logfile=.cache/targets.jobs
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z881naYldl
++ targets_logfile=.cache/targets.jobs
+ result=0
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
++ dirname -- ./scripts/network-extract.shell
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ newline
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ local count=1
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ echo
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ (( i++ ))
+ newline
+ local count=1
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ newline
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ return 0
+ (( i < count ))
+ case "${target_platform}" in
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ awk -v divisor=--MTc0OTAwNDc1Njc1NDEzNDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
                    if (in_json_header == 1) {
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
                      in_json_header = 0;
                      next;
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
                    }
                  }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console
                  (in_json_header == 1) { next }
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ newline
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
+ (( i < count ))
+ local search_pattern
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1Njc0MDIzODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ case "${target_platform}" in
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1Njc0NTI0NzAwMAo-- '
                  BEGIN {
++ echo -e --verbose
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ awk -v divisor=--MTc0OTAwNDc1NjczOTg1NTAwMAo-- '
                  BEGIN {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    in_json_header = 0;
                    }
                    blk = "";
                  }
                  }
                  (in_json_header == 1) { next }
                  /^[[:space:]]*$/ { next }
                  /^[^[:space:]]/ {
                  /^{$/ { in_json_header = 1; next }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  /^}$/ {
                    blk = $0;
                    if (in_json_header == 1) {
                    next;
                      in_json_header = 0;
                      next;
                    }
                  }
                  }
                  (in_json_header == 1) { next }
                  {
                  /^[^[:space:]]/ {
                    blk = blk divisor " " $0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                    blk = $0;
                  END {
                    next;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                  {
                  }
                    blk = blk divisor " " $0;
                ' reports/172.18.1.20/misc/fw1.cfg
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ local awk_bin=/usr/bin/awk
+ result=0
+ [[ 0 -ne 0 ]]
+ result=0
+ [[ true == true ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ exit 0
+ local SCRIPT_DIR=./scripts
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.34EOjmUxnn ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.34EOjmUxnn
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ grep -F 10.0.0.1
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ newline
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ local 'extracted_configuration={
+ local count=1
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ 7 -eq 0 ]]
  "version": "v7.2.5.F",
+ cat -n
  "domain": "",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.n2jy5ltdkq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i = 0 ))
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ (( i < count ))
+ echo
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
  "hostname": "fg-branch-vpn-01"
}
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat reports/172.16.0.5/misc/.objects/fw3.list

+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console --export --verbose
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
+ oIFS=' 	
'
 edit "Branch-Public"
+ for xitem in "${@}"
+ cat -n
+ IFS==
+ read -r key value
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
+ sed '/^[[:space:]]*$/d'
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ cat -n
 edit "wan1"
+ cat -n
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
++ which awk
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ true == true ]]
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console
+ newline
++ printf '%*s' 12 ''
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ return 0
+ case "${target_file}" in
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ return 0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console
+ [[ 0 -ne 0 ]]
+ grep -F 10.0.2.3
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console ]]
+ print '{
  "vendor": "fortinet",
+ case "${target_file}" in
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ local count=1
#model="FortiGate-60F"
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'

config system interface
 edit "wan1"
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ echo
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ newline
  set ip 198.51.100.75 255.255.255.0
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
  set alias "Branch ISP"
 next
+ (( i++ ))
end
+ newline
+ (( i < count ))

+ local count=1
+ local count=1
config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set comment "Branch NAT"
+ (( i = 0 ))
+ (( i = 0 ))
 next
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
end'
+ echo
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ newline
+ [[ -n {
  "vendor": "fortinet",
+ [[ verbose =~ ^(console|o)$ ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ local count=1
+ [[ verbose =~ ^(export|r)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ grep -F 192.0.2.50
++ dirname reports/192.168.1.10/misc/switch1.conf
+ (( i++ ))
}
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
 next
+ (( i < count ))
end
+ cat -n
+ [[ verbose =~ ^(console|o)$ ]]

+ echo
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ verbose =~ ^(export|r)$ ]]
config firewall address
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
 edit "Branch-Public"
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i++ ))
  set subnet 198.51.100.75 255.255.255.255
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i < count ))
+ return 0
+ newline 2
  set comment "Branch NAT"
+ newline
+ [[ verbose =~ ^(logger|l)$ ]]
 next
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
end ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ return 0
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ true == true ]]

config system interface
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
  set alias "Branch ISP"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
 next
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
end
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console ]]
+ [[ true == true ]]
+ newline

+ local count=1
config firewall address
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console
 edit "Branch-Public"
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console ]]
 next
+ (( i < count ))
end'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console ]]
+ grep -F 172.18.1.20
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ sed '/^[[:space:]]*$/d'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console
+ case "${target_file}" in
+++ date +%s%N
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ sed '/^[[:space:]]*$/d'
++ IFS=,
+ cat reports/10.0.0.1/misc/.objects/switch1.list
++ echo 192.168.1.10
+++ base64
++ IFS=,
++ echo 10.10.10.10
++ tr -d '\r'
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ cat -n
++ grep -v '^#'
+ declare -a execute__netwowrk_extract
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ search =~ ^(config|c)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nFP66iSnKB ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nFP66iSnKB
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ newline 2
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ search =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console ]]
+ local count=2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console ]]
+ echo
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QjnRa3NK5x/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ (( i < count ))
+ return 0
+ case "${target_file}" in
+ [[ search =~ ^(logger|l)$ ]]
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c8C29mOUhE/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ (( i++ ))
+ console_output=false
+ (( i < count ))
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list
+ search_terms=()
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console
+ [[ search == \h\e\l\p ]]
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ search == \d\e\b\u\g ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console
+ echo
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ 0 -ne 0 ]]
++ IFS=,
++ echo 10.10.10.10
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]]
+ declare -a execute__netwowrk_extract
+ result=0
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list != *,* ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ export divisor=--MTc0OTAwNDc1NzQxMjMzOTAwMAo--
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console
++ divisor=--MTc0OTAwNDc1NzQxMjMzOTAwMAo--
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console ]]
+ mapfile -t search_terms
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ source ./scripts/devops-helpers.shell
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ [[ verbose =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ [[ verbose == \h\e\l\p ]]
+ declare -a execute__netwowrk_extract
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose == \d\e\b\u\g ]]
+ case "${target_file}" in
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LJ1eXwIpOV/network-extract--fw3.cfg.console
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
++ __DEVOPS_HELPERS_SOURCED=1
+ local count=1
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ [[ true == true ]]
++ [[ 5 -lt 4 ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ local count=2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console ]]
+ (( i < count ))
+ newline
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console ]]
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ local verbose=true
+ (( i = 0 ))
+ case "${target_file}" in
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ local count=1
++ alias parse-listings--helper=parse_listings__helper
+ search_pattern=203.0.113.25
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eDkmJ2FkCn/network-extract--campus-sw-access01.cfg.console
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ search_pattern=192.168.100.100
+ [[ true == true ]]
+ (( i < count ))
+ (( i < count ))
+ IFS=' 	
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console
+ (( i < count ))
+ (( i++ ))
++ alias network-configs--helper=network_configs__helper
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console ]]
+ (( i < count ))
'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ alias serialize-object=serialize_objects
++ dirname -- ./scripts/network-extract.shell
++ which awk
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ which awk
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
++ cut -d/ -f2
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ local awk_bin=/usr/bin/awk
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
++ tr -d '\r'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ debug=false
+ result=0
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
++ grep -v '^\s*$'
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
+ result=0
 network-object host 192.0.2.50
+ exit 0
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gwVfB5O8TT ]]
object-group network Panther-Edge
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iezHSdU3Zu ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gwVfB5O8TT
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iezHSdU3Zu
+ [[ true == true ]]
 description Internet-facing proxy systems
+ newline
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ [[ -n {
  "vendor": "cisco",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console ]]
+ (( i = 0 ))
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console

+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console ]]
ASA Version 9.14(3)
+ echo
+ case "${target_file}" in
hostname perimeter-fw1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--campus-sw-access01.cfg.console
domain-name edge.dc.example.com
+ local SCRIPT_DIR=./scripts

+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
interface GigabitEthernet0/0
+ (( i++ ))
 nameif outside
 security-level 0
+ (( i < count ))
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q67CgIfcTu ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q67CgIfcTu
++ grep -v '^#'
object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT
+ [[ false == true ]]

object-group network Avengers-DMZ
+ [[ true == true ]]
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ result=0
+ exit 0
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BmzYyBbQ8W ]]
++ printf '%*s' 12 ''
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BmzYyBbQ8W
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ [[ true == true ]]
+ local 'indent=            '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch1.conf.console
+ newline
+ local count=1
+ cat -n
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ alias parse-cisco=main
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ result=0
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ 0 -ne 0 ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z x ]]
+ [[ true == true ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ export logs_location=logs
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ logs_location=logs
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ mkdir -p logs
+ echo -e '                .cache/resources/misc/fw3.cfg'
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ config =~ ^(config|c)$ ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ local target_config=.cache/resources/misc/fw3.cfg

interface GigabitEthernet0/0
 nameif outside
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ config =~ ^(console|o)$ ]]
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ config =~ ^(export|r)$ ]]
 host 203.0.113.25
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
 description Internet-bound IP NAT
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ config =~ ^(extract|x)$ ]]

+ local awk_bin=/usr/bin/awk
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ [[ config =~ ^(logger|l)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ config =~ ^(platform|p)$ ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ config =~ ^(search|s)$ ]]
  "hostname": "perimeter-fw1"
}

+ [[ config == \h\e\l\p ]]
ASA Version 9.14(3)
+ [[ config == \d\e\b\u\g ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ config == \d\r\y\-\r\u\n ]]

+ [[ config == \v\e\r\b\o\s\e ]]
interface GigabitEthernet0/0
+ for xitem in "${@}"
 nameif outside
 security-level 0
+ IFS==
 ip address 203.0.113.25 255.255.255.0
+ read -r key value
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=198.51.100.75
+ return 0
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ search_pattern=192.168.0.1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ] ]]
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ] ]]
+ exit 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVa2RXXYQb ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-configs--ips.list ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVa2RXXYQb
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ local count=1
+ local count=1
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ ((  count == 0  ))
+ echo
+ (( i++ ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ dry_run=false
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ -z true ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ [[ -z '' ]]
+ export console_output=false
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ console_output=false
+ [[ -z true ]]
+ newline
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ local count=1
+ local parent_dir=reports/198.51.100.75/fortinet
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ newline
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local count=1
+ case "${target_file}" in
+ result=0
+ (( i = 0 ))
+ exit 0
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mnpAVt5ZpT ]]
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ local 'indent=            '
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mnpAVt5ZpT
++ IFS=,
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ local 'indent=            '
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ echo 192.168.1.10
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ echo
+ newline
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat -n
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ (( i++ ))
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ script_helper=false
+ local search_pattern
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ false == true ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]]
+ (( i < count ))
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ script_filename=network-extract.shell
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ script_filename=network-extract
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ export network_extract__console=console/network-extract.console
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ network_extract__console=console/network-extract.console
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ touch console/network-extract.console
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline 2
+ newline
+ local count=1
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i < count ))
+ (( i++ ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ which awk
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ return 0
+ echo
+ (( i++ ))
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ (( i < count ))
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ result=0
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n {
  "vendor": "cisco",
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ search_terms=()
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ declare -a search_terms
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list != *,* ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ mapfile -t search_terms
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ] ]]
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local count=1
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.I4GIry7PRa/network-extract--perimeter-fw1.cfg.console
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local count=1
+ newline
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(console|o)$ ]]
+ echo
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i++ ))
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ (( i < count ))
+ return 0
+ [[ extract =~ ^(logger|l)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
+ [[ extract =~ ^(platform|p)$ ]]
+ return 0
 description National Core Routing Zone
+ [[ extract =~ ^(search|s)$ ]]
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ ((  count == 0  ))
 network-object 10.0.0.0 255.255.255.0'
+ (( i < count ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ extract == \h\e\l\p ]]
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ extract == \d\e\b\u\g ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console
+ newline
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ -n {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console
  "vendor": "cisco",
+ serialize_objects
  "model": "",
  "version": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console ]]
  "domain": "",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ case "${target_platform}" in
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ awk -v divisor=--MTc0OTAwNDc1Njg0NTIyMzAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
                    }

                    # Skip blank lines
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.atisdphzd1/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console --export --verbose
++ cut -d/ -f2
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ oIFS=' 	
'
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ for xitem in "${@}"
++ tr -d '\r'
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ [[ -z fortinet ]]
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ (( i = 0 ))
+ grep -F 192.168.0.1
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ newline
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ (( i = 0 ))
++ grep -v '^\s*$'
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ serialize_objects
++ dirname reports/10.0.0.1/misc/switch3.conf
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
++ echo -e --platform=cisco
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vXOzodmxfK/network-extract--fw3.cfg.console
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
++ cut -d/ -f2
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
++ grep -v '^#'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ result=0
+ local count=2
+ exit 0
+ (( i = 0 ))
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "fortinet",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uRYU74Z5VB ]]
+ echo
  "model": "FortiGate-200F",
+ [[ true == true ]]
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uRYU74Z5VB
  "version": "",
+ (( i < count ))
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
  "domain": "",
  "hostname": "fg-campus-core"
}

+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console

+ (( i = 0 ))
config system interface
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console
 edit "core"
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console ]]
++ dirname reports/198.51.100.75/misc/fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console
  set ip 10.10.10.10 255.255.255.0
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ case "${target_file}" in
+ (( i < count ))
  set alias "Campus Core Transit"
 next
end

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IxUzGyChXY/network-extract--fw1.cfg.console
+ newline
+ echo
config firewall address
+ local count=1
+ serialize_objects
+ (( i = 0 ))
 edit "Shield-WiFi"
+ (( i < count ))
  set subnet 10.10.10.10 255.255.255.255
+ echo
  set comment "Wireless AP Gateway"
+ (( i++ ))
 next
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
end'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ cat -n reports/192.168.1.10/misc/fw3.cfg
+ (( i < count ))
}
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console
+ echo

#hostname="fg-branch-vpn-01"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n {
#model="FortiGate-60F"
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ case "${target_file}" in
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i++ ))
+ [[ false == true ]]
  "version": "",

  "domain": "",
config firewall policy
  "hostname": "fg-campus-core"
 edit 13
}
  set name "Remote NAT"

#hostname="fg-campus-core"
#model="FortiGate-200F"
  set srcintf "dmz"

  set dstintf "wan1"
config system interface
  set srcaddr "10.10.10.10"
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
 edit "core"
  set dstaddr "203.0.113.10"
  set action accept
+ [[ true == true ]]
  set ip 10.10.10.10 255.255.255.0
  set logtraffic all
 next
  set alias "Campus Core Transit"
end'
+ exit 0
 next
end
+ search_pattern=192.168.2.12
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GKzlqgFPAS ]]

++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GKzlqgFPAS
config firewall address
+ case "${target_platform}" in
+ mkdir -p reports/192.168.2.12/fortinet/.objects
 edit "Shield-WiFi"
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ [[ -n {
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
 next
  "vendor": "fortinet",
end ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ awk -v divisor=--MTc0OTAwNDc1NjgzMzMyNzAwMAo-- '
                  BEGIN {
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
                    in_json_header = 0;
+ serialize_objects
  "domain": "",
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
  "hostname": "fg-branch-vpn-01"
}
                  /^{$/ { in_json_header = 1; next }

                  /^}$/ {
#hostname="fg-branch-vpn-01"
                    if (in_json_header == 1) {
#model="FortiGate-60F"
+ [[ true == true ]]
                      in_json_header = 0;
                      next;
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                    }

                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ search_pattern=198.51.100.75
                    blk = blk divisor " " $0;
                  }
config firewall policy
                  END {
 edit 13
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ case "${target_platform}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console
+ mkdir -p reports/198.51.100.75/fortinet/.objects
                  }
  set name "Remote NAT"
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ awk -v divisor=--MTc0OTAwNDc1Njg0NTI2MzAwMAo-- '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
                    BEGIN {
                      blk = "";
+ [[ -z cisco ]]
                      in_json_header = 0;
                    }
+ [[ true == true ]]

  set srcintf "dmz"
                    # Skip blank lines
  set dstintf "wan1"
+ newline
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
                    /^[[:space:]]*$/ { next }
+ local count=1
  set action accept

+ newline
  set logtraffic all
                    # Skip JSON preamble
+ local parent_dir=reports/10.0.0.1/misc
+ local count=1
                    /^{$/            { in_json_header = 1; next }
 next
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console
end ]]
+ (( i = 0 ))
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console ]]
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
+ local first_search_entry=192.168.2.12
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console
                      next;
+ (( i < count ))
+ (( i < count ))
                    }

+ result=0
+ local last_search_entry=192.168.2.12
                    # Add next to block
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console ]]
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ 0 -ne 0 ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ print '{
  "vendor": "fortinet",
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local parent_dir=reports/203.0.113.25/cisco
+ [[ platform == \h\e\l\p ]]
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ [[ platform == \d\e\b\u\g ]]
  "hostname": "fg-campus-core"
+ [[ platform == \d\r\y\-\r\u\n ]]
}
+ [[ platform == \v\e\r\b\o\s\e ]]

#hostname="fg-campus-core"
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ for xitem in "${@}"
#model="FortiGate-200F"
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]

+ IFS==
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
config system interface
+ read -r key value
 edit "core"
+ newline
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ local count=1
 next
+ (( i = 0 ))
end

+ (( i < count ))
config firewall address
 edit "Shield-WiFi"
+ echo
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ result=0
+ (( i++ ))
+ output_dir=reports/198.51.100.75/misc
 next
+ echo
end'
+ exit 0
+ [[ ! -d reports/198.51.100.75/misc ]]
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ] ]]
+ (( i++ ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.i0CvqdI1nr ]]
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.i0CvqdI1nr
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-configs--ips.list ]'
config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ local count=1
+ echo -en '{
  "vendor": "fortinet",
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "model": "FortiGate-60F",
+ ((  count == 0  ))
  "version": "v7.2.5.F",
  "version": "",
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
  "domain": "",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
  "hostname": "fg-campus-core"

+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
}
#hostname="fg-branch-vpn-01"

#model="FortiGate-60F"
#hostname="fg-campus-core"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'

#model="FortiGate-200F"
config firewall policy

 edit 13
config system interface
  set name "Remote NAT"
 edit "core"
  set srcintf "dmz"
  set ip 10.10.10.10 255.255.255.0
  set dstintf "wan1"
  set alias "Campus Core Transit"
  set srcaddr "10.10.10.10"
 next
  set dstaddr "203.0.113.10"
end
  set action accept

  set logtraffic all
config firewall address
 next
 edit "Shield-WiFi"
end'
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ grep -F 203.0.113.25
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
+ grep -F 192.168.100.100
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ basename reports/203.0.113.25/cisco/perimeter-fw1

+ [[ search =~ ^(config|c)$ ]]
config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
+ [[ search =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list
+ [[ true == true ]]
+ case "${target_file}" in
+ [[ search == \h\e\l\p ]]
+ newline
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ serialize_objects
+ [[ search == \d\e\b\u\g ]]
+ result=0
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
+ exit 0
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
  "model": "",
  "version": "",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Xk6MfeUC2v ]]
  "domain": "",
  "hostname": ""
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
}

interface Vlan20
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
 ip address 192.168.1.10 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ result=0
+ case "${target_file}" in
+ [[ -n {
  "vendor": "cisco",
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Xk6MfeUC2v
+ local count=1
+ (( i = 0 ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console
+ (( i < count ))
+ local parent_dir=reports/198.51.100.75/cisco
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw1.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i++ ))
+ local parent_dir=reports/192.168.2.12/fortinet
+ (( i < count ))
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ dirname reports/192.168.1.10/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/10.0.0.1/misc/switch3
+ case "${target_platform}" in
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ newline 2
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
++ dirname -- ./scripts/network-extract.shell
+ local search_pattern
+ awk -v divisor=--MTc0OTAwNDc1NjkyNjEyNzAwMAo-- '
                    BEGIN {
                      blk = "";
+ print '{
+ local count=2
  "vendor": "cisco",
+ (( i = 0 ))
                      in_json_header = 0;
  "model": "",
                    }
  "version": "",

  "domain": "",
                    # Skip blank lines
  "hostname": ""
                    /^[[:space:]]*$/ { next }

}
                    # Skip JSON preamble
+ (( i < count ))
                    /^{$/            { in_json_header = 1; next }

+ [[ true == true ]]
+ echo
interface Vlan20
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
 ip address 192.168.1.10 255.255.255.0'
                    (in_json_header == 1) { next }
+ cat -n
+ (( i++ ))

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
                      if (blk != "") print blk;
+ (( i < count ))
                      blk = $0;
                      next;
+ [[ -n {
  "vendor": "cisco",
                    }

  "model": "",
                    # Add edit line to current block
  "version": "",
                    /^ edit / {
  "domain": "",
                      blk = blk divisor " " $0;
  "hostname": ""
                      next;
}
                    }


interface Vlan20
                    # Add next to block
 ip address 192.168.1.10 255.255.255.0 ]]
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
+ echo -en '{
                      blk = blk divisor " " $0;
  "vendor": "cisco",
                      if (blk != "" && !seen[blk]++) print blk;
  "model": "",
+ sed '/^[[:space:]]*$/d'
                      blk = "";
+ echo
  "version": "",
                      next;
                    }

  "domain": "",
  "hostname": ""
++ basename reports/192.168.2.12/fortinet/fg-campus-core
                    # Accumulate middle lines
}
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ newline 2
                    {
+ (( i < count ))
                      blk = blk divisor " " $0;
                    }


                    END {
interface Vlan20
                      # No need for final print — all blocks end with end
 ip address 192.168.1.10 255.255.255.0'
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ grep -F 198.51.100.75
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ echo
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ (( i++ ))
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local parent_dir=reports/192.168.1.10/misc
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ logger =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ cut -d/ -f2
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ newline
+ local search_pattern
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console ]]
+ return 0
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ case "${target_file}" in
+ local search_pattern
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--dmz-fw2-backup.cfg.console
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ result=0
+ [[ true == true ]]
+ result=0
+ exit 0
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline 2
++ basename reports/192.168.1.10/misc/fw3
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local search_pattern
+ case "${target_file}" in
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dk67eX4bJz ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Dk67eX4bJz
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ local count=1
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ echo
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ config =~ ^(platform|p)$ ]]
+ newline
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ local count=1
+ [[ config == \h\e\l\p ]]
++ echo -e --export
+ (( i = 0 ))
+ [[ config == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ cfg == \c\f\g ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1Njg0NDgxNzAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
+ [[ config == \v\e\r\b\o\s\e ]]
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ final_output=reports/192.168.2.12/misc/fw1.cfg
                    (in_json_header == 1) { next }

                    # Skip platform metadata
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
+ for xitem in "${@}"
+ search_pattern=203.0.113.25
                      if (blk != "") print blk;
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
                      blk = $0;
                      next;
+ IFS==
                    }
+ mkdir -p reports/203.0.113.25/cisco/.objects

                    # Add edit line to current block
                    /^ edit / {
+ read -r key value
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ newline
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ true == true ]]
+ local search_pattern
++ echo reports/10.0.0.1/misc/switch3.conf
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ serialize_objects
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
++ cut -d/ -f2
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ newline
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i < count ))
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ false == true ]]
+ [[ true == true ]]
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
++ cut -d/ -f2
+ case "${target_file}" in
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ serialize_objects
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ cat -n
+ grep -F 192.168.2.12
++ IFS=,
+ [[ true == true ]]
++ echo 198.51.100.75
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console ]]
++ cut -d/ -f2
+ case "${target_file}" in
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47MFIKj1SJ/network-extract--fg-branch-vpn-01.cfg.console
+ local count=1
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ serialize_objects
++ echo reports/192.168.1.10/misc/fw3.cfg
+ cat -n
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ cut -d/ -f2
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ output_dir=reports/192.168.2.12/misc
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ ! -d reports/192.168.2.12/misc ]]
++ which awk
+ result=0
++ dirname reports/192.168.1.10/misc/switch1.conf
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xFj9um3CRh ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xFj9um3CRh
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ search_pattern=10.0.0.1
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local parent_dir=reports/10.10.10.10/fortinet
+ mkdir -p reports/10.0.0.1/misc/.objects
+ [[ true == true ]]
+ output_dir=reports/203.0.113.25/fortinet
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console
+ awk -v divisor=--MTc0OTAwNDc1Njg5Njk3NDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ cat -n
                  }
+ search_pattern=192.168.2.12
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ grep -F 203.0.113.25
+ local parent_dir=reports/10.10.10.10/fortinet
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ [[ true == true ]]
++ basename reports/10.10.10.10/fortinet/fg-campus-core
++ echo -e --verbose
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ search_pattern=192.168.1.10
+ [[ extract =~ ^(export|r)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console
+ [[ extract =~ ^(extract|x)$ ]]
+ mkdir -p reports/192.168.1.10/misc/.objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console ]]
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ extract == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7uJ69dzzHH ]]
+ sed '/^[[:space:]]*$/d'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7uJ69dzzHH
++ command -v -- ./scripts/network-extract.shell
+ local parent_dir=reports/192.168.1.10/misc
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/10.10.10.10/fortinet/fg-testing-config
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ basename reports/192.168.1.10/misc/switch1
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ output_dir=reports/203.0.113.25/misc
+ local count=1
+ [[ ! -d reports/203.0.113.25/misc ]]
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ local search_pattern
+ echo
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fg-branch-vpn-01.cfg.console
++ printf '%*s' 12 ''
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
++ echo -e --platform=cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console
+ case "${target_platform}" in
+ local 'indent=            '
+ awk -v divisor=--MTc0OTAwNDc1Njg3MjI0NzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ [[ true == true ]]
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
+ result=0
                  (in_json_header == 1) { next }
+ [[ 0 -ne 0 ]]
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ true == true ]]
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ newline
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i = 0 ))
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(platform|p)$ ]]
+ local search_pattern
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ [[ verbose =~ ^(search|s)$ ]]
+ local script_filename=cisco-configs.awk
+ echo
+ (( i++ ))
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local verbose=true
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ IFS=' 	
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
'
+ [[ -z '' ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ debug=false
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ dry_run=false
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -z true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ -z '' ]]
+ case "${target_file}" in
+ export console_output=false
+ console_output=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ newline
+ script_helper=false
+ case "${target_platform}" in
+ [[ false == true ]]
+ grep -F 198.51.100.75
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ (( i < count ))
+ search_terms=()
+ declare -a search_terms
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]]
+ local search_pattern
+ (( i++ ))
+ awk -v divisor=--MTc0OTAwNDc1Njg3MTY1OTAwMAo-- '
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list != *,* ]]
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ mapfile -t search_terms
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ case "${target_platform}" in
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch3.conf
+ awk -v divisor=--MTc0OTAwNDc1NjkzNDAyMzAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
+ [[ true == true ]]
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console
                    END {
                      # No need for final print — all blocks end with end
                    }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console ]]
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_platform}" in
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ awk -v divisor=--MTc0OTAwNDc1Njk2NTEwNTAwMAo-- '
+ sed '/^[[:space:]]*$/d'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
                    blk = $0;
                    next;
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
                  }
                  {
                    blk = blk divisor " " $0;
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
                  }
+ grep -F 10.0.0.1
                  END {
+ case "${target_file}" in
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
++ which awk
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
++ cut -d/ -f2
+ cat -n
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ grep -F 192.168.2.12
+ grep -F 192.168.1.10
++ dirname -- ./scripts/network-extract.shell
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ sed '/^[[:space:]]*$/d'
++ echo reports/192.168.1.10/misc/switch1.conf
++ tr -d '\r'
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
++ grep -v '^\s*$'
++ grep -v '^#'
+ result=0
+ search_pattern=10.10.10.10
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IywBKInLOL ]]
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ [[ platform =~ ^(config|c)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IywBKInLOL
+ [[ platform =~ ^(console|o)$ ]]
+ result=0
+ [[ platform =~ ^(export|r)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=1
+ local target_platform=cisco
+ (( i = 0 ))
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ (( i++ ))
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ return 0
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ for xitem in "${@}"
+ newline
+ IFS==
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console
+ exit 0
+ [[ 0 -ne 0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console ]]
+ sed '/^[[:space:]]*$/d'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0SyIHpt8tf ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console
+ local script_filename=fortinet-configs.awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console
+ case "${target_file}" in
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ 0 -ne 0 ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ search_pattern=10.10.10.10
+ [[ true == true ]]
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0SyIHpt8tf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console ]]
+ (( i++ ))
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ (( i < count ))
+ case "${target_file}" in
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.veE8O8ADO0/network-extract--fg-campus-core.cfg.console
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ search_pattern=192.168.1.10
+ newline
+ local count=1
+ mkdir -p reports/192.168.1.10/misc/.objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ cat -n
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
++ IFS=,
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
++ echo 192.168.2.12
 description Secondary outbound route for edge ]]
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
++ which awk
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ cat -n
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-configs--ips.list ]'
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
++ which awk
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ cat -n
  "version": "",
  "domain": "",
  "hostname": ""
}

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ 0 -ne 0 ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console
+ local count=1
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console ]]
+ (( i++ ))
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--perimeter-fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RreYxmmMZa ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RreYxmmMZa
+ return 0
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console
+ awk -v divisor=--MTc0OTAwNDc1Njk4NTYzNTAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ newline
+ cat -n
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ IFS=,
+ [[ true == true ]]
++ echo 203.0.113.25
+ case "${target_platform}" in
+ grep -F 10.10.10.10
+ awk -v divisor=--MTc0OTAwNDc1NzA1MTM4OTAwMAo-- '
                    BEGIN {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console
                      blk = "";
                      in_json_header = 0;
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console ]]
                    }
+ local awk_bin=/usr/bin/awk
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console
                    # Skip blank lines
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
                    /^[[:space:]]*$/ { next }

++ IFS=,
                    # Skip JSON preamble
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
                    /^{$/            { in_json_header = 1; next }
+ [[ logger =~ ^(config|c)$ ]]
+ case "${target_platform}" in
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
                    (in_json_header == 1) { next }

+ newline
+ [[ logger =~ ^(console|o)$ ]]
                    # Skip platform metadata
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
                    /^#(hostname|model|config-version)=/ { next }
++ echo 203.0.113.25

+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
                    # Start of a new block
+ (( i = 0 ))
+ [[ logger =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ awk -v divisor=--MTc0OTAwNDc1NzAxNTQ4NDAwMAo-- '
                  BEGIN {
                    /^config / {
                    in_json_header = 0;
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ (( i < count ))
                      if (blk != "") print blk;
                    blk = "";
                      blk = $0;
                      next;
+ [[ logger =~ ^(logger|l)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console
+ echo
                    }
                  }

+ (( i++ ))
                  /^[[:space:]]*$/ { next }
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console
                  /^{$/ { in_json_header = 1; next }
                    # Add edit line to current block
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
                  /^}$/ {
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
                    /^ edit / {
+ [[ logger =~ ^(search|s)$ ]]
                      blk = blk divisor " " $0;
                      next;
                    }
                    if (in_json_header == 1) {
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')

+ [[ logger == \h\e\l\p ]]
                    # Add next to block
+ return 0
                      in_json_header = 0;
+ [[ logger == \d\e\b\u\g ]]
                    /^ next$/ {
+ declare -a execute__netwowrk_extract
                      next;
+ [[ logger == \d\r\y\-\r\u\n ]]
                    }
+ [[ logger == \v\e\r\b\o\s\e ]]
                      blk = blk divisor " " $0;
                  }
+ for xitem in "${@}"
                  (in_json_header == 1) { next }
+ sed '/^[[:space:]]*$/d'
                      next;
                  /^[^[:space:]]/ {
                    }
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ true == true ]]
                    blk = $0;
                    next;

                  }
                    # Finalize block at end
                  {
                    /^end$/ {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console
                    blk = blk divisor " " $0;
                      blk = blk divisor " " $0;
                  }
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console ]]
                      next;
                  END {
                    }
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console

+ IFS==
+ declare -a execute__netwowrk_extract
                    # Accumulate middle lines
                    {
                  }
                      blk = blk divisor " " $0;
+ read -r key value
+ grep -F 192.168.1.10
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console ]]
                    }
                ' reports/192.168.1.10/misc/switch1.conf

+ case "${target_file}" in
                    END {
                      # No need for final print — all blocks end with end
                    }
+ grep -F 10.10.10.10
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ printf '%*s' 12 ''
+ cat -n
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ [[ true == true ]]
++ which awk
+ return 0
+ newline 2
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
++ which awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console
+ sed '/^[[:space:]]*$/d'
+ newline
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SZgF8Uu3i8 ]]
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SZgF8Uu3i8
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=2
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo
+ result=0
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i++ ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
++ echo -e --export
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ newline
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ return 0
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ case "${target_file}" in
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ newline
+ local count=1
+ message '                .cache/resources/misc/fw1.cfg'
+ (( i = 0 ))
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--dmz-fw2-backup.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ newline
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
++ printf '%*s' 12 ''
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
++ printf '%*s' 12 ''
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ local 'indent=            '
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console ]]
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console
+ (( i = 0 ))
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console
+ case "${target_file}" in
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console ]]
+ echo
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ryrkc2Wivx/network-extract--switch3.conf.console
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ result=0
+ [[ export =~ ^(config|c)$ ]]
+ cat -n
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ exit 0
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--fw3.cfg.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EuJqXuURFa ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EuJqXuURFa
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ case "${target_file}" in
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ output_dir=reports/10.10.10.10/misc
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ ! -d reports/10.10.10.10/misc ]]
+ local export_objects=true
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ cat -n
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console ]]
+ [[ export =~ ^(logger|l)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console ]]
+ newline
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ case "${target_file}" in
+ [[ export == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fg-campus-core.cfg.console
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i < count ))
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ echo
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ (( i < count ))
+ newline
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ cat -n
+ (( i++ ))
+ result=0
+ (( i < count ))
+ exit 0
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5jlVYjfSM ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5jlVYjfSM
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ serialize_objects
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ newline
+ [[ true == true ]]
+ local 'extracted_configuration={
+ local count=1
++ echo -e --verbose
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
  "version": "",
+ result=0
+ (( i < count ))
  "domain": "",
+ echo
  "hostname": ""
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console
}
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console ]]

object-group network Metropolis-Internal
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pzWzE0ixo5 ]]
+ (( i < count ))
 description Core internal LAN for application clusters
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console
 network-object host 10.0.2.3
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pzWzE0ixo5
 network-object 192.168.2.0 255.255.255.0
+ return 0
 network-object host 192.168.2.12'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console
  "model": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console ]]
  "version": "",
  "domain": "",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console
  "hostname": ""
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console ]]

+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ return 0
+ result=0
+ exit 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.My8MiGsPW2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.My8MiGsPW2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console ]]
+ result=0
+ case "${target_file}" in
+ exit 0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.48b1XZYAHW ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.48b1XZYAHW
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ local parent_dir=reports/198.51.100.75/misc
+ sed '1{/^[[:space:]]*$/d;}'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local 'extracted_configuration={
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ local 'extracted_configuration={
  "vendor": "fortinet",
 network-object host 198.51.100.75
  "model": "FortiGate-60F",
 network-object host 203.0.113.25
  "version": "v7.2.5.F",

  "domain": "",
object network Krypton-Gateway
  "hostname": "fg-branch-vpn-01"
 host 203.0.113.25
}

 description Secure NAT boundary for cloud access'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ result=0
config firewall address
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
 edit "Public-Test"
}
  set subnet 203.0.113.25 255.255.255.255

  set comment "Public NAT exposure for Red Skull trap"
object-group network Krypton-Cloud
 next
 description Cloud-facing external nodes
end'
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ result=0
+ [[ verbose =~ ^(extract|x)$ ]]
++ basename reports/198.51.100.75/misc/fw1
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ verbose =~ ^(logger|l)$ ]]
  "version": "v7.2.5.F",
  "domain": "",
+ [[ verbose =~ ^(platform|p)$ ]]
  "hostname": "fg-branch-vpn-01"
+ [[ verbose =~ ^(search|s)$ ]]
}

+ [[ verbose == \h\e\l\p ]]
#hostname="fg-branch-vpn-01"
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ true == true ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ true == true ]]
+ debug=false
#model="FortiGate-60F"
+ [[ -z '' ]]
+ dry_run=false
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -z true ]]

config firewall address
 edit "Public-Test"
+ [[ -z '' ]]
  set subnet 203.0.113.25 255.255.255.255
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console
+ export console_output=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console
  set comment "Public NAT exposure for Red Skull trap"
+ console_output=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console ]]
 next
end ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-testing-config.cfg.console
+ case "${target_file}" in
+ [[ -z true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fg-campus-core.cfg.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ [[ true == true ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console
  "hostname": ""
}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console ]]

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console
object-group network Krypton-Cloud
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console ]]
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ case "${target_file}" in

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2gDr89lAYx/network-extract--switch1.conf.console
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ sed '1{/^[[:space:]]*$/d;}'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ newline 2
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ (( i++ ))
+ (( i < count ))
+ local search_pattern
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
+ result=0
+ result=0
+ exit 0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yh2xpiAdXh ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ydom3gH79u ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yh2xpiAdXh
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Ydom3gH79u
++ IFS=,
++ echo 10.10.10.10
+ newline 2
+ local count=2
++ grep -v '^#'
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo reports/198.51.100.75/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ echo
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ newline
+ newline 2
+ local count=1
+ result=0
+ (( i = 0 ))
+ exit 0
+ (( i < count ))
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AV9oubzfen ]]
+ (( i++ ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AV9oubzfen
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ serialize_objects
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ search_pattern=198.51.100.75
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ mkdir -p reports/198.51.100.75/misc/.objects
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ serialize_objects
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ serialize_objects
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local parent_dir=reports/192.168.2.12/misc
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1NzExNTQ3MjAwMAo-- '
++ basename reports/192.168.2.12/misc/fw1
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ grep -F 198.51.100.75
+ sed '/^[[:space:]]*$/d'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local parent_dir=reports/203.0.113.25/misc
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
++ basename reports/203.0.113.25/misc/fw1
+ local parent_dir=reports/203.0.113.25/fortinet
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ local search_pattern
++ dirname reports/203.0.113.25/misc/fw3.cfg
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ result=0
+ [[ 0 -ne 0 ]]
++ echo reports/192.168.2.12/misc/fw1.cfg
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ local 'extracted_configuration={
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
  "vendor": "cisco",
++ cut -d/ -f2
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
  "model": "",
  "version": "",
  "domain": "",
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
  "hostname": ""
}

object-group network Shield-WiFi
+ local search_pattern
+ newline
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ local count=1
 network-object 192.168.100.0 255.255.255.0
+ (( i = 0 ))

+ (( i < count ))
object-group network Shield-WiFi
+ echo
 description Shield-controlled wireless network
+ (( i++ ))
 network-object host 10.10.10.10
+ (( i < count ))
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ output_dir=reports/203.0.113.25/misc
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ ! -d reports/203.0.113.25/misc ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ cat -n
++ command -v -- ./scripts/network-extract.shell
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ echo reports/203.0.113.25/misc/fw1.cfg

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ cut -d/ -f2
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/misc/.objects
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ search_pattern=203.0.113.25
+ (( i < count ))
+ echo
+ mkdir -p reports/203.0.113.25/misc/.objects
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline 2
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ local script_filename=cisco-configs.awk
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
++ which awk
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1NzI2OTg3NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ grep -F 192.168.2.12
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ case "${target_platform}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yyz7htU6tQ/network-extract--fw1.cfg.console
+ awk -v divisor=--MTc0OTAwNDc1NzI3NjAxODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ grep -F 203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ [[ false == true ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ awk -v divisor=--MTc0OTAwNDc1NzEzOTI0NjAwMAo-- '
+ serialize_objects
                    BEGIN {
++ IFS=,
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

++ echo 203.0.113.25
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

+ grep -F 203.0.113.25
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
                    END {
                      # No need for final print — all blocks end with end
                    }
+ declare -a execute__netwowrk_extract
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ sed '/^[[:space:]]*$/d'
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pLBafX7xP ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3pLBafX7xP
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ result=0
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ cat -n
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/10.10.10.10/misc
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
++ basename reports/10.10.10.10/misc/fw3
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ cat -n
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i < count ))
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ cat -n
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ return 0
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console
++ echo reports/10.10.10.10/misc/fw3.cfg
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cJRy2ouYKK/network-extract--fw1.cfg.console
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/misc/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw1.cfg.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fg-branch-vpn-01.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGpGG3jjoG ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CGpGG3jjoG
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SfDpOhCVoE ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SfDpOhCVoE
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1NzI2NzA2MTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ grep -F 10.10.10.10
                ' reports/10.10.10.10/misc/fw3.cfg
+ sed '/^[[:space:]]*$/d'
+ result=0
+ newline 2
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7hxa2FeLpH ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7hxa2FeLpH
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ serialize_objects
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ cat -n
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ local parent_dir=reports/203.0.113.25/misc
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console
++ basename reports/203.0.113.25/misc/fw3
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N2jy5LTDkq/network-extract--fw3.cfg.console
++ echo reports/203.0.113.25/misc/fw3.cfg
++ cut -d/ -f2
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fDnvAyg6BN ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fDnvAyg6BN
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--MTc0OTAwNDc1NzQxMjMzOTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ grep -F 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtIsDpHZD1/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7DPGvx2IX0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7DPGvx2IX0
