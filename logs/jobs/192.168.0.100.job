+ set -euo pipefail
+ set -x
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias print-line=print
++ alias print-message=message
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias pause=pause
++ alias display-help=display_help
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODU5MjQ3MDAyNDc3MjAwMAo
++ divisor=MTc0ODU5MjQ3MDAyNDc3MjAwMAo
+ source ./scripts/tools-configs.shell
++ [[ -n '' ]]
++ readonly __TOOLS_EXTRACTION_SOURCED=1
++ __TOOLS_EXTRACTION_SOURCED=1
++ alias extract-configs=extract_configs
++ alias process-configs=process_configs
+ alias parse-configs=main
+ [[ -z '' ]]
+ script_name=./scripts/parse-configs.shell
+ script_filename=parse-configs.shell
+ script_filename=parse-configs
+ parse_configs__logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/parse-configs.log
+ :
+ [[ 9 -eq 0 ]]
+ [[ --configs=.cache/resources =~ ^-*(h|help)$ ]]
+ main --configs=.cache/resources --ip-addr=192.168.0.100 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf --classify --verbose --debug
+ file_extensions=()
+ declare -a file_extensions
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=.cache/resources
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ export configs_dirpath=.cache/resources
+ configs_dirpath=.cache/resources
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(logs|o)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=192.168.0.100
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(file-ext|x)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=192.168.0.100
+ [[ ip-addr =~ ^(logs|o)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --index=2
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ index =~ ^(classify|g)$ ]]
+ [[ index =~ ^(configs|c)$ ]]
+ [[ index =~ ^(file-ext|x)$ ]]
+ [[ index =~ ^(index|n)$ ]]
+ local target_index=2
+ [[ index =~ ^(ip-addr|i)$ ]]
+ [[ index =~ ^(logs|o)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index == \h\e\l\p ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(file-ext|x)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(logs|o)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix == \h\e\l\p ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --reports=reports
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ reports =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(file-ext|x)$ ]]
+ [[ reports =~ ^(index|n)$ ]]
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ [[ reports =~ ^(logs|o)$ ]]
+ [[ reports =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(reports|r)$ ]]
+ local reports_folder=reports
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports == \h\e\l\p ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --file-ext=cfg,conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ file-ext =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(configs|c)$ ]]
+ [[ file-ext =~ ^(file-ext|x)$ ]]
+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
++ print cfg,conf
++ [[ -n cfg,conf ]]
++ echo -en cfg,conf
++ tr ':,;\n ' '\n'
+ [[ file-ext =~ ^(index|n)$ ]]
+ [[ file-ext =~ ^(ip-addr|i)$ ]]
+ [[ file-ext =~ ^(logs|o)$ ]]
+ [[ file-ext =~ ^(matrix|m)$ ]]
+ [[ file-ext =~ ^(reports|r)$ ]]
+ [[ file-ext =~ ^(validate|v)$ ]]
+ [[ file-ext == \h\e\l\p ]]
+ [[ file-ext == \d\e\b\u\g ]]
+ [[ file-ext == \d\r\y\-\r\u\n ]]
+ [[ file-ext == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(index|n)$ ]]
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export verbose=true
+ verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(index|n)$ ]]
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ export debug=true
+ debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
+ [[ -z true ]]
+ [[ -z x ]]
+ [[ 2 -eq 0 ]]
+ export configs_dirpath=.cache/resources
+ configs_dirpath=.cache/resources
+ source_configs=()
+ declare -ga source_configs
+ local target_configlist_json=targets/192.168.0.100.json
+ [[ ! -f targets/192.168.0.100.json ]]
+ mapfile -t source_configs
++ jq -r '.configs[] | "\( .config.site )/\( .config.device )"' targets/192.168.0.100.json
+ for i in "${!source_configs[@]}"
+ [[ cisco/access-sw1-west.cfg != \.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/* ]]
+ source_configs[$i]=.cache/resources/cisco/access-sw1-west.cfg
+ for i in "${!source_configs[@]}"
+ [[ cisco/campus-sw-access01.cfg != \.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/* ]]
+ source_configs[$i]=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
+ local matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ [[ -z 2 ]]
+ [[ -z false ]]
+ [[ -z 192.168.0.100 ]]
++ print 192.168.0.100
++ [[ -n 192.168.0.100 ]]
++ echo -en 192.168.0.100
++ sed -E 's/[[:space:]]+//g'
++ tr -d '\r'
+ target_address=192.168.0.100
+ [[ false == true ]]
+ export tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json
+ tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json
+ local extract_configs__logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log
+ :
+ for cfg_file in "${source_configs[@]}"
+ extract_configs .cache/resources/cisco/access-sw1-west.cfg 192.168.0.100 targets/192.168.0.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log
+ local config_file=.cache/resources/cisco/access-sw1-west.cfg
+ local target_pattern=192.168.0.100
+ local target_listing=targets/192.168.0.100.json
+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log
+ [[ ! -f .cache/resources/cisco/access-sw1-west.cfg ]]
+ message '[DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n [DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=[DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '[DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/access-sw1-west.cfg'
[DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/access-sw1-west.cfg
+ [[ ! -s .cache/resources/cisco/access-sw1-west.cfg ]]
++ stat -f %m .cache/resources/cisco/access-sw1-west.cfg
+ message '[OK] File '\''.cache/resources/cisco/access-sw1-west.cfg'\'' is readable and size is 1748592462 bytes'
+ [[ -n [OK] File '.cache/resources/cisco/access-sw1-west.cfg' is readable and size is 1748592462 bytes ]]
+ local 'message=[OK] File '\''.cache/resources/cisco/access-sw1-west.cfg'\'' is readable and size is 1748592462 bytes'
+ echo -e '[OK] File '\''.cache/resources/cisco/access-sw1-west.cfg'\'' is readable and size is 1748592462 bytes'
[OK] File '.cache/resources/cisco/access-sw1-west.cfg' is readable and size is 1748592462 bytes
+ local 'imported_content={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ true == true ]]
+ message 'Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ local 'message=Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ echo -e 'Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10
++ sed '/^\s*$/d;/^\s*!.*$/d'
+ local 'sanitized_content={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
version 12.4
hostname access-sw1-west
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ true == true ]]
+ message 'Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
version 12.4
hostname access-sw1-west
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
version 12.4
hostname access-sw1-west
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ local 'message=Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
version 12.4
hostname access-sw1-west
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ echo -e 'Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
version 12.4
hostname access-sw1-west
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
version 12.4
hostname access-sw1-west
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10
++ perl -pe 's/\n/MTc0ODU5MjQ3MDAyNDc3MjAwMAo/g'
+ local 'serialized_objects={MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.4",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "access-sw1-west"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.4MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname access-sw1-westMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management InterfaceMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN GatewayMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Mutant-WiFiMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Controlled guest devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ [[ true == true ]]
+ message 'Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.4",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "access-sw1-west"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.4MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname access-sw1-westMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management InterfaceMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN GatewayMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Mutant-WiFiMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Controlled guest devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ [[ -n Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.4",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "access-sw1-west"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.4MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname access-sw1-westMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management InterfaceMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN GatewayMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Mutant-WiFiMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Controlled guest devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo ]]
+ local 'message=Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.4",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "access-sw1-west"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.4MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname access-sw1-westMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management InterfaceMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN GatewayMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Mutant-WiFiMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Controlled guest devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ echo -e 'Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.4",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "access-sw1-west"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.4MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname access-sw1-westMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management InterfaceMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN GatewayMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Mutant-WiFiMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Controlled guest devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.4",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "access-sw1-west"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.4MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname access-sw1-westMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management InterfaceMTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN GatewayMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Mutant-WiFiMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Controlled guest devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo
++ sed -E 's/MTc0ODU5MjQ3MDAyNDc3MjAwMAo([^[:space:]])/\n\1/g'
+ local 'restored_lines={MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.4",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "access-sw1-west"
}
version 12.4
hostname access-sw1-west
interface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management Interface
interface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN Gateway
object-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10
object-group network Mutant-WiFiMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Controlled guest devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ restored_lines+='
'
+ IFS='
'
+ read -r -d '' -a config_objects
++ printf '%s\0' '{MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.4",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "access-sw1-west"
}
version 12.4
hostname access-sw1-west
interface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management Interface
interface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN Gateway
object-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10
object-group network Mutant-WiFiMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Controlled guest devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo
'
+ [[ true == true ]]
+ message 'Loaded 8 config blocks'
+ [[ -n Loaded 8 config blocks ]]
+ local 'message=Loaded 8 config blocks'
+ echo -e 'Loaded 8 config blocks'
Loaded 8 config blocks
+ oIFS=' 	
'
+ IFS='
'
+ matched_objects=()
+ declare -a matched_objects
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ matched_objects+=("${block}")
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ matched_objects+=("${block}")
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=' 	
'
+ [[ true == true ]]
+ message 'Loaded 2 config blocks'
+ [[ -n Loaded 2 config blocks ]]
+ local 'message=Loaded 2 config blocks'
+ echo -e 'Loaded 2 config blocks'
Loaded 2 config blocks
+ local process_configs__logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/process_configs.logs
+ :
+ for serialized_line in "${matched_objects[@]}"
+ [[ true == true ]]
+ message 'Serialized Line: interface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN Gateway'
+ [[ -n Serialized Line: interface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN Gateway ]]
+ local 'message=Serialized Line: interface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN Gateway'
+ echo -e 'Serialized Line: interface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN Gateway'
Serialized Line: interface Vlan100MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.100 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Guest VLAN Gateway
++ perl -pe 's/MTc0ODU5MjQ3MDAyNDc3MjAwMAo/\n/g'
+ restored_block='interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ local cfg_path=.cache/resources/cisco/access-sw1-west.cfg
+ local rel_path=cisco/access-sw1-west.cfg
+ local site=cisco
+ local device_filename=access-sw1-west.cfg
+ local extension=cfg
+ local objects_dir=reports/192.168.0.100/cisco
+ local objects_file=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ -s reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ mkdir -p reports/192.168.0.100/cisco
+ message 'interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ [[ -n interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway ]]
+ local 'message=interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ echo -e 'interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ message '!'
+ [[ -n ! ]]
+ local 'message=!'
+ echo -e '!'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Restored Configuration:\ninterface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ [[ -n Restored Configuration:\ninterface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway ]]
+ local 'message=Restored Configuration:\ninterface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ echo -e 'Restored Configuration:\ninterface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
Restored Configuration:
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
+ process_configs 192.168.0.100 .cache/resources/cisco/access-sw1-west.cfg 'interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/process_configs.logs
+ local target_pattern=192.168.0.100
+ local config_path=.cache/resources/cisco/access-sw1-west.cfg
+ local 'restored_block=interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/process_configs.logs
+ local cleaned_block
++ sed '/^[[:space:]]*$/d'
+ cleaned_block='interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ [[ -z interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway ]]
+ [[ true == true ]]
+ message '[process_configs] Raw Block:\ninterface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ [[ -n [process_configs] Raw Block:\ninterface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway ]]
+ local 'message=[process_configs] Raw Block:\ninterface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
+ echo -e '[process_configs] Raw Block:\ninterface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway'
[process_configs] Raw Block:
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
+ local object_line
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ object_line='interface Vlan100'
+ [[ -z interface Vlan100 ]]
+ local object_keyword type_value
++ awk '{print $1}'
+ object_keyword=interface
++ wc -l
+ ((         3 > 1  ))
++ sed -E 's/^[^[:space:]]+[[:space:]]+//'
+ type_value=Vlan100
+ [[ -z Vlan100 ]]
+ [[ true == true ]]
+ print '[process_configs] object   : interface'
+ [[ -n [process_configs] object   : interface ]]
+ echo -en '[process_configs] object   : interface'
[process_configs] object   : interface+ print '[process_configs] type     : Vlan100'
+ [[ -n [process_configs] type     : Vlan100 ]]
+ echo -en '[process_configs] type     : Vlan100'
[process_configs] type     : Vlan100+ data_sets=()
+ local -a data_sets
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=interface Vlan100'
+ [[ -z interface Vlan100 ]]
+ [[ interface vlan100 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=ip address 192.168.0.100 255.255.255.0'
+ [[ -z ip address 192.168.0.100 255.255.255.0 ]]
+ [[ ip address 192.168.0.100 255.255.255.0 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Guest VLAN Gateway'
+ [[ -z description Guest VLAN Gateway ]]
+ [[ description guest vlan gateway =~ ^description[[:space:]] ]]
+ continue
+ IFS=
+ read -r line
+ ((  2 > 1  ))
+ data_sets=("${data_sets[@]:1}")
+ [[ true == true ]]
+ message '[process_configs] Object Sets:'
+ [[ -n [process_configs] Object Sets: ]]
+ local 'message=[process_configs] Object Sets:'
+ echo -e '[process_configs] Object Sets:'
[process_configs] Object Sets:
+ for e in "${data_sets[@]}"
+ print '  - ip address 192.168.0.100 255.255.255.0'
+ [[ -n   - ip address 192.168.0.100 255.255.255.0 ]]
+ echo -en '  - ip address 192.168.0.100 255.255.255.0'
  - ip address 192.168.0.100 255.255.255.0++ grep -E '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'matched_line=ip address 192.168.0.100 255.255.255.0'
+ [[ -z ip address 192.168.0.100 255.255.255.0 ]]
+ [[ true == true ]]
+ message '[process_configs] Matched: ip address 192.168.0.100 255.255.255.0'
+ [[ -n [process_configs] Matched: ip address 192.168.0.100 255.255.255.0 ]]
+ local 'message=[process_configs] Matched: ip address 192.168.0.100 255.255.255.0'
+ echo -e '[process_configs] Matched: ip address 192.168.0.100 255.255.255.0'
[process_configs] Matched: ip address 192.168.0.100 255.255.255.0
+ matched_items=()
+ local -a matched_items
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ matched_items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
++ printf '%s\n' 'ip address 192.168.0.100 255.255.255.0'
++ jq -R .
++ jq --slurp .
+ local 'matched_items_json=[
  "ip address 192.168.0.100 255.255.255.0"
]'
++ grep -i '^[[:space:]]*description'
++ head -n 1
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I; s/^[[:space:]]*//; s/[[:space:]]*$//'
+ local 'description_value=Guest VLAN Gateway'
+ [[ -z Guest VLAN Gateway ]]
+ [[ Guest VLAN Gateway =~ 
 ]]
+ [[ true == true ]]
+ message '[process_configs] Description: Guest VLAN Gateway'
+ [[ -n [process_configs] Description: Guest VLAN Gateway ]]
+ local 'message=[process_configs] Description: Guest VLAN Gateway'
+ echo -e '[process_configs] Description: Guest VLAN Gateway'
[process_configs] Description: Guest VLAN Gateway
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=Vlan100
++ jq -r --arg key Vlan100 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Guest VLAN Gateway' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
+ [[ true == true ]]
+ message '[process_configs] Group: Unclassified'
+ [[ -n [process_configs] Group: Unclassified ]]
+ local 'message=[process_configs] Group: Unclassified'
+ echo -e '[process_configs] Group: Unclassified'
[process_configs] Group: Unclassified
++ printf '%s\n' 'ip address 192.168.0.100 255.255.255.0'
++ jq -R .
++ jq --slurp .
+ local 'items_2json=[
  "ip address 192.168.0.100 255.255.255.0"
]'
+ declare -A sets_map
+ for line in "${data_sets[@]}"
+ [[ -n ip address 192.168.0.100 255.255.255.0 ]]
++ awk '{print $1}'
+ key=ip
+ [[ -n ip ]]
+ [[ -z '' ]]
+ sets_map["$key"]=1
++ for k in "${!sets_map[@]}"
++ printf '{ "key": "%s", "val": %d }\n' ip 1
++ jq --slurp 'map({(.key): .val}) | add'
+ local 'sets_json={
  "ip": 1
}'
+ partner_value=
+ case "${object_keyword}" in
+ partner_value=
++ jq -n --arg object interface --arg type Vlan100 --arg partner '' --arg description 'Guest VLAN Gateway' --argjson items '[
  "ip address 192.168.0.100 255.255.255.0"
]' --argjson sets '{
  "ip": 1
}' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          sets: $sets,
          group: $group
        }'
+ target_object='{
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}'
+ export target_object
+ [[ true == true ]]
+ message '[process_configs] JSON Object (output):'
+ [[ -n [process_configs] JSON Object (output): ]]
+ local 'message=[process_configs] JSON Object (output):'
+ echo -e '[process_configs] JSON Object (output):'
[process_configs] JSON Object (output):
+ print '{
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}'
+ jq .
+ [[ -n {
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
} ]]
+ echo -en '{
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}'
{
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n {
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
} ]]
+ [[ true == true ]]
+ message '|-----> Target Objects: {
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}'
+ [[ -n |-----> Target Objects: {
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
} ]]
+ local 'message=|-----> Target Objects: {
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}'
+ echo -e '|-----> Target Objects: {
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}'
|-----> Target Objects: {
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}
+ [[ -n {
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
} ]]
++ printf '%s\n' '{
  "object": "interface",
  "type": "Vlan100",
  "partner": false,
  "description": "Guest VLAN Gateway",
  "items": [
    "ip address 192.168.0.100 255.255.255.0"
  ],
  "sets": {
    "ip": 1
  },
  "group": "Unclassified"
}'
++ jq --slurp --arg site .cache/resources/cisco --arg device access-sw1-west.cfg '{
              site: ( $site | gsub( "^.*/"; "" ) ),
              device: $device,
              objects: .
            }'
+ wrapped_block='{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ true == true ]]
+ message '|-----> Config Objects:\n{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n |-----> Config Objects:\n{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ local 'message=|-----> Config Objects:\n{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ echo -e '|-----> Config Objects:\n{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
}'
|-----> Config Objects:
{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
}
+ print '{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n {
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ echo -en '{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "interface",
      "type": "Vlan100",
      "partner": false,
      "description": "Guest VLAN Gateway",
      "items": [
        "ip address 192.168.0.100 255.255.255.0"
      ],
      "sets": {
        "ip": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ for serialized_line in "${matched_objects[@]}"
+ [[ true == true ]]
+ message 'Serialized Line: object-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10'
+ [[ -n Serialized Line: object-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10 ]]
+ local 'message=Serialized Line: object-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10'
+ echo -e 'Serialized Line: object-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10'
Serialized Line: object-group network MGMT-ACCESSMTc0ODU5MjQ3MDAyNDc3MjAwMAo description Management objectsMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10
++ perl -pe 's/MTc0ODU5MjQ3MDAyNDc3MjAwMAo/\n/g'
+ restored_block='object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local cfg_path=.cache/resources/cisco/access-sw1-west.cfg
+ local rel_path=cisco/access-sw1-west.cfg
+ local site=cisco
+ local device_filename=access-sw1-west.cfg
+ local extension=cfg
+ local objects_dir=reports/192.168.0.100/cisco
+ local objects_file=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ -s reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
++ echo 'object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ tr '\n' '\r'
+ local 'restored_flat=object-group network MGMT-ACCESS description Management objects network-object host 192.168.0.1 network-object host 192.168.0.100 network-object host 10.10.10.10'
++ tr '\n' '\r'
+ local 'objects_flat=interface Vlan100 ip address 192.168.0.100 255.255.255.0 description Guest VLAN Gateway!'
+ grep -Fq -- 'object-group network MGMT-ACCESS description Management objects network-object host 192.168.0.1 network-object host 192.168.0.100 network-object host 10.10.10.10'
+ mkdir -p reports/192.168.0.100/cisco
+ message 'object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'message=object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e 'object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ message '!'
+ [[ -n ! ]]
+ local 'message=!'
+ echo -e '!'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Restored Configuration:\nobject-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n Restored Configuration:\nobject-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'message=Restored Configuration:\nobject-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e 'Restored Configuration:\nobject-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
Restored Configuration:
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ process_configs 192.168.0.100 .cache/resources/cisco/access-sw1-west.cfg 'object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/process_configs.logs
+ local target_pattern=192.168.0.100
+ local config_path=.cache/resources/cisco/access-sw1-west.cfg
+ local 'restored_block=object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/process_configs.logs
+ local cleaned_block
++ sed '/^[[:space:]]*$/d'
+ cleaned_block='object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -z object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ true == true ]]
+ message '[process_configs] Raw Block:\nobject-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n [process_configs] Raw Block:\nobject-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'message=[process_configs] Raw Block:\nobject-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e '[process_configs] Raw Block:\nobject-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
[process_configs] Raw Block:
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ local object_line
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ object_line='object-group network MGMT-ACCESS'
+ [[ -z object-group network MGMT-ACCESS ]]
+ local object_keyword type_value
++ awk '{print $1}'
+ object_keyword=object-group
++ wc -l
+ ((         5 > 1  ))
++ sed -E 's/^[^[:space:]]+[[:space:]]+//'
+ type_value='network MGMT-ACCESS'
+ [[ -z network MGMT-ACCESS ]]
+ [[ true == true ]]
+ print '[process_configs] object   : object-group'
+ [[ -n [process_configs] object   : object-group ]]
+ echo -en '[process_configs] object   : object-group'
[process_configs] object   : object-group+ print '[process_configs] type     : network MGMT-ACCESS'
+ [[ -n [process_configs] type     : network MGMT-ACCESS ]]
+ echo -en '[process_configs] type     : network MGMT-ACCESS'
[process_configs] type     : network MGMT-ACCESS+ data_sets=()
+ local -a data_sets
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object-group network MGMT-ACCESS'
+ [[ -z object-group network MGMT-ACCESS ]]
+ [[ object-group network mgmt-access =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Management objects'
+ [[ -z description Management objects ]]
+ [[ description management objects =~ ^description[[:space:]] ]]
+ continue
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 192.168.0.1'
+ [[ -z network-object host 192.168.0.1 ]]
+ [[ network-object host 192.168.0.1 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 192.168.0.100'
+ [[ -z network-object host 192.168.0.100 ]]
+ [[ network-object host 192.168.0.100 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 10.10.10.10'
+ [[ -z network-object host 10.10.10.10 ]]
+ [[ network-object host 10.10.10.10 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
+ ((  4 > 1  ))
+ data_sets=("${data_sets[@]:1}")
+ [[ true == true ]]
+ message '[process_configs] Object Sets:'
+ [[ -n [process_configs] Object Sets: ]]
+ local 'message=[process_configs] Object Sets:'
+ echo -e '[process_configs] Object Sets:'
[process_configs] Object Sets:
+ for e in "${data_sets[@]}"
+ print '  - network-object host 192.168.0.1'
+ [[ -n   - network-object host 192.168.0.1 ]]
+ echo -en '  - network-object host 192.168.0.1'
  - network-object host 192.168.0.1+ for e in "${data_sets[@]}"
+ print '  - network-object host 192.168.0.100'
+ [[ -n   - network-object host 192.168.0.100 ]]
+ echo -en '  - network-object host 192.168.0.100'
  - network-object host 192.168.0.100+ for e in "${data_sets[@]}"
+ print '  - network-object host 10.10.10.10'
+ [[ -n   - network-object host 10.10.10.10 ]]
+ echo -en '  - network-object host 10.10.10.10'
  - network-object host 10.10.10.10++ grep -E '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'matched_line=network-object host 192.168.0.100'
+ [[ -z network-object host 192.168.0.100 ]]
+ [[ true == true ]]
+ message '[process_configs] Matched: network-object host 192.168.0.100'
+ [[ -n [process_configs] Matched: network-object host 192.168.0.100 ]]
+ local 'message=[process_configs] Matched: network-object host 192.168.0.100'
+ echo -e '[process_configs] Matched: network-object host 192.168.0.100'
[process_configs] Matched: network-object host 192.168.0.100
+ matched_items=()
+ local -a matched_items
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ matched_items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
++ printf '%s\n' 'network-object host 192.168.0.100'
++ jq -R .
++ jq --slurp .
+ local 'matched_items_json=[
  "network-object host 192.168.0.100"
]'
++ grep -i '^[[:space:]]*description'
++ head -n 1
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I; s/^[[:space:]]*//; s/[[:space:]]*$//'
+ local 'description_value=Management objects'
+ [[ -z Management objects ]]
+ [[ Management objects =~ 
 ]]
+ [[ true == true ]]
+ message '[process_configs] Description: Management objects'
+ [[ -n [process_configs] Description: Management objects ]]
+ local 'message=[process_configs] Description: Management objects'
+ echo -e '[process_configs] Description: Management objects'
[process_configs] Description: Management objects
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=MGMT-ACCESS
++ jq -r --arg key MGMT-ACCESS 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Management objects' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
+ [[ true == true ]]
+ message '[process_configs] Group: Unclassified'
+ [[ -n [process_configs] Group: Unclassified ]]
+ local 'message=[process_configs] Group: Unclassified'
+ echo -e '[process_configs] Group: Unclassified'
[process_configs] Group: Unclassified
++ printf '%s\n' 'network-object host 192.168.0.1' 'network-object host 192.168.0.100' 'network-object host 10.10.10.10'
++ jq -R .
++ jq --slurp .
+ local 'items_2json=[
  "network-object host 192.168.0.1",
  "network-object host 192.168.0.100",
  "network-object host 10.10.10.10"
]'
+ declare -A sets_map
+ for line in "${data_sets[@]}"
+ [[ -n network-object host 192.168.0.1 ]]
++ awk '{print $1}'
+ key=network-object
+ [[ -n network-object ]]
+ [[ -z '' ]]
+ sets_map["$key"]=1
+ for line in "${data_sets[@]}"
+ [[ -n network-object host 192.168.0.100 ]]
++ awk '{print $1}'
+ key=network-object
+ [[ -n network-object ]]
+ [[ -z x ]]
+ ((  sets_map[network-object]++  ))
+ for line in "${data_sets[@]}"
+ [[ -n network-object host 10.10.10.10 ]]
++ awk '{print $1}'
+ key=network-object
+ [[ -n network-object ]]
+ [[ -z x ]]
+ ((  sets_map[network-object]++  ))
++ for k in "${!sets_map[@]}"
++ printf '{ "key": "%s", "val": %d }\n' network-object 3
++ jq --slurp 'map({(.key): .val}) | add'
+ local 'sets_json={
  "network-object": 3
}'
+ partner_value=
+ case "${object_keyword}" in
+ [[ network MGMT-ACCESS == network* ]]
+ extracted_name=MGMT-ACCESS
+ [[ MGMT-ACCESS =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]
+ partner_value=MGMT-ACCESS
++ jq -n --arg object object-group --arg type 'network MGMT-ACCESS' --arg partner MGMT-ACCESS --arg description 'Management objects' --argjson items '[
  "network-object host 192.168.0.100"
]' --argjson sets '{
  "network-object": 3
}' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          sets: $sets,
          group: $group
        }'
+ target_object='{
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
+ export target_object
+ [[ true == true ]]
+ message '[process_configs] JSON Object (output):'
+ [[ -n [process_configs] JSON Object (output): ]]
+ local 'message=[process_configs] JSON Object (output):'
+ echo -e '[process_configs] JSON Object (output):'
[process_configs] JSON Object (output):
+ print '{
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
+ [[ -n {
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
} ]]
+ jq .
+ echo -en '{
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
{
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n {
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
} ]]
+ [[ true == true ]]
+ message '|-----> Target Objects: {
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
+ [[ -n |-----> Target Objects: {
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
} ]]
+ local 'message=|-----> Target Objects: {
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
+ echo -e '|-----> Target Objects: {
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
|-----> Target Objects: {
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}
+ [[ -n {
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
} ]]
++ printf '%s\n' '{
  "object": "object-group",
  "type": "network MGMT-ACCESS",
  "partner": "MGMT-ACCESS",
  "description": "Management objects",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
++ jq --slurp --arg site .cache/resources/cisco --arg device access-sw1-west.cfg '{
              site: ( $site | gsub( "^.*/"; "" ) ),
              device: $device,
              objects: .
            }'
+ wrapped_block='{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ true == true ]]
+ message '|-----> Config Objects:\n{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n |-----> Config Objects:\n{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ local 'message=|-----> Config Objects:\n{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ echo -e '|-----> Config Objects:\n{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
|-----> Config Objects:
{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}
+ print '{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n {
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ echo -en '{
  "site": "cisco",
  "device": "access-sw1-west.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network MGMT-ACCESS",
      "partner": "MGMT-ACCESS",
      "description": "Management objects",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ return 0
+ for cfg_file in "${source_configs[@]}"
+ extract_configs .cache/resources/cisco/campus-sw-access01.cfg 192.168.0.100 targets/192.168.0.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log
+ local config_file=.cache/resources/cisco/campus-sw-access01.cfg
+ local target_pattern=192.168.0.100
+ local target_listing=targets/192.168.0.100.json
+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log
+ [[ ! -f .cache/resources/cisco/campus-sw-access01.cfg ]]
+ message '[DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n [DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=[DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '[DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/campus-sw-access01.cfg'
[DEBUG] Checking if config file exists and is readable: .cache/resources/cisco/campus-sw-access01.cfg
+ [[ ! -s .cache/resources/cisco/campus-sw-access01.cfg ]]
++ stat -f %m .cache/resources/cisco/campus-sw-access01.cfg
+ message '[OK] File '\''.cache/resources/cisco/campus-sw-access01.cfg'\'' is readable and size is 1748592462 bytes'
+ [[ -n [OK] File '.cache/resources/cisco/campus-sw-access01.cfg' is readable and size is 1748592462 bytes ]]
+ local 'message=[OK] File '\''.cache/resources/cisco/campus-sw-access01.cfg'\'' is readable and size is 1748592462 bytes'
+ echo -e '[OK] File '\''.cache/resources/cisco/campus-sw-access01.cfg'\'' is readable and size is 1748592462 bytes'
[OK] File '.cache/resources/cisco/campus-sw-access01.cfg' is readable and size is 1748592462 bytes
+ local 'imported_content={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ true == true ]]
+ message 'Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'message=Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e 'Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
++ sed '/^\s*$/d;/^\s*!.*$/d'
+ local 'sanitized_content={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
version 12.2
hostname campus-sw-access01
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ true == true ]]
+ message 'Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
version 12.2
hostname campus-sw-access01
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
version 12.2
hostname campus-sw-access01
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'message=Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
version 12.2
hostname campus-sw-access01
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e 'Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
version 12.2
hostname campus-sw-access01
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
version 12.2
hostname campus-sw-access01
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
++ perl -pe 's/\n/MTc0ODU5MjQ3MDAyNDc3MjAwMAo/g'
+ local 'serialized_objects={MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.2",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "campus-sw-access01"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.2MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname campus-sw-access01MTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Switch MgmtMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ [[ true == true ]]
+ message 'Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.2",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "campus-sw-access01"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.2MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname campus-sw-access01MTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Switch MgmtMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ [[ -n Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.2",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "campus-sw-access01"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.2MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname campus-sw-access01MTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Switch MgmtMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo ]]
+ local 'message=Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.2",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "campus-sw-access01"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.2MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname campus-sw-access01MTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Switch MgmtMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ echo -e 'Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.2",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "campus-sw-access01"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.2MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname campus-sw-access01MTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Switch MgmtMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
Serialized Objects: {MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.2",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "campus-sw-access01"MTc0ODU5MjQ3MDAyNDc3MjAwMAo}MTc0ODU5MjQ3MDAyNDc3MjAwMAoversion 12.2MTc0ODU5MjQ3MDAyNDc3MjAwMAohostname campus-sw-access01MTc0ODU5MjQ3MDAyNDc3MjAwMAointerface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Switch MgmtMTc0ODU5MjQ3MDAyNDc3MjAwMAoobject-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo
++ sed -E 's/MTc0ODU5MjQ3MDAyNDc3MjAwMAo([^[:space:]])/\n\1/g'
+ local 'restored_lines={MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.2",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "campus-sw-access01"
}
version 12.2
hostname campus-sw-access01
interface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Switch Mgmt
object-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ restored_lines+='
'
+ IFS='
'
+ read -r -d '' -a config_objects
++ printf '%s\0' '{MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "vendor": "cisco",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "model": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "version": "12.2",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "domain": "",MTc0ODU5MjQ3MDAyNDc3MjAwMAo  "hostname": "campus-sw-access01"
}
version 12.2
hostname campus-sw-access01
interface Vlan1MTc0ODU5MjQ3MDAyNDc3MjAwMAo ip address 192.168.0.1 255.255.255.0MTc0ODU5MjQ3MDAyNDc3MjAwMAo description Switch Mgmt
object-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo
'
+ [[ true == true ]]
+ message 'Loaded 6 config blocks'
+ [[ -n Loaded 6 config blocks ]]
+ local 'message=Loaded 6 config blocks'
+ echo -e 'Loaded 6 config blocks'
Loaded 6 config blocks
+ oIFS=' 	
'
+ IFS='
'
+ matched_objects=()
+ declare -a matched_objects
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ matched_objects+=("${block}")
+ IFS=' 	
'
+ [[ true == true ]]
+ message 'Loaded 1 config blocks'
+ [[ -n Loaded 1 config blocks ]]
+ local 'message=Loaded 1 config blocks'
+ echo -e 'Loaded 1 config blocks'
Loaded 1 config blocks
+ local process_configs__logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/process_configs.logs
+ :
+ for serialized_line in "${matched_objects[@]}"
+ [[ true == true ]]
+ message 'Serialized Line: object-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ [[ -n Serialized Line: object-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo ]]
+ local 'message=Serialized Line: object-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
+ echo -e 'Serialized Line: object-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo'
Serialized Line: object-group network Floor-NetworksMTc0ODU5MjQ3MDAyNDc3MjAwMAo description End-user and service devicesMTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.1MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 192.168.0.100MTc0ODU5MjQ3MDAyNDc3MjAwMAo network-object host 10.10.10.10MTc0ODU5MjQ3MDAyNDc3MjAwMAo
++ perl -pe 's/MTc0ODU5MjQ3MDAyNDc3MjAwMAo/\n/g'
+ restored_block='object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local cfg_path=.cache/resources/cisco/campus-sw-access01.cfg
+ local rel_path=cisco/campus-sw-access01.cfg
+ local site=cisco
+ local device_filename=campus-sw-access01.cfg
+ local extension=cfg
+ local objects_dir=reports/192.168.0.100/cisco
+ local objects_file=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -s reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ mkdir -p reports/192.168.0.100/cisco
+ message 'object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'message=object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e 'object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ message '!'
+ [[ -n ! ]]
+ local 'message=!'
+ echo -e '!'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Restored Configuration:\nobject-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n Restored Configuration:\nobject-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'message=Restored Configuration:\nobject-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e 'Restored Configuration:\nobject-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
Restored Configuration:
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ process_configs 192.168.0.100 .cache/resources/cisco/campus-sw-access01.cfg 'object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/process_configs.logs
+ local target_pattern=192.168.0.100
+ local config_path=.cache/resources/cisco/campus-sw-access01.cfg
+ local 'restored_block=object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/process_configs.logs
+ local cleaned_block
++ sed '/^[[:space:]]*$/d'
+ cleaned_block='object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -z object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ true == true ]]
+ message '[process_configs] Raw Block:\nobject-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n [process_configs] Raw Block:\nobject-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'message=[process_configs] Raw Block:\nobject-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo -e '[process_configs] Raw Block:\nobject-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
[process_configs] Raw Block:
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ local object_line
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ object_line='object-group network Floor-Networks'
+ [[ -z object-group network Floor-Networks ]]
+ local object_keyword type_value
++ awk '{print $1}'
+ object_keyword=object-group
++ wc -l
+ ((         5 > 1  ))
++ sed -E 's/^[^[:space:]]+[[:space:]]+//'
+ type_value='network Floor-Networks'
+ [[ -z network Floor-Networks ]]
+ [[ true == true ]]
+ print '[process_configs] object   : object-group'
+ [[ -n [process_configs] object   : object-group ]]
+ echo -en '[process_configs] object   : object-group'
[process_configs] object   : object-group+ print '[process_configs] type     : network Floor-Networks'
+ [[ -n [process_configs] type     : network Floor-Networks ]]
+ echo -en '[process_configs] type     : network Floor-Networks'
[process_configs] type     : network Floor-Networks+ data_sets=()
+ local -a data_sets
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object-group network Floor-Networks'
+ [[ -z object-group network Floor-Networks ]]
+ [[ object-group network floor-networks =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description End-user and service devices'
+ [[ -z description End-user and service devices ]]
+ [[ description end-user and service devices =~ ^description[[:space:]] ]]
+ continue
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 192.168.0.1'
+ [[ -z network-object host 192.168.0.1 ]]
+ [[ network-object host 192.168.0.1 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 192.168.0.100'
+ [[ -z network-object host 192.168.0.100 ]]
+ [[ network-object host 192.168.0.100 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 10.10.10.10'
+ [[ -z network-object host 10.10.10.10 ]]
+ [[ network-object host 10.10.10.10 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
+ ((  4 > 1  ))
+ data_sets=("${data_sets[@]:1}")
+ [[ true == true ]]
+ message '[process_configs] Object Sets:'
+ [[ -n [process_configs] Object Sets: ]]
+ local 'message=[process_configs] Object Sets:'
+ echo -e '[process_configs] Object Sets:'
[process_configs] Object Sets:
+ for e in "${data_sets[@]}"
+ print '  - network-object host 192.168.0.1'
+ [[ -n   - network-object host 192.168.0.1 ]]
+ echo -en '  - network-object host 192.168.0.1'
  - network-object host 192.168.0.1+ for e in "${data_sets[@]}"
+ print '  - network-object host 192.168.0.100'
+ [[ -n   - network-object host 192.168.0.100 ]]
+ echo -en '  - network-object host 192.168.0.100'
  - network-object host 192.168.0.100+ for e in "${data_sets[@]}"
+ print '  - network-object host 10.10.10.10'
+ [[ -n   - network-object host 10.10.10.10 ]]
+ echo -en '  - network-object host 10.10.10.10'
  - network-object host 10.10.10.10++ grep -E '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'matched_line=network-object host 192.168.0.100'
+ [[ -z network-object host 192.168.0.100 ]]
+ [[ true == true ]]
+ message '[process_configs] Matched: network-object host 192.168.0.100'
+ [[ -n [process_configs] Matched: network-object host 192.168.0.100 ]]
+ local 'message=[process_configs] Matched: network-object host 192.168.0.100'
+ echo -e '[process_configs] Matched: network-object host 192.168.0.100'
[process_configs] Matched: network-object host 192.168.0.100
+ matched_items=()
+ local -a matched_items
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ matched_items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)'
+ IFS=
+ read -r line
++ printf '%s\n' 'network-object host 192.168.0.100'
++ jq -R .
++ jq --slurp .
+ local 'matched_items_json=[
  "network-object host 192.168.0.100"
]'
++ grep -i '^[[:space:]]*description'
++ head -n 1
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I; s/^[[:space:]]*//; s/[[:space:]]*$//'
+ local 'description_value=End-user and service devices'
+ [[ -z End-user and service devices ]]
+ [[ End-user and service devices =~ 
 ]]
+ [[ true == true ]]
+ message '[process_configs] Description: End-user and service devices'
+ [[ -n [process_configs] Description: End-user and service devices ]]
+ local 'message=[process_configs] Description: End-user and service devices'
+ echo -e '[process_configs] Description: End-user and service devices'
[process_configs] Description: End-user and service devices
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=Floor-Networks
++ jq -r --arg key Floor-Networks 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'End-user and service devices' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
+ [[ true == true ]]
+ message '[process_configs] Group: Unclassified'
+ [[ -n [process_configs] Group: Unclassified ]]
+ local 'message=[process_configs] Group: Unclassified'
+ echo -e '[process_configs] Group: Unclassified'
[process_configs] Group: Unclassified
++ printf '%s\n' 'network-object host 192.168.0.1' 'network-object host 192.168.0.100' 'network-object host 10.10.10.10'
++ jq -R .
++ jq --slurp .
+ local 'items_2json=[
  "network-object host 192.168.0.1",
  "network-object host 192.168.0.100",
  "network-object host 10.10.10.10"
]'
+ declare -A sets_map
+ for line in "${data_sets[@]}"
+ [[ -n network-object host 192.168.0.1 ]]
++ awk '{print $1}'
+ key=network-object
+ [[ -n network-object ]]
+ [[ -z '' ]]
+ sets_map["$key"]=1
+ for line in "${data_sets[@]}"
+ [[ -n network-object host 192.168.0.100 ]]
++ awk '{print $1}'
+ key=network-object
+ [[ -n network-object ]]
+ [[ -z x ]]
+ ((  sets_map[network-object]++  ))
+ for line in "${data_sets[@]}"
+ [[ -n network-object host 10.10.10.10 ]]
++ awk '{print $1}'
+ key=network-object
+ [[ -n network-object ]]
+ [[ -z x ]]
+ ((  sets_map[network-object]++  ))
++ for k in "${!sets_map[@]}"
++ printf '{ "key": "%s", "val": %d }\n' network-object 3
++ jq --slurp 'map({(.key): .val}) | add'
+ local 'sets_json={
  "network-object": 3
}'
+ partner_value=
+ case "${object_keyword}" in
+ [[ network Floor-Networks == network* ]]
+ extracted_name=Floor-Networks
+ [[ Floor-Networks =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]
+ partner_value=Floor-Networks
++ jq -n --arg object object-group --arg type 'network Floor-Networks' --arg partner Floor-Networks --arg description 'End-user and service devices' --argjson items '[
  "network-object host 192.168.0.100"
]' --argjson sets '{
  "network-object": 3
}' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          sets: $sets,
          group: $group
        }'
+ target_object='{
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
+ export target_object
+ [[ true == true ]]
+ message '[process_configs] JSON Object (output):'
+ [[ -n [process_configs] JSON Object (output): ]]
+ local 'message=[process_configs] JSON Object (output):'
+ echo -e '[process_configs] JSON Object (output):'
[process_configs] JSON Object (output):
+ print '{
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
+ [[ -n {
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
} ]]
+ echo -en '{
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
+ jq .
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
{
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n {
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
} ]]
+ [[ true == true ]]
+ message '|-----> Target Objects: {
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
+ [[ -n |-----> Target Objects: {
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
} ]]
+ local 'message=|-----> Target Objects: {
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
+ echo -e '|-----> Target Objects: {
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
|-----> Target Objects: {
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}
+ [[ -n {
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
} ]]
++ printf '%s\n' '{
  "object": "object-group",
  "type": "network Floor-Networks",
  "partner": "Floor-Networks",
  "description": "End-user and service devices",
  "items": [
    "network-object host 192.168.0.100"
  ],
  "sets": {
    "network-object": 3
  },
  "group": "Unclassified"
}'
++ jq --slurp --arg site .cache/resources/cisco --arg device campus-sw-access01.cfg '{
              site: ( $site | gsub( "^.*/"; "" ) ),
              device: $device,
              objects: .
            }'
+ wrapped_block='{
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ true == true ]]
+ message '|-----> Config Objects:\n{
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n |-----> Config Objects:\n{
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ local 'message=|-----> Config Objects:\n{
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ echo -e '|-----> Config Objects:\n{
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
|-----> Config Objects:
{
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}
+ print '{
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n {
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ echo -en '{
  "site": "cisco",
  "device": "campus-sw-access01.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Floor-Networks",
      "partner": "Floor-Networks",
      "description": "End-user and service devices",
      "items": [
        "network-object host 192.168.0.100"
      ],
      "sets": {
        "network-object": 3
      },
      "group": "Unclassified"
    }
  ]
}'
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/extract-configs.log
+ mkdir -p /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100
+ export json_outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json
+ json_outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json
+ [[ true == true ]]
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json ]]
+ jq --raw-output --slurp --arg ipref targets/192.168.0.100.json '
                          sort_by( .site, .device ) |
                          group_by( .site + "/" + .device )[] as $group |
                          "- " + ( $group[0].site + "/" + $group[0].device ) + 
                          " ( " + ( $group | length | tostring ) + " fragments ) -> " + $ipref,
                          (
                            $group[].objects[]? |
                            "  • object: " + ( .object // "unknown" ) + 
                            " ( type: " + ( .type // "n/a" ) + " )"
                          )
                          ' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json ]]
+ jq --slurp --arg target 192.168.0.100 '{ target: $target, configs: . }' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/fragments.json
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json ]]
+ case "${target_file}" in
+ jq . /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ mktemp
+ tmp_merged=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.icygVsCS6E
+ local final_outfile=reports/192.168.0.100/192.168.0.100.json
++ dirname reports/192.168.0.100/192.168.0.100.json
+ mkdir -p reports/192.168.0.100
+ local 'jq_merge_expr={
        target: .[0].target,
        configs:
          ( reduce .[].configs[] as $cfg (
            [];
            if any( .[]; .site == $cfg.site and .device == $cfg.device )
              then map(
                if .site == $cfg.site and .device == $cfg.device
                  then .objects = (
                    ( .objects + $cfg.objects )
                    | unique_by( .type, .name, .object, ( .sets | tostring ) )
                  )
                else . end
              )
            else . + [ $cfg ] end
          ))
      }'
+ [[ -f reports/192.168.0.100/192.168.0.100.json ]]
+ jq --slurp '{
        target: .[0].target,
        configs:
          ( reduce .[].configs[] as $cfg (
            [];
            if any( .[]; .site == $cfg.site and .device == $cfg.device )
              then map(
                if .site == $cfg.site and .device == $cfg.device
                  then .objects = (
                    ( .objects + $cfg.objects )
                    | unique_by( .type, .name, .object, ( .sets | tostring ) )
                  )
                else . end
              )
            else . + [ $cfg ] end
          ))
      }' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json
+ mv /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.icygVsCS6E reports/192.168.0.100/192.168.0.100.json
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/192.168.0.100/192.168.0.100--MTc0ODU5MjQ2.json
+ [[ true == true ]]
+ print 'Merged [ targets/192.168.0.100.json ] → reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Merged [ targets/192.168.0.100.json ] → reports/192.168.0.100/192.168.0.100.json ]]
+ echo -en 'Merged [ targets/192.168.0.100.json ] → reports/192.168.0.100/192.168.0.100.json'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/parse-configs.log
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/parse-configs.log ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/parse-configs.log
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/parse-configs.log ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv/parse-configs.log
+ return 0
+ unset verbose debug
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CxVaCkO0Sv
