+ set -euo pipefail
+ set -x
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias print-line=print
++ alias print-message=message
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias pause=pause
++ alias display-help=display_help
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODU5MTg5MTA5NTEzMjAwMAo
++ divisor=MTc0ODU5MTg5MTA5NTEzMjAwMAo
+ source ./scripts/tools-configs.shell
++ [[ -n '' ]]
++ readonly __TOOLS_EXTRACTION_SOURCED=1
++ __TOOLS_EXTRACTION_SOURCED=1
++ alias extract-configs=extract_configs
++ alias process-configs=process_configs
+ alias parse-configs=main
+ [[ -z '' ]]
+ script_name=./scripts/parse-configs.shell
+ script_filename=parse-configs.shell
+ script_filename=parse-configs
+ parse_configs__logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/parse-configs.log
+ :
+ [[ 9 -eq 0 ]]
+ [[ --configs=.cache/resources =~ ^-*(h|help)$ ]]
+ main --configs=.cache/resources --ip-addr=198.51.100.75 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf --classify --verbose --debug
+ file_extensions=()
+ declare -a file_extensions
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=.cache/resources
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ export configs_dirpath=.cache/resources
+ configs_dirpath=.cache/resources
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(logs|o)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=198.51.100.75
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(file-ext|x)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=198.51.100.75
+ [[ ip-addr =~ ^(logs|o)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --index=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ index =~ ^(classify|g)$ ]]
+ [[ index =~ ^(configs|c)$ ]]
+ [[ index =~ ^(file-ext|x)$ ]]
+ [[ index =~ ^(index|n)$ ]]
+ local target_index=1
+ [[ index =~ ^(ip-addr|i)$ ]]
+ [[ index =~ ^(logs|o)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index == \h\e\l\p ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(file-ext|x)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(logs|o)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix == \h\e\l\p ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --reports=reports
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ reports =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(file-ext|x)$ ]]
+ [[ reports =~ ^(index|n)$ ]]
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ [[ reports =~ ^(logs|o)$ ]]
+ [[ reports =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(reports|r)$ ]]
+ local reports_folder=reports
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports == \h\e\l\p ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --file-ext=cfg,conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ file-ext =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(configs|c)$ ]]
+ [[ file-ext =~ ^(file-ext|x)$ ]]
+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
++ print cfg,conf
++ [[ -n cfg,conf ]]
++ echo -en cfg,conf
++ tr ':,;\n ' '\n'
+ [[ file-ext =~ ^(index|n)$ ]]
+ [[ file-ext =~ ^(ip-addr|i)$ ]]
+ [[ file-ext =~ ^(logs|o)$ ]]
+ [[ file-ext =~ ^(matrix|m)$ ]]
+ [[ file-ext =~ ^(reports|r)$ ]]
+ [[ file-ext =~ ^(validate|v)$ ]]
+ [[ file-ext == \h\e\l\p ]]
+ [[ file-ext == \d\e\b\u\g ]]
+ [[ file-ext == \d\r\y\-\r\u\n ]]
+ [[ file-ext == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(index|n)$ ]]
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export verbose=true
+ verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(index|n)$ ]]
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ export debug=true
+ debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
+ [[ -z true ]]
+ [[ -z x ]]
+ [[ 2 -eq 0 ]]
+ export configs_dirpath=.cache/resources
+ configs_dirpath=.cache/resources
+ source_configs=()
+ declare -ga source_configs
+ local target_configlist_json=targets/198.51.100.75.json
+ [[ ! -f targets/198.51.100.75.json ]]
+ mapfile -t source_configs
++ jq -r '.configs[] | "\( .config.site )/\( .config.device )"' targets/198.51.100.75.json
+ for i in "${!source_configs[@]}"
+ [[ misc/fw1.cfg != \.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/* ]]
+ source_configs[$i]=.cache/resources/misc/fw1.cfg
+ [[ true == true ]]
+ local matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ [[ -z 1 ]]
+ [[ -z false ]]
+ [[ -z 198.51.100.75 ]]
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ sed -E 's/[[:space:]]+//g'
++ tr -d '\r'
+ target_address=198.51.100.75
+ [[ false == true ]]
+ export tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/fragments.json
+ tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/fragments.json
+ local extract_configs__logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/extract-configs.log
+ :
+ for cfg_file in "${source_configs[@]}"
+ extract_configs .cache/resources/misc/fw1.cfg 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/fragments.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/extract-configs.log
+ local config_file=.cache/resources/misc/fw1.cfg
+ local target_pattern=198.51.100.75
+ local target_listing=targets/198.51.100.75.json
+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/fragments.json
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/extract-configs.log
+ [[ ! -f .cache/resources/misc/fw1.cfg ]]
+ message '[DEBUG] Checking if config file exists and is readable: .cache/resources/misc/fw1.cfg'
+ [[ -n [DEBUG] Checking if config file exists and is readable: .cache/resources/misc/fw1.cfg ]]
+ local 'message=[DEBUG] Checking if config file exists and is readable: .cache/resources/misc/fw1.cfg'
+ echo -e '[DEBUG] Checking if config file exists and is readable: .cache/resources/misc/fw1.cfg'
[DEBUG] Checking if config file exists and is readable: .cache/resources/misc/fw1.cfg
+ [[ ! -s .cache/resources/misc/fw1.cfg ]]
++ stat -f %m .cache/resources/misc/fw1.cfg
+ message '[OK] File '\''.cache/resources/misc/fw1.cfg'\'' is readable and size is 1748591880 bytes'
+ [[ -n [OK] File '.cache/resources/misc/fw1.cfg' is readable and size is 1748591880 bytes ]]
+ local 'message=[OK] File '\''.cache/resources/misc/fw1.cfg'\'' is readable and size is 1748591880 bytes'
+ echo -e '[OK] File '\''.cache/resources/misc/fw1.cfg'\'' is readable and size is 1748591880 bytes'
[OK] File '.cache/resources/misc/fw1.cfg' is readable and size is 1748591880 bytes
+ local 'imported_content={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ true == true ]]
+ message 'Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -n Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local 'message=Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ echo -e 'Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
Imported Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge
++ sed '/^\s*$/d;/^\s*!.*$/d'
+ local 'sanitized_content={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ true == true ]]
+ message 'Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -n Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local 'message=Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ echo -e 'Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
Sanitized Content: {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge
++ perl -pe 's/\n/MTc0ODU5MTg5MTA5NTEzMjAwMAo/g'
+ local 'serialized_objects={MTc0ODU5MTg5MTA5NTEzMjAwMAo  "vendor": "cisco",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "model": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "version": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "domain": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "hostname": ""MTc0ODU5MTg5MTA5NTEzMjAwMAo}MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Metropolis-InternalMTc0ODU5MTg5MTA5NTEzMjAwMAo description Core internal LAN for application clustersMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object 192.168.2.0 255.255.255.0MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.2.12MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Fortress-WirelessMTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure wireless access layerMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 172.18.1.20MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.1.10MTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Kent-ServerMTc0ODU5MTg5MTA5NTEzMjAwMAo host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo description Internal mail & identity servicesMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Krypton-GatewayMTc0ODU5MTg5MTA5NTEzMjAwMAo host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure NAT boundary for cloud accessMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo'
+ [[ true == true ]]
+ message 'Serialized Objects: {MTc0ODU5MTg5MTA5NTEzMjAwMAo  "vendor": "cisco",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "model": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "version": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "domain": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "hostname": ""MTc0ODU5MTg5MTA5NTEzMjAwMAo}MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Metropolis-InternalMTc0ODU5MTg5MTA5NTEzMjAwMAo description Core internal LAN for application clustersMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object 192.168.2.0 255.255.255.0MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.2.12MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Fortress-WirelessMTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure wireless access layerMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 172.18.1.20MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.1.10MTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Kent-ServerMTc0ODU5MTg5MTA5NTEzMjAwMAo host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo description Internal mail & identity servicesMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Krypton-GatewayMTc0ODU5MTg5MTA5NTEzMjAwMAo host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure NAT boundary for cloud accessMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo'
+ [[ -n Serialized Objects: {MTc0ODU5MTg5MTA5NTEzMjAwMAo  "vendor": "cisco",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "model": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "version": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "domain": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "hostname": ""MTc0ODU5MTg5MTA5NTEzMjAwMAo}MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Metropolis-InternalMTc0ODU5MTg5MTA5NTEzMjAwMAo description Core internal LAN for application clustersMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object 192.168.2.0 255.255.255.0MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.2.12MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Fortress-WirelessMTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure wireless access layerMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 172.18.1.20MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.1.10MTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Kent-ServerMTc0ODU5MTg5MTA5NTEzMjAwMAo host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo description Internal mail & identity servicesMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Krypton-GatewayMTc0ODU5MTg5MTA5NTEzMjAwMAo host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure NAT boundary for cloud accessMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo ]]
+ local 'message=Serialized Objects: {MTc0ODU5MTg5MTA5NTEzMjAwMAo  "vendor": "cisco",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "model": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "version": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "domain": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "hostname": ""MTc0ODU5MTg5MTA5NTEzMjAwMAo}MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Metropolis-InternalMTc0ODU5MTg5MTA5NTEzMjAwMAo description Core internal LAN for application clustersMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object 192.168.2.0 255.255.255.0MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.2.12MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Fortress-WirelessMTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure wireless access layerMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 172.18.1.20MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.1.10MTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Kent-ServerMTc0ODU5MTg5MTA5NTEzMjAwMAo host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo description Internal mail & identity servicesMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Krypton-GatewayMTc0ODU5MTg5MTA5NTEzMjAwMAo host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure NAT boundary for cloud accessMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo'
+ echo -e 'Serialized Objects: {MTc0ODU5MTg5MTA5NTEzMjAwMAo  "vendor": "cisco",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "model": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "version": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "domain": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "hostname": ""MTc0ODU5MTg5MTA5NTEzMjAwMAo}MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Metropolis-InternalMTc0ODU5MTg5MTA5NTEzMjAwMAo description Core internal LAN for application clustersMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object 192.168.2.0 255.255.255.0MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.2.12MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Fortress-WirelessMTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure wireless access layerMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 172.18.1.20MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.1.10MTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Kent-ServerMTc0ODU5MTg5MTA5NTEzMjAwMAo host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo description Internal mail & identity servicesMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Krypton-GatewayMTc0ODU5MTg5MTA5NTEzMjAwMAo host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure NAT boundary for cloud accessMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo'
Serialized Objects: {MTc0ODU5MTg5MTA5NTEzMjAwMAo  "vendor": "cisco",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "model": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "version": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "domain": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "hostname": ""MTc0ODU5MTg5MTA5NTEzMjAwMAo}MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Metropolis-InternalMTc0ODU5MTg5MTA5NTEzMjAwMAo description Core internal LAN for application clustersMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object 192.168.2.0 255.255.255.0MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.2.12MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAoobject-group network Fortress-WirelessMTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure wireless access layerMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 172.18.1.20MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.1.10MTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Kent-ServerMTc0ODU5MTg5MTA5NTEzMjAwMAo host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo description Internal mail & identity servicesMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network Krypton-GatewayMTc0ODU5MTg5MTA5NTEzMjAwMAo host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure NAT boundary for cloud accessMTc0ODU5MTg5MTA5NTEzMjAwMAoobject network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo
++ sed -E 's/MTc0ODU5MTg5MTA5NTEzMjAwMAo([^[:space:]])/\n\1/g'
+ local 'restored_lines={MTc0ODU5MTg5MTA5NTEzMjAwMAo  "vendor": "cisco",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "model": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "version": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "domain": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "hostname": ""
}
object-group network Metropolis-InternalMTc0ODU5MTg5MTA5NTEzMjAwMAo description Core internal LAN for application clustersMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object 192.168.2.0 255.255.255.0MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.2.12
object-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25
object-group network Fortress-WirelessMTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure wireless access layerMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 172.18.1.20MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.1.10
object network Kent-ServerMTc0ODU5MTg5MTA5NTEzMjAwMAo host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo description Internal mail & identity services
object network Krypton-GatewayMTc0ODU5MTg5MTA5NTEzMjAwMAo host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure NAT boundary for cloud access
object network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo'
+ restored_lines+='
'
+ IFS='
'
+ read -r -d '' -a config_objects
++ printf '%s\0' '{MTc0ODU5MTg5MTA5NTEzMjAwMAo  "vendor": "cisco",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "model": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "version": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "domain": "",MTc0ODU5MTg5MTA5NTEzMjAwMAo  "hostname": ""
}
object-group network Metropolis-InternalMTc0ODU5MTg5MTA5NTEzMjAwMAo description Core internal LAN for application clustersMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object 192.168.2.0 255.255.255.0MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.2.12
object-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25
object-group network Fortress-WirelessMTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure wireless access layerMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 172.18.1.20MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 192.168.1.10
object network Kent-ServerMTc0ODU5MTg5MTA5NTEzMjAwMAo host 10.0.2.3MTc0ODU5MTg5MTA5NTEzMjAwMAo description Internal mail & identity services
object network Krypton-GatewayMTc0ODU5MTg5MTA5NTEzMjAwMAo host 203.0.113.25MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secure NAT boundary for cloud access
object network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo
'
+ [[ true == true ]]
+ message 'Loaded 8 config blocks'
+ [[ -n Loaded 8 config blocks ]]
+ local 'message=Loaded 8 config blocks'
+ echo -e 'Loaded 8 config blocks'
Loaded 8 config blocks
+ oIFS=' 	
'
+ IFS='
'
+ matched_objects=()
+ declare -a matched_objects
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ matched_objects+=("${block}")
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ for block in "${config_objects[@]}"
+ grep -qE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ matched_objects+=("${block}")
+ IFS=' 	
'
+ [[ true == true ]]
+ message 'Loaded 2 config blocks'
+ [[ -n Loaded 2 config blocks ]]
+ local 'message=Loaded 2 config blocks'
+ echo -e 'Loaded 2 config blocks'
Loaded 2 config blocks
+ local process_configs__logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/process_configs.logs
+ :
+ for serialized_line in "${matched_objects[@]}"
+ [[ true == true ]]
+ message 'Serialized Line: object-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25'
+ [[ -n Serialized Line: object-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25 ]]
+ local 'message=Serialized Line: object-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25'
+ echo -e 'Serialized Line: object-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25'
Serialized Line: object-group network Krypton-CloudMTc0ODU5MTg5MTA5NTEzMjAwMAo description Cloud-facing external nodesMTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo network-object host 203.0.113.25
++ perl -pe 's/MTc0ODU5MTg5MTA5NTEzMjAwMAo/\n/g'
+ restored_block='object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ local cfg_path=.cache/resources/misc/fw1.cfg
+ local rel_path=misc/fw1.cfg
+ local site=misc
+ local device_filename=fw1.cfg
+ local extension=cfg
+ local objects_dir=reports/198.51.100.75/misc
+ local objects_file=reports/198.51.100.75/misc/fw1.cfg
+ [[ -s reports/198.51.100.75/misc/fw1.cfg ]]
+ mkdir -p reports/198.51.100.75/misc
+ message 'object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ [[ -n object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25 ]]
+ local 'message=object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ echo -e 'object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ message '!'
+ [[ -n ! ]]
+ local 'message=!'
+ echo -e '!'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Restored Configuration:\nobject-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ [[ -n Restored Configuration:\nobject-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25 ]]
+ local 'message=Restored Configuration:\nobject-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ echo -e 'Restored Configuration:\nobject-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
Restored Configuration:
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ process_configs 198.51.100.75 .cache/resources/misc/fw1.cfg 'object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/process_configs.logs
+ local target_pattern=198.51.100.75
+ local config_path=.cache/resources/misc/fw1.cfg
+ local 'restored_block=object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/process_configs.logs
+ local cleaned_block
++ sed '/^[[:space:]]*$/d'
+ cleaned_block='object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ [[ -z object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25 ]]
+ [[ true == true ]]
+ message '[process_configs] Raw Block:\nobject-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ [[ -n [process_configs] Raw Block:\nobject-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25 ]]
+ local 'message=[process_configs] Raw Block:\nobject-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
+ echo -e '[process_configs] Raw Block:\nobject-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25'
[process_configs] Raw Block:
object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ local object_line
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ object_line='object-group network Krypton-Cloud'
+ [[ -z object-group network Krypton-Cloud ]]
+ local object_keyword type_value
++ awk '{print $1}'
+ object_keyword=object-group
++ wc -l
+ ((         4 > 1  ))
++ sed -E 's/^[^[:space:]]+[[:space:]]+//'
+ type_value='network Krypton-Cloud'
+ [[ -z network Krypton-Cloud ]]
+ [[ true == true ]]
+ print '[process_configs] object   : object-group'
+ [[ -n [process_configs] object   : object-group ]]
+ echo -en '[process_configs] object   : object-group'
[process_configs] object   : object-group+ print '[process_configs] type     : network Krypton-Cloud'
+ [[ -n [process_configs] type     : network Krypton-Cloud ]]
+ echo -en '[process_configs] type     : network Krypton-Cloud'
[process_configs] type     : network Krypton-Cloud+ data_sets=()
+ local -a data_sets
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object-group network Krypton-Cloud'
+ [[ -z object-group network Krypton-Cloud ]]
+ [[ object-group network krypton-cloud =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Cloud-facing external nodes'
+ [[ -z description Cloud-facing external nodes ]]
+ [[ description cloud-facing external nodes =~ ^description[[:space:]] ]]
+ continue
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 198.51.100.75'
+ [[ -z network-object host 198.51.100.75 ]]
+ [[ network-object host 198.51.100.75 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 203.0.113.25'
+ [[ -z network-object host 203.0.113.25 ]]
+ [[ network-object host 203.0.113.25 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
+ ((  3 > 1  ))
+ data_sets=("${data_sets[@]:1}")
+ [[ true == true ]]
+ message '[process_configs] Object Sets:'
+ [[ -n [process_configs] Object Sets: ]]
+ local 'message=[process_configs] Object Sets:'
+ echo -e '[process_configs] Object Sets:'
[process_configs] Object Sets:
+ for e in "${data_sets[@]}"
+ print '  - network-object host 198.51.100.75'
+ [[ -n   - network-object host 198.51.100.75 ]]
+ echo -en '  - network-object host 198.51.100.75'
  - network-object host 198.51.100.75+ for e in "${data_sets[@]}"
+ print '  - network-object host 203.0.113.25'
+ [[ -n   - network-object host 203.0.113.25 ]]
+ echo -en '  - network-object host 203.0.113.25'
  - network-object host 203.0.113.25++ grep -E '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'matched_line=network-object host 198.51.100.75'
+ [[ -z network-object host 198.51.100.75 ]]
+ [[ true == true ]]
+ message '[process_configs] Matched: network-object host 198.51.100.75'
+ [[ -n [process_configs] Matched: network-object host 198.51.100.75 ]]
+ local 'message=[process_configs] Matched: network-object host 198.51.100.75'
+ echo -e '[process_configs] Matched: network-object host 198.51.100.75'
[process_configs] Matched: network-object host 198.51.100.75
+ matched_items=()
+ local -a matched_items
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ matched_items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ IFS=
+ read -r line
++ printf '%s\n' 'network-object host 198.51.100.75'
++ jq -R .
++ jq --slurp .
+ local 'matched_items_json=[
  "network-object host 198.51.100.75"
]'
++ grep -i '^[[:space:]]*description'
++ head -n 1
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I; s/^[[:space:]]*//; s/[[:space:]]*$//'
+ local 'description_value=Cloud-facing external nodes'
+ [[ -z Cloud-facing external nodes ]]
+ [[ Cloud-facing external nodes =~ 
 ]]
+ [[ true == true ]]
+ message '[process_configs] Description: Cloud-facing external nodes'
+ [[ -n [process_configs] Description: Cloud-facing external nodes ]]
+ local 'message=[process_configs] Description: Cloud-facing external nodes'
+ echo -e '[process_configs] Description: Cloud-facing external nodes'
[process_configs] Description: Cloud-facing external nodes
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=Krypton-Cloud
++ jq -r --arg key Krypton-Cloud 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Cloud-facing external nodes' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
+ [[ true == true ]]
+ message '[process_configs] Group: Unclassified'
+ [[ -n [process_configs] Group: Unclassified ]]
+ local 'message=[process_configs] Group: Unclassified'
+ echo -e '[process_configs] Group: Unclassified'
[process_configs] Group: Unclassified
++ printf '%s\n' 'network-object host 198.51.100.75' 'network-object host 203.0.113.25'
++ jq -R .
++ jq --slurp .
+ local 'items_2json=[
  "network-object host 198.51.100.75",
  "network-object host 203.0.113.25"
]'
+ declare -A sets_map
+ for line in "${data_sets[@]}"
+ [[ -n network-object host 198.51.100.75 ]]
++ awk '{print $1}'
+ key=network-object
+ [[ -n network-object ]]
+ [[ -z '' ]]
+ sets_map["$key"]=1
+ for line in "${data_sets[@]}"
+ [[ -n network-object host 203.0.113.25 ]]
++ awk '{print $1}'
+ key=network-object
+ [[ -n network-object ]]
+ [[ -z x ]]
+ ((  sets_map[network-object]++  ))
++ for k in "${!sets_map[@]}"
++ printf '{ "key": "%s", "val": %d }\n' network-object 2
++ jq --slurp 'map({(.key): .val}) | add'
+ local 'sets_json={
  "network-object": 2
}'
+ partner_value=
+ case "${object_keyword}" in
+ [[ network Krypton-Cloud == network* ]]
+ extracted_name=Krypton-Cloud
+ [[ Krypton-Cloud =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]
+ partner_value=Krypton-Cloud
++ jq -n --arg object object-group --arg type 'network Krypton-Cloud' --arg partner Krypton-Cloud --arg description 'Cloud-facing external nodes' --argjson items '[
  "network-object host 198.51.100.75"
]' --argjson sets '{
  "network-object": 2
}' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          sets: $sets,
          group: $group
        }'
+ target_object='{
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}'
+ export target_object
+ [[ true == true ]]
+ message '[process_configs] JSON Object (output):'
+ [[ -n [process_configs] JSON Object (output): ]]
+ local 'message=[process_configs] JSON Object (output):'
+ echo -e '[process_configs] JSON Object (output):'
[process_configs] JSON Object (output):
+ print '{
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}'
+ jq .
+ [[ -n {
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
} ]]
+ echo -en '{
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}'
{
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n {
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
} ]]
+ [[ true == true ]]
+ message '|-----> Target Objects: {
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}'
+ [[ -n |-----> Target Objects: {
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
} ]]
+ local 'message=|-----> Target Objects: {
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}'
+ echo -e '|-----> Target Objects: {
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}'
|-----> Target Objects: {
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}
+ [[ -n {
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
} ]]
++ printf '%s\n' '{
  "object": "object-group",
  "type": "network Krypton-Cloud",
  "partner": "Krypton-Cloud",
  "description": "Cloud-facing external nodes",
  "items": [
    "network-object host 198.51.100.75"
  ],
  "sets": {
    "network-object": 2
  },
  "group": "Unclassified"
}'
++ jq --slurp --arg site .cache/resources/misc --arg device fw1.cfg '{
              site: ( $site | gsub( "^.*/"; "" ) ),
              device: $device,
              objects: .
            }'
+ wrapped_block='{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ true == true ]]
+ message '|-----> Config Objects:\n{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n |-----> Config Objects:\n{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ local 'message=|-----> Config Objects:\n{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
}'
+ echo -e '|-----> Config Objects:\n{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
}'
|-----> Config Objects:
{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
}
+ print '{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n {
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ echo -en '{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object-group",
      "type": "network Krypton-Cloud",
      "partner": "Krypton-Cloud",
      "description": "Cloud-facing external nodes",
      "items": [
        "network-object host 198.51.100.75"
      ],
      "sets": {
        "network-object": 2
      },
      "group": "Unclassified"
    }
  ]
}'
+ for serialized_line in "${matched_objects[@]}"
+ [[ true == true ]]
+ message 'Serialized Line: object network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo'
+ [[ -n Serialized Line: object network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo ]]
+ local 'message=Serialized Line: object network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo'
+ echo -e 'Serialized Line: object network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo'
Serialized Line: object network External-FailoverMTc0ODU5MTg5MTA5NTEzMjAwMAo host 198.51.100.75MTc0ODU5MTg5MTA5NTEzMjAwMAo description Secondary outbound route for edgeMTc0ODU5MTg5MTA5NTEzMjAwMAo
++ perl -pe 's/MTc0ODU5MTg5MTA5NTEzMjAwMAo/\n/g'
+ restored_block='object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ local cfg_path=.cache/resources/misc/fw1.cfg
+ local rel_path=misc/fw1.cfg
+ local site=misc
+ local device_filename=fw1.cfg
+ local extension=cfg
+ local objects_dir=reports/198.51.100.75/misc
+ local objects_file=reports/198.51.100.75/misc/fw1.cfg
+ [[ -s reports/198.51.100.75/misc/fw1.cfg ]]
++ echo 'object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
++ tr '\n' '\r'
+ local 'restored_flat=object network External-Failover host 198.51.100.75 description Secondary outbound route for edge'
++ tr '\n' '\r'
+ local 'objects_flat=object-group network Krypton-Cloud description Cloud-facing external nodes network-object host 198.51.100.75 network-object host 203.0.113.25!'
+ grep -Fq -- 'object network External-Failover host 198.51.100.75 description Secondary outbound route for edge'
+ mkdir -p reports/198.51.100.75/misc
+ message 'object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -n object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local 'message=object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ echo -e 'object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ message '!'
+ [[ -n ! ]]
+ local 'message=!'
+ echo -e '!'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Restored Configuration:\nobject network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -n Restored Configuration:\nobject network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local 'message=Restored Configuration:\nobject network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ echo -e 'Restored Configuration:\nobject network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
Restored Configuration:
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge
+ process_configs 198.51.100.75 .cache/resources/misc/fw1.cfg 'object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/process_configs.logs
+ local target_pattern=198.51.100.75
+ local config_path=.cache/resources/misc/fw1.cfg
+ local 'restored_block=object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/process_configs.logs
+ local cleaned_block
++ sed '/^[[:space:]]*$/d'
+ cleaned_block='object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -z object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ [[ true == true ]]
+ message '[process_configs] Raw Block:\nobject network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ -n [process_configs] Raw Block:\nobject network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local 'message=[process_configs] Raw Block:\nobject network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ echo -e '[process_configs] Raw Block:\nobject network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
[process_configs] Raw Block:
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge
+ local object_line
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ object_line='object network External-Failover'
+ [[ -z object network External-Failover ]]
+ local object_keyword type_value
++ awk '{print $1}'
+ object_keyword=object
++ wc -l
+ ((         3 > 1  ))
++ sed -E 's/^[^[:space:]]+[[:space:]]+//'
+ type_value='network External-Failover'
+ [[ -z network External-Failover ]]
+ [[ true == true ]]
+ print '[process_configs] object   : object'
+ [[ -n [process_configs] object   : object ]]
+ echo -en '[process_configs] object   : object'
[process_configs] object   : object+ print '[process_configs] type     : network External-Failover'
+ [[ -n [process_configs] type     : network External-Failover ]]
+ echo -en '[process_configs] type     : network External-Failover'
[process_configs] type     : network External-Failover+ data_sets=()
+ local -a data_sets
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object network External-Failover'
+ [[ -z object network External-Failover ]]
+ [[ object network external-failover =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=host 198.51.100.75'
+ [[ -z host 198.51.100.75 ]]
+ [[ host 198.51.100.75 =~ ^description[[:space:]] ]]
+ data_sets+=("${trimmed}")
+ IFS=
+ read -r line
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Secondary outbound route for edge'
+ [[ -z description Secondary outbound route for edge ]]
+ [[ description secondary outbound route for edge =~ ^description[[:space:]] ]]
+ continue
+ IFS=
+ read -r line
+ ((  2 > 1  ))
+ data_sets=("${data_sets[@]:1}")
+ [[ true == true ]]
+ message '[process_configs] Object Sets:'
+ [[ -n [process_configs] Object Sets: ]]
+ local 'message=[process_configs] Object Sets:'
+ echo -e '[process_configs] Object Sets:'
[process_configs] Object Sets:
+ for e in "${data_sets[@]}"
+ print '  - host 198.51.100.75'
+ [[ -n   - host 198.51.100.75 ]]
+ echo -en '  - host 198.51.100.75'
  - host 198.51.100.75++ grep -E '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
++ head -n 1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'matched_line=host 198.51.100.75'
+ [[ -z host 198.51.100.75 ]]
+ [[ true == true ]]
+ message '[process_configs] Matched: host 198.51.100.75'
+ [[ -n [process_configs] Matched: host 198.51.100.75 ]]
+ local 'message=[process_configs] Matched: host 198.51.100.75'
+ echo -e '[process_configs] Matched: host 198.51.100.75'
[process_configs] Matched: host 198.51.100.75
+ matched_items=()
+ local -a matched_items
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ matched_items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ IFS=
+ read -r line
+ grep -Eq '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)'
+ IFS=
+ read -r line
++ printf '%s\n' 'host 198.51.100.75'
++ jq -R .
++ jq --slurp .
+ local 'matched_items_json=[
  "host 198.51.100.75"
]'
++ grep -i '^[[:space:]]*description'
++ head -n 1
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I; s/^[[:space:]]*//; s/[[:space:]]*$//'
+ local 'description_value=Secondary outbound route for edge'
+ [[ -z Secondary outbound route for edge ]]
+ [[ Secondary outbound route for edge =~ 
 ]]
+ [[ true == true ]]
+ message '[process_configs] Description: Secondary outbound route for edge'
+ [[ -n [process_configs] Description: Secondary outbound route for edge ]]
+ local 'message=[process_configs] Description: Secondary outbound route for edge'
+ echo -e '[process_configs] Description: Secondary outbound route for edge'
[process_configs] Description: Secondary outbound route for edge
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=External-Failover
++ jq -r --arg key External-Failover 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Secondary outbound route for edge' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
+ [[ true == true ]]
+ message '[process_configs] Group: Unclassified'
+ [[ -n [process_configs] Group: Unclassified ]]
+ local 'message=[process_configs] Group: Unclassified'
+ echo -e '[process_configs] Group: Unclassified'
[process_configs] Group: Unclassified
++ printf '%s\n' 'host 198.51.100.75'
++ jq -R .
++ jq --slurp .
+ local 'items_2json=[
  "host 198.51.100.75"
]'
+ declare -A sets_map
+ for line in "${data_sets[@]}"
+ [[ -n host 198.51.100.75 ]]
++ awk '{print $1}'
+ key=host
+ [[ -n host ]]
+ [[ -z '' ]]
+ sets_map["$key"]=1
++ for k in "${!sets_map[@]}"
++ printf '{ "key": "%s", "val": %d }\n' host 1
++ jq --slurp 'map({(.key): .val}) | add'
+ local 'sets_json={
  "host": 1
}'
+ partner_value=
+ case "${object_keyword}" in
+ [[ network External-Failover == network* ]]
+ extracted_name=External-Failover
+ [[ External-Failover =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]
+ partner_value=External-Failover
++ jq -n --arg object object --arg type 'network External-Failover' --arg partner External-Failover --arg description 'Secondary outbound route for edge' --argjson items '[
  "host 198.51.100.75"
]' --argjson sets '{
  "host": 1
}' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          sets: $sets,
          group: $group
        }'
+ target_object='{
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}'
+ export target_object
+ [[ true == true ]]
+ message '[process_configs] JSON Object (output):'
+ [[ -n [process_configs] JSON Object (output): ]]
+ local 'message=[process_configs] JSON Object (output):'
+ echo -e '[process_configs] JSON Object (output):'
[process_configs] JSON Object (output):
+ print '{
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}'
+ [[ -n {
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
} ]]
+ echo -en '{
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
+ jq .
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}'
{
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n {
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
} ]]
+ [[ true == true ]]
+ message '|-----> Target Objects: {
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}'
+ [[ -n |-----> Target Objects: {
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
} ]]
+ local 'message=|-----> Target Objects: {
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}'
+ echo -e '|-----> Target Objects: {
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}'
|-----> Target Objects: {
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}
+ [[ -n {
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
} ]]
++ printf '%s\n' '{
  "object": "object",
  "type": "network External-Failover",
  "partner": "External-Failover",
  "description": "Secondary outbound route for edge",
  "items": [
    "host 198.51.100.75"
  ],
  "sets": {
    "host": 1
  },
  "group": "Unclassified"
}'
++ jq --slurp --arg site .cache/resources/misc --arg device fw1.cfg '{
              site: ( $site | gsub( "^.*/"; "" ) ),
              device: $device,
              objects: .
            }'
+ wrapped_block='{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ true == true ]]
+ message '|-----> Config Objects:\n{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n |-----> Config Objects:\n{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ local 'message=|-----> Config Objects:\n{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ echo -e '|-----> Config Objects:\n{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
}'
|-----> Config Objects:
{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
}
+ print '{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ [[ -n {
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
} ]]
+ echo -en '{
  "site": "misc",
  "device": "fw1.cfg",
  "objects": [
    {
      "object": "object",
      "type": "network External-Failover",
      "partner": "External-Failover",
      "description": "Secondary outbound route for edge",
      "items": [
        "host 198.51.100.75"
      ],
      "sets": {
        "host": 1
      },
      "group": "Unclassified"
    }
  ]
}'
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/extract-configs.log
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/extract-configs.log ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/extract-configs.log
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/extract-configs.log ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/extract-configs.log
+ mkdir -p /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75
+ export json_outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json
+ json_outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json
+ [[ true == true ]]
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/fragments.json ]]
+ jq --raw-output --slurp --arg ipref targets/198.51.100.75.json '
                          sort_by( .site, .device ) |
                          group_by( .site + "/" + .device )[] as $group |
                          "- " + ( $group[0].site + "/" + $group[0].device ) + 
                          " ( " + ( $group | length | tostring ) + " fragments ) -> " + $ipref,
                          (
                            $group[].objects[]? |
                            "  • object: " + ( .object // "unknown" ) + 
                            " ( type: " + ( .type // "n/a" ) + " )"
                          )
                          ' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/fragments.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/fragments.json ]]
+ jq --slurp --arg target 198.51.100.75 '{ target: $target, configs: . }' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/fragments.json
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json ]]
+ case "${target_file}" in
+ jq . /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ mktemp
+ tmp_merged=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jKOOu16FWH
+ local final_outfile=reports/198.51.100.75/198.51.100.75.json
++ dirname reports/198.51.100.75/198.51.100.75.json
+ mkdir -p reports/198.51.100.75
+ local 'jq_merge_expr={
        target: .[0].target,
        configs:
          ( reduce .[].configs[] as $cfg (
            [];
            if any( .[]; .site == $cfg.site and .device == $cfg.device )
              then map(
                if .site == $cfg.site and .device == $cfg.device
                  then .objects = (
                    ( .objects + $cfg.objects )
                    | unique_by( .type, .name, .object, ( .sets | tostring ) )
                  )
                else . end
              )
            else . + [ $cfg ] end
          ))
      }'
+ [[ -f reports/198.51.100.75/198.51.100.75.json ]]
+ jq --slurp '{
        target: .[0].target,
        configs:
          ( reduce .[].configs[] as $cfg (
            [];
            if any( .[]; .site == $cfg.site and .device == $cfg.device )
              then map(
                if .site == $cfg.site and .device == $cfg.device
                  then .objects = (
                    ( .objects + $cfg.objects )
                    | unique_by( .type, .name, .object, ( .sets | tostring ) )
                  )
                else . end
              )
            else . + [ $cfg ] end
          ))
      }' reports/198.51.100.75/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json
+ mv /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jKOOu16FWH reports/198.51.100.75/198.51.100.75.json
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/198.51.100.75/198.51.100.75--MTc0ODU5MTg5.json
+ [[ true == true ]]
+ print 'Merged [ targets/198.51.100.75.json ] → reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Merged [ targets/198.51.100.75.json ] → reports/198.51.100.75/198.51.100.75.json ]]
+ echo -en 'Merged [ targets/198.51.100.75.json ] → reports/198.51.100.75/198.51.100.75.json'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/parse-configs.log
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/parse-configs.log ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/parse-configs.log
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/parse-configs.log ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C/parse-configs.log
+ return 0
+ unset verbose debug
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m6kGPlRy5C
