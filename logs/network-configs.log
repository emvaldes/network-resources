+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47msDFvfdp
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47msDFvfdp
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias display-help=display_help
+ alias new-line=newline
+ alias print-message=message
+ alias print-inline=print
+ alias error-message=warning
+ alias detect-vendor=detect_vendor
+ alias network-configs=main
+ [[ -z '' ]]
+ export script_name=./scripts/network-configs.shell
+ script_name=./scripts/network-configs.shell
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-configs.shell
+ script_filename=network-configs
+ trace_logfile=logs/console/network-configs.console
+ :
+ extract_configs_logfile=logs/console/extract-configs.console
+ touch logs/console/extract-configs.console
+ [[ 5 -eq 0 ]]
+ [[ --search=ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ main --search=ips.list --configs=devices.list --location=configs --extract=.cache/resources --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=ips.list
+ [[ search =~ ^(configs|c)$ ]]
+ [[ search =~ ^(location|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(cache|e)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(search|s)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ local search_configs=devices.list
+ [[ configs =~ ^(location|l)$ ]]
+ [[ configs =~ ^(extract|x)$ ]]
+ [[ configs =~ ^(cache|e)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --location=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ location =~ ^(search|s)$ ]]
+ [[ location =~ ^(configs|c)$ ]]
+ [[ location =~ ^(location|l)$ ]]
+ local search_location=configs
+ [[ location =~ ^(extract|x)$ ]]
+ [[ location =~ ^(cache|e)$ ]]
+ [[ location == \h\e\l\p ]]
+ [[ location == \d\e\b\u\g ]]
+ [[ location == \d\r\y\-\r\u\n ]]
+ [[ location == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(configs|c)$ ]]
+ [[ extract =~ ^(location|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources
+ [[ extract =~ ^(cache|e)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(cache|e)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z ips.list ]]
+ [[ -z devices.list ]]
+ [[ -z configs ]]
+ [[ -z .cache ]]
+ [[ -z .cache/resources ]]
+ [[ -z '' ]]
+ local script_helper=false
+ [[ false == true ]]
+ mkdir -p .cache
+ export active_ips_file=.cache/ips.list
+ active_ips_file=.cache/ips.list
+ export active_configs_file=.cache/configs.list
+ active_configs_file=.cache/configs.list
+ :
+ :
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f ips.list ]]
+ [[ ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local 'prompt_message=Enter configuration file(s) or search path (comma-separated): '
+ [[ -z devices.list ]]
+ local 'prompt_message=Enter base directory to search configuration files: '
+ [[ -z configs ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ ips.list ]'
+ [[ -n Search Pattern: [ ips.list ] ]]
+ local 'message=Search Pattern: [ ips.list ]'
+ echo -e 'Search Pattern: [ ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ message 'Search Terms (17): '
+ [[ -n Search Terms (17):  ]]
+ local 'message=Search Terms (17): '
+ echo -e 'Search Terms (17): '
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count && i < 25 ))
+ message '- 10.0.0.1'
+ [[ -n - 10.0.0.1 ]]
+ local 'message=- 10.0.0.1'
+ echo -e '- 10.0.0.1'
+ cat -n
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 10.0.1.2'
+ [[ -n - 10.0.1.2 ]]
+ local 'message=- 10.0.1.2'
+ echo -e '- 10.0.1.2'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 10.0.2.3'
+ [[ -n - 10.0.2.3 ]]
+ local 'message=- 10.0.2.3'
+ echo -e '- 10.0.2.3'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 192.168.1.10'
+ [[ -n - 192.168.1.10 ]]
+ local 'message=- 192.168.1.10'
+ echo -e '- 192.168.1.10'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 192.168.1.11'
+ [[ -n - 192.168.1.11 ]]
+ local 'message=- 192.168.1.11'
+ echo -e '- 192.168.1.11'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 192.168.2.12'
+ [[ -n - 192.168.2.12 ]]
+ local 'message=- 192.168.2.12'
+ echo -e '- 192.168.2.12'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 172.16.0.5'
+ [[ -n - 172.16.0.5 ]]
+ local 'message=- 172.16.0.5'
+ echo -e '- 172.16.0.5'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 172.16.1.6'
+ [[ -n - 172.16.1.6 ]]
+ local 'message=- 172.16.1.6'
+ echo -e '- 172.16.1.6'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 192.0.2.50'
+ [[ -n - 192.0.2.50 ]]
+ local 'message=- 192.0.2.50'
+ echo -e '- 192.0.2.50'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 203.0.113.25'
+ [[ -n - 203.0.113.25 ]]
+ local 'message=- 203.0.113.25'
+ echo -e '- 203.0.113.25'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 198.51.100.75'
+ [[ -n - 198.51.100.75 ]]
+ local 'message=- 198.51.100.75'
+ echo -e '- 198.51.100.75'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 172.18.1.20'
+ [[ -n - 172.18.1.20 ]]
+ local 'message=- 172.18.1.20'
+ echo -e '- 172.18.1.20'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 10.10.10.10'
+ [[ -n - 10.10.10.10 ]]
+ local 'message=- 10.10.10.10'
+ echo -e '- 10.10.10.10'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 192.168.100.100'
+ [[ -n - 192.168.100.100 ]]
+ local 'message=- 192.168.100.100'
+ echo -e '- 192.168.100.100'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 172.31.255.254'
+ [[ -n - 172.31.255.254 ]]
+ local 'message=- 172.31.255.254'
+ echo -e '- 172.31.255.254'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 192.168.0.1'
+ [[ -n - 192.168.0.1 ]]
+ local 'message=- 192.168.0.1'
+ echo -e '- 192.168.0.1'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '- 192.168.0.100'
+ [[ -n - 192.168.0.100 ]]
+ local 'message=- 192.168.0.100'
+ echo -e '- 192.168.0.100'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ configs_listing=()
+ declare -a configs_listing
+ [[ -n devices.list ]]
+ raw_paths=()
+ declare -a raw_paths
+ [[ -f devices.list ]]
+ [[ devices.list != *,* ]]
+ IFS=
+ read -r line
++ echo access-sw1-west
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=access-sw1-west
+ [[ -z access-sw1-west ]]
+ [[ access-sw1-west =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo branch-isr-02
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=branch-isr-02
+ [[ -z branch-isr-02 ]]
+ [[ branch-isr-02 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo campus-sw-access01
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=campus-sw-access01
+ [[ -z campus-sw-access01 ]]
+ [[ campus-sw-access01 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo dmz-fw2-backup
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=dmz-fw2-backup
+ [[ -z dmz-fw2-backup ]]
+ [[ dmz-fw2-backup =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-branch-vpn-01
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-branch-vpn-01
+ [[ -z fg-branch-vpn-01 ]]
+ [[ fg-branch-vpn-01 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-campus-core
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-campus-core
+ [[ -z fg-campus-core ]]
+ [[ fg-campus-core =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-testing-config
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-testing-config
+ [[ -z fg-testing-config ]]
+ [[ fg-testing-config =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fw1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fw1
+ [[ -z fw1 ]]
+ [[ fw1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fw3
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fw3
+ [[ -z fw3 ]]
+ [[ fw3 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo perimeter-fw1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=perimeter-fw1
+ [[ -z perimeter-fw1 ]]
+ [[ perimeter-fw1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo switch1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=switch1
+ [[ -z switch1 ]]
+ [[ switch1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo switch3
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=switch3
+ [[ -z switch3 ]]
+ [[ switch3 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ [[ 12 -gt 0 ]]
+ mapfile -t configs_listing
++ find configs -type f
++ sed 's|^\./||'
++ sort -u
+++ IFS='|'
+++ echo 'access-sw1-west|branch-isr-02|campus-sw-access01|dmz-fw2-backup|fg-branch-vpn-01|fg-campus-core|fg-testing-config|fw1|fw3|perimeter-fw1|switch1|switch3'
++ egrep 'access-sw1-west|branch-isr-02|campus-sw-access01|dmz-fw2-backup|fg-branch-vpn-01|fg-campus-core|fg-testing-config|fw1|fw3|perimeter-fw1|switch1|switch3'
+ search_configs=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47msDFvfdp/configs.list
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch3.conf
+ matched_ips=()
+ declare -a matched_ips
+ matched_configs=()
+ declare -a matched_configs
+ local matched=
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/access-sw1-west.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/access-sw1-west.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/access-sw1-west.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/access-sw1-west.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-isr-02.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/branch-isr-02.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/campus-sw-access01.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/campus-sw-access01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/campus-sw-access01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/campus-sw-access01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/dmz-fw2-backup.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/dmz-fw2-backup.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/perimeter-fw1.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/perimeter-fw1.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-branch-vpn-01.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/fortinet/fg-branch-vpn-01.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-campus-core.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/fortinet/fg-campus-core.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-testing-config.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-testing-config.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/fortinet/fg-testing-config.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw1.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/misc/fw1.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw3.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/misc/fw3.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch1.conf ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/misc/switch1.conf
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch3.conf ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/switch3.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/misc/switch3.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/misc/switch3.conf
+ readarray -t matched_ips
++ printf '%s\n' 10.10.10.10 192.168.0.1 192.168.0.100 10.0.2.3 192.168.1.11 192.168.2.12 172.16.1.6 198.51.100.75 172.18.1.20 10.10.10.10 192.168.0.1 192.168.0.100 192.0.2.50 203.0.113.25 198.51.100.75 10.10.10.10 192.168.100.100 10.0.0.1 172.16.0.5 192.0.2.50 203.0.113.25 10.0.0.1 10.0.1.2 192.168.1.10 192.168.2.12 203.0.113.25 198.51.100.75 192.168.0.1 192.168.1.11 192.168.2.12 172.16.1.6 10.10.10.10 192.168.100.100 10.10.10.10 10.0.2.3 192.168.1.10 192.168.2.12 203.0.113.25 198.51.100.75 172.18.1.20 10.0.2.3 192.168.1.10 172.16.0.5 203.0.113.25 10.10.10.10 10.0.0.1 10.0.1.2 192.168.1.10 172.31.255.254 10.0.0.1 172.16.1.6
++ grep -v '^\s*$'
++ sort -u
+ readarray -t configs_listing
++ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/access-sw1-west.cfg configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/cisco/perimeter-fw1.cfg configs/cisco/perimeter-fw1.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs++ grep -v '^\s*$'
/fortinet/fg-campus-core.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/fw3.cfg configs/misc/fw3.cfg configs/misc/fw3.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch1.conf configs/misc/switch1.conf configs/misc/switch1.conf configs/misc/switch3.conf configs/misc/switch3.conf
++ sort -u
+ [[ 17 -eq 0 ]]
+ [[ 12 -eq 0 ]]
+ [[ -w /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47msDFvfdp/configs.list ]]
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch3.conf
+ ((  17 > 0  ))
+ printf '%s\n' 10.0.0.1 10.0.1.2 10.0.2.3 10.10.10.10 172.16.0.5 172.16.1.6 172.18.1.20 172.31.255.254 192.0.2.50 192.168.0.1 192.168.0.100 192.168.1.10 192.168.1.11 192.168.100.100 192.168.2.12 198.51.100.75 203.0.113.25
+ search_pattern=.cache/ips.list
+ ((  12 > 0  ))
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch3.conf
+ search_configs=.cache/configs.list
+ [[ true == true ]]
+ message 'Validated IPs exported to:  [ .cache/ips.list ]'
+ [[ -n Validated IPs exported to:  [ .cache/ips.list ] ]]
+ local 'message=Validated IPs exported to:  [ .cache/ips.list ]'
+ echo -e 'Validated IPs exported to:  [ .cache/ips.list ]'
+ message 'Validated Configs saved to: [ .cache/configs.list ]'
+ [[ -n Validated Configs saved to: [ .cache/configs.list ] ]]
+ local 'message=Validated Configs saved to: [ .cache/configs.list ]'
+ echo -e 'Validated Configs saved to: [ .cache/configs.list ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Resolved Configs: [ 12 ]'
+ [[ -n Resolved Configs: [ 12 ] ]]
+ local 'message=Resolved Configs: [ 12 ]'
+ echo -e 'Resolved Configs: [ 12 ]'
+ message 'Listing Configs:  [ .cache/configs.list ]'
+ [[ -n Listing Configs:  [ .cache/configs.list ] ]]
+ local 'message=Listing Configs:  [ .cache/configs.list ]'
+ echo -e 'Listing Configs:  [ .cache/configs.list ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${configs_listing[@]}"
+ message '- configs/cisco/access-sw1-west.cfg'
+ [[ -n - configs/cisco/access-sw1-west.cfg ]]
+ local 'message=- configs/cisco/access-sw1-west.cfg'
+ echo -e '- configs/cisco/access-sw1-west.cfg'
+ cat -n
+ for item in "${configs_listing[@]}"
+ message '- configs/cisco/branch-isr-02.cfg'
+ [[ -n - configs/cisco/branch-isr-02.cfg ]]
+ local 'message=- configs/cisco/branch-isr-02.cfg'
+ echo -e '- configs/cisco/branch-isr-02.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/cisco/campus-sw-access01.cfg'
+ [[ -n - configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=- configs/cisco/campus-sw-access01.cfg'
+ echo -e '- configs/cisco/campus-sw-access01.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n - configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=- configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '- configs/cisco/dmz-fw2-backup.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/cisco/perimeter-fw1.cfg'
+ [[ -n - configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=- configs/cisco/perimeter-fw1.cfg'
+ echo -e '- configs/cisco/perimeter-fw1.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n - configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=- configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '- configs/fortinet/fg-branch-vpn-01.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/fortinet/fg-campus-core.cfg'
+ [[ -n - configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=- configs/fortinet/fg-campus-core.cfg'
+ echo -e '- configs/fortinet/fg-campus-core.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/fortinet/fg-testing-config.cfg'
+ [[ -n - configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=- configs/fortinet/fg-testing-config.cfg'
+ echo -e '- configs/fortinet/fg-testing-config.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/misc/fw1.cfg'
+ [[ -n - configs/misc/fw1.cfg ]]
+ local 'message=- configs/misc/fw1.cfg'
+ echo -e '- configs/misc/fw1.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/misc/fw3.cfg'
+ [[ -n - configs/misc/fw3.cfg ]]
+ local 'message=- configs/misc/fw3.cfg'
+ echo -e '- configs/misc/fw3.cfg'
+ for item in "${configs_listing[@]}"
+ message '- configs/misc/switch1.conf'
+ [[ -n - configs/misc/switch1.conf ]]
+ local 'message=- configs/misc/switch1.conf'
+ echo -e '- configs/misc/switch1.conf'
+ for item in "${configs_listing[@]}"
+ message '- configs/misc/switch3.conf'
+ [[ -n - configs/misc/switch3.conf ]]
+ local 'message=- configs/misc/switch3.conf'
+ echo -e '- configs/misc/switch3.conf'
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/access-sw1-west.cfg ]]
+ set +e
+ detect_vendor configs/cisco/access-sw1-west.cfg
+ local config_file=configs/cisco/access-sw1-west.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/access-sw1-west.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/access-sw1-west.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/access-sw1-west.cfg
+ local target_output=.cache/resources/cisco/access-sw1-west.cfg
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/cisco/access-sw1-west.cfg' '--extract=.cache/resources/cisco/access-sw1-west.cfg' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Output Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/access-sw1-west.cfg'
+ [[ -n \t--config=configs/cisco/access-sw1-west.cfg ]]
+ local 'message=\t--config=configs/cisco/access-sw1-west.cfg'
+ echo -e '\t--config=configs/cisco/access-sw1-west.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/access-sw1-west.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-isr-02.cfg ]]
+ set +e
+ detect_vendor configs/cisco/branch-isr-02.cfg
+ local config_file=configs/cisco/branch-isr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/branch-isr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/branch-isr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/branch-isr-02.cfg
+ local target_output=.cache/resources/cisco/branch-isr-02.cfg
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/cisco/branch-isr-02.cfg' '--extract=.cache/resources/cisco/branch-isr-02.cfg' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Output Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/branch-isr-02.cfg'
+ [[ -n \t--config=configs/cisco/branch-isr-02.cfg ]]
+ local 'message=\t--config=configs/cisco/branch-isr-02.cfg'
+ echo -e '\t--config=configs/cisco/branch-isr-02.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/branch-isr-02.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/campus-sw-access01.cfg ]]
+ set +e
+ detect_vendor configs/cisco/campus-sw-access01.cfg
+ local config_file=configs/cisco/campus-sw-access01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/campus-sw-access01.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/campus-sw-access01.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/campus-sw-access01.cfg
+ local target_output=.cache/resources/cisco/campus-sw-access01.cfg
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/cisco/campus-sw-access01.cfg' '--extract=.cache/resources/cisco/campus-sw-access01.cfg' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Output Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/campus-sw-access01.cfg'
+ [[ -n \t--config=configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=\t--config=configs/cisco/campus-sw-access01.cfg'
+ echo -e '\t--config=configs/cisco/campus-sw-access01.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/campus-sw-access01.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/dmz-fw2-backup.cfg ]]
+ set +e
+ detect_vendor configs/cisco/dmz-fw2-backup.cfg
+ local config_file=configs/cisco/dmz-fw2-backup.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/dmz-fw2-backup.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/dmz-fw2-backup.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/dmz-fw2-backup.cfg
+ local target_output=.cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/cisco/dmz-fw2-backup.cfg' '--extract=.cache/resources/cisco/dmz-fw2-backup.cfg' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Output Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n \t--config=configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/perimeter-fw1.cfg ]]
+ set +e
+ detect_vendor configs/cisco/perimeter-fw1.cfg
+ local config_file=configs/cisco/perimeter-fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/perimeter-fw1.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/perimeter-fw1.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/perimeter-fw1.cfg
+ local target_output=.cache/resources/cisco/perimeter-fw1.cfg
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/cisco/perimeter-fw1.cfg' '--extract=.cache/resources/cisco/perimeter-fw1.cfg' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Output Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/perimeter-fw1.cfg'
+ [[ -n \t--config=configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=\t--config=configs/cisco/perimeter-fw1.cfg'
+ echo -e '\t--config=configs/cisco/perimeter-fw1.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-branch-vpn-01.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-branch-vpn-01.cfg
+ local config_file=configs/fortinet/fg-branch-vpn-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-branch-vpn-01.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=fortinet/fg-branch-vpn-01.cfg
+ local target_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local output_dir=.cache/resources/fortinet
+ mkdir -p .cache/resources/fortinet
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/fortinet/fg-branch-vpn-01.cfg' '--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg' '--platform=fortinet')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Output Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n \t--config=configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n \t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=fortinet'
+ [[ -n \t--platform=fortinet ]]
+ local 'message=\t--platform=fortinet'
+ echo -e '\t--platform=fortinet'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-campus-core.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-campus-core.cfg
+ local config_file=configs/fortinet/fg-campus-core.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-campus-core.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Source Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Source Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Source Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=fortinet/fg-campus-core.cfg
+ local target_output=.cache/resources/fortinet/fg-campus-core.cfg
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ local output_dir=.cache/resources/fortinet
+ mkdir -p .cache/resources/fortinet
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/fortinet/fg-campus-core.cfg' '--extract=.cache/resources/fortinet/fg-campus-core.cfg' '--platform=fortinet')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Output Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/fortinet/fg-campus-core.cfg'
+ [[ -n \t--config=configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=\t--config=configs/fortinet/fg-campus-core.cfg'
+ echo -e '\t--config=configs/fortinet/fg-campus-core.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n \t--extract=.cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=\t--extract=.cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '\t--extract=.cache/resources/fortinet/fg-campus-core.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=fortinet'
+ [[ -n \t--platform=fortinet ]]
+ local 'message=\t--platform=fortinet'
+ echo -e '\t--platform=fortinet'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-testing-config.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-testing-config.cfg
+ local config_file=configs/fortinet/fg-testing-config.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-testing-config.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Source Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Source Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Source Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=fortinet/fg-testing-config.cfg
+ local target_output=.cache/resources/fortinet/fg-testing-config.cfg
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ local output_dir=.cache/resources/fortinet
+ mkdir -p .cache/resources/fortinet
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/fortinet/fg-testing-config.cfg' '--extract=.cache/resources/fortinet/fg-testing-config.cfg' '--platform=fortinet')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Output Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/fortinet/fg-testing-config.cfg'
+ [[ -n \t--config=configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=\t--config=configs/fortinet/fg-testing-config.cfg'
+ echo -e '\t--config=configs/fortinet/fg-testing-config.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n \t--extract=.cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=\t--extract=.cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '\t--extract=.cache/resources/fortinet/fg-testing-config.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=fortinet'
+ [[ -n \t--platform=fortinet ]]
+ local 'message=\t--platform=fortinet'
+ echo -e '\t--platform=fortinet'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw1.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw1.cfg
+ local config_file=configs/misc/fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw1.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw1.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/fw1.cfg
+ local target_output=.cache/resources/misc/fw1.cfg
++ dirname .cache/resources/misc/fw1.cfg
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/misc/fw1.cfg' '--extract=.cache/resources/misc/fw1.cfg' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Output Config: [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/misc/fw1.cfg'
+ [[ -n \t--config=configs/misc/fw1.cfg ]]
+ local 'message=\t--config=configs/misc/fw1.cfg'
+ echo -e '\t--config=configs/misc/fw1.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/misc/fw1.cfg'
+ [[ -n \t--extract=.cache/resources/misc/fw1.cfg ]]
+ local 'message=\t--extract=.cache/resources/misc/fw1.cfg'
+ echo -e '\t--extract=.cache/resources/misc/fw1.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw3.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw3.cfg
+ local config_file=configs/misc/fw3.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw3.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw3.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/fw3.cfg
+ local target_output=.cache/resources/misc/fw3.cfg
++ dirname .cache/resources/misc/fw3.cfg
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/misc/fw3.cfg' '--extract=.cache/resources/misc/fw3.cfg' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Output Config: [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Output Config: [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Output Config: [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/misc/fw3.cfg'
+ [[ -n \t--config=configs/misc/fw3.cfg ]]
+ local 'message=\t--config=configs/misc/fw3.cfg'
+ echo -e '\t--config=configs/misc/fw3.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/misc/fw3.cfg'
+ [[ -n \t--extract=.cache/resources/misc/fw3.cfg ]]
+ local 'message=\t--extract=.cache/resources/misc/fw3.cfg'
+ echo -e '\t--extract=.cache/resources/misc/fw3.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch1.conf ]]
+ set +e
+ detect_vendor configs/misc/switch1.conf
+ local config_file=configs/misc/switch1.conf
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/switch1.conf
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/switch1.conf
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/switch1.conf
+ local target_output=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/misc/switch1.conf' '--extract=.cache/resources/misc/switch1.conf' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Output Config: [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Output Config: [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Output Config: [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/misc/switch1.conf'
+ [[ -n \t--config=configs/misc/switch1.conf ]]
+ local 'message=\t--config=configs/misc/switch1.conf'
+ echo -e '\t--config=configs/misc/switch1.conf'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/misc/switch1.conf'
+ [[ -n \t--extract=.cache/resources/misc/switch1.conf ]]
+ local 'message=\t--extract=.cache/resources/misc/switch1.conf'
+ echo -e '\t--extract=.cache/resources/misc/switch1.conf'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --verbose
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch3.conf ]]
+ set +e
+ detect_vendor configs/misc/switch3.conf
+ local config_file=configs/misc/switch3.conf
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/switch3.conf
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/switch3.conf
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/switch3.conf
+ local target_output=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
+ execute=('./scripts/extract-configs.shell' '--search=.cache/ips.list' '--config=configs/misc/switch3.conf' '--extract=.cache/resources/misc/switch3.conf' '--platform=cisco')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Output Config: [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Output Config: [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Output Config: [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Output Config: [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/extract-configs.shell'
+ [[ -n \t./scripts/extract-configs.shell ]]
+ local 'message=\t./scripts/extract-configs.shell'
+ echo -e '\t./scripts/extract-configs.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/misc/switch3.conf'
+ [[ -n \t--config=configs/misc/switch3.conf ]]
+ local 'message=\t--config=configs/misc/switch3.conf'
+ echo -e '\t--config=configs/misc/switch3.conf'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/misc/switch3.conf'
+ [[ -n \t--extract=.cache/resources/misc/switch3.conf ]]
+ local 'message=\t--extract=.cache/resources/misc/switch3.conf'
+ echo -e '\t--extract=.cache/resources/misc/switch3.conf'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --verbose
+ tree .cache/resources
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47msDFvfdp ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.47msDFvfdp
