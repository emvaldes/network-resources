+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0ODkxMjY4Nzk5NDA1NjAwMAo--
++ divisor=--MTc0ODkxMjY4Nzk5NDA1NjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias network-configs=main
+ [[ -z '' ]]
+ export script_name=./scripts/network-configs.shell
+ script_name=./scripts/network-configs.shell
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_filename=network-configs.shell
+ script_filename=network-configs
+ export network_configs__console=logs/console/network-configs.console
+ network_configs__console=logs/console/network-configs.console
+ touch logs/console/network-configs.console
+ [[ 7 -eq 0 ]]
+ [[ --search=ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ main --search=ips.list --configs=devices.list --location=configs --extract=.cache/resources --update=true --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q9hAQj8AZi/network-configs--resources.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(cache|e)$ ]]
+ [[ search =~ ^(configs|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(location|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=ips.list
+ [[ search =~ ^(update|u)$ ]]
+ [[ search =~ ^(logger|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(cache|e)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ local search_configs=devices.list
+ [[ configs =~ ^(export|r)$ ]]
+ [[ configs =~ ^(extract|x)$ ]]
+ [[ configs =~ ^(location|l)$ ]]
+ [[ configs =~ ^(search|s)$ ]]
+ [[ configs =~ ^(update|u)$ ]]
+ [[ configs =~ ^(logger|o)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --location=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ location =~ ^(cache|e)$ ]]
+ [[ location =~ ^(configs|c)$ ]]
+ [[ location =~ ^(export|r)$ ]]
+ [[ location =~ ^(extract|x)$ ]]
+ [[ location =~ ^(location|l)$ ]]
+ local search_location=configs
+ [[ location =~ ^(search|s)$ ]]
+ [[ location =~ ^(update|u)$ ]]
+ [[ location =~ ^(logger|o)$ ]]
+ [[ location == \h\e\l\p ]]
+ [[ location == \d\e\b\u\g ]]
+ [[ location == \d\r\y\-\r\u\n ]]
+ [[ location == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(cache|e)$ ]]
+ [[ extract =~ ^(configs|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources
+ [[ extract =~ ^(location|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(update|u)$ ]]
+ [[ extract =~ ^(logger|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --update=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ update =~ ^(cache|e)$ ]]
+ [[ update =~ ^(configs|c)$ ]]
+ [[ update =~ ^(export|r)$ ]]
+ [[ update =~ ^(extract|x)$ ]]
+ [[ update =~ ^(location|l)$ ]]
+ [[ update =~ ^(search|s)$ ]]
+ [[ update =~ ^(update|u)$ ]]
+ local update_sources=true
+ [[ update =~ ^(logger|o)$ ]]
+ [[ update == \h\e\l\p ]]
+ [[ update == \d\e\b\u\g ]]
+ [[ update == \d\r\y\-\r\u\n ]]
+ [[ update == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q9hAQj8AZi/network-configs--resources.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(cache|e)$ ]]
+ [[ logger =~ ^(configs|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(location|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(update|u)$ ]]
+ [[ logger =~ ^(logger|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q9hAQj8AZi/network-configs--resources.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(cache|e)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(update|u)$ ]]
+ [[ verbose =~ ^(logger|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z .cache ]]
+ [[ -z .cache/resources ]]
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z ips.list ]]
+ [[ -z devices.list ]]
+ [[ -z configs ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.q9hAQj8AZi/network-configs--resources.console ]]
+ [[ -z '' ]]
+ local script_helper=false
+ [[ false == true ]]
+ [[ ! -d .cache ]]
+ [[ true == true ]]
+ export active_ips_file=.cache/ips.list
+ active_ips_file=.cache/ips.list
+ export active_configs_file=.cache/configs.list
+ active_configs_file=.cache/configs.list
+ touch .cache/ips.list
+ touch .cache/configs.list
+ [[ true == true ]]
+ message 'Updating IPS listings in: [ .cache/ips.list ] (true)'
+ [[ -n Updating IPS listings in: [ .cache/ips.list ] (true) ]]
+ local 'message=Updating IPS listings in: [ .cache/ips.list ] (true)'
+ echo -e 'Updating IPS listings in: [ .cache/ips.list ] (true)'
+ message 'Updating Configs List in: [ .cache/configs.list ] (true)'
+ [[ -n Updating Configs List in: [ .cache/configs.list ] (true) ]]
+ local 'message=Updating Configs List in: [ .cache/configs.list ] (true)'
+ echo -e 'Updating Configs List in: [ .cache/configs.list ] (true)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f ips.list ]]
+ [[ ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local 'prompt_message=Enter configuration file(s) or search path (comma-separated): '
+ [[ -z devices.list ]]
+ local 'prompt_message=Enter base directory to search configuration files: '
+ [[ -z configs ]]
+ [[ true == true ]]
+ message 'Search Patterns File: [ ips.list ]'
+ [[ -n Search Patterns File: [ ips.list ] ]]
+ local 'message=Search Patterns File: [ ips.list ]'
+ echo -e 'Search Patterns File: [ ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ message 'Search Patterns (17): '
+ [[ -n Search Patterns (17):  ]]
+ local 'message=Search Patterns (17): '
+ echo -e 'Search Patterns (17): '
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count && i < 25 ))
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ cat -n
+ echo -e '  - 10.0.1.2'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ configs_listing=()
+ declare -a configs_listing
+ [[ -n devices.list ]]
+ raw_paths=()
+ declare -a raw_paths
+ [[ -f devices.list ]]
+ [[ devices.list != *,* ]]
+ IFS=
+ read -r line
++ echo access-sw1-west
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=access-sw1-west
+ [[ -z access-sw1-west ]]
+ [[ access-sw1-west =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo branch-isr-02
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=branch-isr-02
+ [[ -z branch-isr-02 ]]
+ [[ branch-isr-02 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo campus-sw-access01
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=campus-sw-access01
+ [[ -z campus-sw-access01 ]]
+ [[ campus-sw-access01 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo dmz-fw2-backup
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=dmz-fw2-backup
+ [[ -z dmz-fw2-backup ]]
+ [[ dmz-fw2-backup =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-branch-vpn-01
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-branch-vpn-01
+ [[ -z fg-branch-vpn-01 ]]
+ [[ fg-branch-vpn-01 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-campus-core
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-campus-core
+ [[ -z fg-campus-core ]]
+ [[ fg-campus-core =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-testing-config
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-testing-config
+ [[ -z fg-testing-config ]]
+ [[ fg-testing-config =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fw1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fw1
+ [[ -z fw1 ]]
+ [[ fw1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fw3
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fw3
+ [[ -z fw3 ]]
+ [[ fw3 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo perimeter-fw1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=perimeter-fw1
+ [[ -z perimeter-fw1 ]]
+ [[ perimeter-fw1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo switch1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=switch1
+ [[ -z switch1 ]]
+ [[ switch1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo switch3
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=switch3
+ [[ -z switch3 ]]
+ [[ switch3 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ [[ 12 -gt 0 ]]
+ mapfile -t configs_listing
++ find configs -type f
++ sed 's|^\./||'
++ sort -u
+++ IFS='|'
+++ echo 'access-sw1-west|branch-isr-02|campus-sw-access01|dmz-fw2-backup|fg-branch-vpn-01|fg-campus-core|fg-testing-config|fw1|fw3|perimeter-fw1|switch1|switch3'
++ egrep 'access-sw1-west|branch-isr-02|campus-sw-access01|dmz-fw2-backup|fg-branch-vpn-01|fg-campus-core|fg-testing-config|fw1|fw3|perimeter-fw1|switch1|switch3'
+ search_configs=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/configs.list
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch3.conf
+ matched_ips=()
+ declare -a matched_ips
+ matched_configs=()
+ declare -a matched_configs
+ local matched=
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/access-sw1-west.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/access-sw1-west.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/access-sw1-west.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/access-sw1-west.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-isr-02.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/branch-isr-02.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/campus-sw-access01.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/campus-sw-access01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/campus-sw-access01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/campus-sw-access01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/dmz-fw2-backup.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/dmz-fw2-backup.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/perimeter-fw1.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/cisco/perimeter-fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/cisco/perimeter-fw1.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-branch-vpn-01.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/fortinet/fg-branch-vpn-01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/fortinet/fg-branch-vpn-01.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-campus-core.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/fortinet/fg-campus-core.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-testing-config.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-testing-config.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/fortinet/fg-testing-config.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw1.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/misc/fw1.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw3.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/misc/fw3.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch1.conf ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/misc/switch1.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/misc/switch1.conf
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch3.conf ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/switch3.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.1.2 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.2.3 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.10 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.1.11 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.2.12 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.0.5 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.16.1.6 configs/misc/switch3.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 192.0.2.50 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 198.51.100.75 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.18.1.20 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 10.10.10.10 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.100.100 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 172.31.255.254 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.1 configs/misc/switch3.conf
+ for ip in "${search_terms[@]}"
+ grep -qF 192.168.0.100 configs/misc/switch3.conf
+ readarray -t matched_ips
++ printf '%s\n' 10.10.10.10 192.168.0.1 192.168.0.100 10.0.2.3 192.168.1.11 192.168.2.12 172.16.1.6 198.51.100.75 172.18.1.20 10.10.10.10 192.168.0.1 192.168.0.100 192.0.2.50 203.0.113.25 198.51.100.75 10.10.10.10 192.168.100.100 10.0.0.1 172.16.0.5 192.0.2.50 203.0.113.25 10.0.0.1 10.0.1.2 192.168.1.10 192.168.2.12 203.0.113.25 198.51.100.75 192.168.0.1 192.168.1.11 192.168.2.12 172.16.1.6 10.10.10.10 192.168.100.100 10.10.10.10 10.0.2.3 192.168.1.10 192.168.2.12 203.0.113.25 198.51.100.75 172.18.1.20 10.0.2.3 192.168.1.10 172.16.0.5 203.0.113.25 10.10.10.10 10.0.0.1 10.0.1.2 192.168.1.10 172.31.255.254 10.0.0.1 172.16.1.6
++ grep -v '^\s*$'
++ sort -u
+ [[ 17 -eq 0 ]]
+ [[ true == true ]]
+ message 'Processed Patterns: [ 17 ]'
+ [[ -n Processed Patterns: [ 17 ] ]]
+ local 'message=Processed Patterns: [ 17 ]'
+ echo -e 'Processed Patterns: [ 17 ]'
+ readarray -t configs_listing
++ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/access-sw1-west.cfg configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/cisco/perimeter-fw1.cfg configs/cisco/perimeter-fw1.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/fw3.cfg configs/misc/fw3.cfg configs/misc/fw3.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch1.conf configs/misc/switch1.conf configs/misc/switch1.conf configs/misc/switch3.conf configs/misc/switch3.conf
++ grep -v '^\s*$'
++ sort -u
+ [[ 12 -eq 0 ]]
+ [[ true == true ]]
+ message 'Identified Matches: [ 51 ]'
+ [[ -n Identified Matches: [ 51 ] ]]
+ local 'message=Identified Matches: [ 51 ]'
+ echo -e 'Identified Matches: [ 51 ]'
+ ((  17 > 0  ))
+ printf '%s\n' 10.0.0.1 10.0.1.2 10.0.2.3 10.10.10.10 172.16.0.5 172.16.1.6 172.18.1.20 172.31.255.254 192.0.2.50 192.168.0.1 192.168.0.100 192.168.1.10 192.168.1.11 192.168.100.100 192.168.2.12 198.51.100.75 203.0.113.25
+ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n
+ search_pattern=.cache/ips.list
+ ((  12 > 0  ))
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch3.conf
+ search_configs=.cache/configs.list
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Validated List exported to: [ .cache/ips.list ] = 17'
+ [[ -n Validated List exported to: [ .cache/ips.list ] = 17 ]]
+ local 'message=Validated List exported to: [ .cache/ips.list ] = 17'
+ echo -e 'Validated List exported to: [ .cache/ips.list ] = 17'
+ message 'Validated Configs saved to: [ .cache/configs.list ] = 12'
+ [[ -n Validated Configs saved to: [ .cache/configs.list ] = 12 ]]
+ local 'message=Validated Configs saved to: [ .cache/configs.list ] = 12'
+ echo -e 'Validated Configs saved to: [ .cache/configs.list ] = 12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local network_extract__script=network-extract
+ extract_jobs_pid=()
+ declare -ga extract_jobs_pid
+ extract_jobs2cfg_mapping=()
+ declare -gA extract_jobs2cfg_mapping
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/access-sw1-west.cfg ]]
+ set +e
+ detect_vendor configs/cisco/access-sw1-west.cfg
+ local config_file=configs/cisco/access-sw1-west.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/access-sw1-west.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/access-sw1-west.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/access-sw1-west.cfg
+ local target_output=.cache/resources/cisco/access-sw1-west.cfg
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
++ basename configs/cisco/access-sw1-west.cfg
+ local logger_index=access-sw1-west.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/cisco/access-sw1-west.cfg' '--extract=.cache/resources/cisco/access-sw1-west.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/access-sw1-west.cfg'
+ [[ -n \t--config=configs/cisco/access-sw1-west.cfg ]]
+ local 'message=\t--config=configs/cisco/access-sw1-west.cfg'
+ echo -e '\t--config=configs/cisco/access-sw1-west.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/access-sw1-west.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71107
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=access-sw1-west.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-isr-02.cfg ]]
+ set +e
+ detect_vendor configs/cisco/branch-isr-02.cfg
+ local config_file=configs/cisco/branch-isr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/branch-isr-02.cfg
++ which bash
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/branch-isr-02.cfg
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console --verbose
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/branch-isr-02.cfg
+ local target_output=.cache/resources/cisco/branch-isr-02.cfg
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
++ basename configs/cisco/branch-isr-02.cfg
+ local logger_index=branch-isr-02.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/cisco/branch-isr-02.cfg' '--extract=.cache/resources/cisco/branch-isr-02.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/branch-isr-02.cfg'
+ [[ -n \t--config=configs/cisco/branch-isr-02.cfg ]]
+ local 'message=\t--config=configs/cisco/branch-isr-02.cfg'
+ echo -e '\t--config=configs/cisco/branch-isr-02.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/branch-isr-02.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71115
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=branch-isr-02.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/campus-sw-access01.cfg ]]
+ set +e
+ detect_vendor configs/cisco/campus-sw-access01.cfg
+ local config_file=configs/cisco/campus-sw-access01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/campus-sw-access01.cfg
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console --verbose
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/campus-sw-access01.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/campus-sw-access01.cfg
+ local target_output=.cache/resources/cisco/campus-sw-access01.cfg
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
++ basename configs/cisco/campus-sw-access01.cfg
+ local logger_index=campus-sw-access01.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/cisco/campus-sw-access01.cfg' '--extract=.cache/resources/cisco/campus-sw-access01.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/campus-sw-access01.cfg'
+ [[ -n \t--config=configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=\t--config=configs/cisco/campus-sw-access01.cfg'
+ echo -e '\t--config=configs/cisco/campus-sw-access01.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/campus-sw-access01.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71131
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=campus-sw-access01.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/dmz-fw2-backup.cfg ]]
+ set +e
+ detect_vendor configs/cisco/dmz-fw2-backup.cfg
+ local config_file=configs/cisco/dmz-fw2-backup.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/dmz-fw2-backup.cfg
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console --verbose
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/dmz-fw2-backup.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/dmz-fw2-backup.cfg
+ local target_output=.cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
++ basename configs/cisco/dmz-fw2-backup.cfg
+ local logger_index=dmz-fw2-backup.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/cisco/dmz-fw2-backup.cfg' '--extract=.cache/resources/cisco/dmz-fw2-backup.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n \t--config=configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71159
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=dmz-fw2-backup.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/perimeter-fw1.cfg ]]
+ set +e
+ detect_vendor configs/cisco/perimeter-fw1.cfg
+ local config_file=configs/cisco/perimeter-fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/perimeter-fw1.cfg
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console --verbose
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/perimeter-fw1.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/perimeter-fw1.cfg
+ local target_output=.cache/resources/cisco/perimeter-fw1.cfg
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
++ basename configs/cisco/perimeter-fw1.cfg
+ local logger_index=perimeter-fw1.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/cisco/perimeter-fw1.cfg' '--extract=.cache/resources/cisco/perimeter-fw1.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/cisco/perimeter-fw1.cfg'
+ [[ -n \t--config=configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=\t--config=configs/cisco/perimeter-fw1.cfg'
+ echo -e '\t--config=configs/cisco/perimeter-fw1.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71200
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=perimeter-fw1.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-branch-vpn-01.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-branch-vpn-01.cfg
+ local config_file=configs/fortinet/fg-branch-vpn-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-branch-vpn-01.cfg
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console --verbose
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=fortinet/fg-branch-vpn-01.cfg
+ local target_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local output_dir=.cache/resources/fortinet
+ mkdir -p .cache/resources/fortinet
+ :
++ basename configs/fortinet/fg-branch-vpn-01.cfg
+ local logger_index=fg-branch-vpn-01.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/fortinet/fg-branch-vpn-01.cfg' '--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg' '--platform=fortinet' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n \t--config=configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n \t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=fortinet'
+ [[ -n \t--platform=fortinet ]]
+ local 'message=\t--platform=fortinet'
+ echo -e '\t--platform=fortinet'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71241
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=fg-branch-vpn-01.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-campus-core.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-campus-core.cfg
+ local config_file=configs/fortinet/fg-campus-core.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-campus-core.cfg
++ which bash
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Source Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ [[ -n Source Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Source Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Source Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=fortinet/fg-campus-core.cfg
+ local target_output=.cache/resources/fortinet/fg-campus-core.cfg
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ local output_dir=.cache/resources/fortinet
+ mkdir -p .cache/resources/fortinet
+ :
++ basename configs/fortinet/fg-campus-core.cfg
+ local logger_index=fg-campus-core.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/fortinet/fg-campus-core.cfg' '--extract=.cache/resources/fortinet/fg-campus-core.cfg' '--platform=fortinet' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/fortinet/fg-campus-core.cfg'
+ [[ -n \t--config=configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=\t--config=configs/fortinet/fg-campus-core.cfg'
+ echo -e '\t--config=configs/fortinet/fg-campus-core.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n \t--extract=.cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=\t--extract=.cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '\t--extract=.cache/resources/fortinet/fg-campus-core.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=fortinet'
+ [[ -n \t--platform=fortinet ]]
+ local 'message=\t--platform=fortinet'
+ echo -e '\t--platform=fortinet'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71288
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=fg-campus-core.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-testing-config.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-testing-config.cfg
+ local config_file=configs/fortinet/fg-testing-config.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-testing-config.cfg
++ which bash
+ return 1
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console --verbose
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Source Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Source Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Source Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Source Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=fortinet/fg-testing-config.cfg
+ local target_output=.cache/resources/fortinet/fg-testing-config.cfg
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ local output_dir=.cache/resources/fortinet
+ mkdir -p .cache/resources/fortinet
+ :
++ basename configs/fortinet/fg-testing-config.cfg
+ local logger_index=fg-testing-config.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/fortinet/fg-testing-config.cfg' '--extract=.cache/resources/fortinet/fg-testing-config.cfg' '--platform=fortinet' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/fortinet/fg-testing-config.cfg'
+ [[ -n \t--config=configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=\t--config=configs/fortinet/fg-testing-config.cfg'
+ echo -e '\t--config=configs/fortinet/fg-testing-config.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n \t--extract=.cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=\t--extract=.cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '\t--extract=.cache/resources/fortinet/fg-testing-config.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=fortinet'
+ [[ -n \t--platform=fortinet ]]
+ local 'message=\t--platform=fortinet'
+ echo -e '\t--platform=fortinet'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71334
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=fg-testing-config.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw1.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw1.cfg
+ local config_file=configs/misc/fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw1.cfg
++ which bash
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw1.cfg
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console --verbose
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/fw1.cfg
+ local target_output=.cache/resources/misc/fw1.cfg
++ dirname .cache/resources/misc/fw1.cfg
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
++ basename configs/misc/fw1.cfg
+ local logger_index=fw1.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/misc/fw1.cfg' '--extract=.cache/resources/misc/fw1.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/misc/fw1.cfg'
+ [[ -n \t--config=configs/misc/fw1.cfg ]]
+ local 'message=\t--config=configs/misc/fw1.cfg'
+ echo -e '\t--config=configs/misc/fw1.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/misc/fw1.cfg'
+ [[ -n \t--extract=.cache/resources/misc/fw1.cfg ]]
+ local 'message=\t--extract=.cache/resources/misc/fw1.cfg'
+ echo -e '\t--extract=.cache/resources/misc/fw1.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71392
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=fw1.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw3.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw3.cfg
+ local config_file=configs/misc/fw3.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw3.cfg
++ which bash
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw3.cfg
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console --verbose
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/fw3.cfg
+ local target_output=.cache/resources/misc/fw3.cfg
++ dirname .cache/resources/misc/fw3.cfg
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
++ basename configs/misc/fw3.cfg
+ local logger_index=fw3.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/misc/fw3.cfg' '--extract=.cache/resources/misc/fw3.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/misc/fw3.cfg'
+ [[ -n \t--config=configs/misc/fw3.cfg ]]
+ local 'message=\t--config=configs/misc/fw3.cfg'
+ echo -e '\t--config=configs/misc/fw3.cfg'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/misc/fw3.cfg'
+ [[ -n \t--extract=.cache/resources/misc/fw3.cfg ]]
+ local 'message=\t--extract=.cache/resources/misc/fw3.cfg'
+ echo -e '\t--extract=.cache/resources/misc/fw3.cfg'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71451
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=fw3.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch1.conf ]]
+ set +e
+ detect_vendor configs/misc/switch1.conf
+ local config_file=configs/misc/switch1.conf
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/switch1.conf
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console --verbose
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/switch1.conf
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/switch1.conf
+ local target_output=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
++ basename configs/misc/switch1.conf
+ local logger_index=switch1.conf
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/misc/switch1.conf' '--extract=.cache/resources/misc/switch1.conf' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/misc/switch1.conf'
+ [[ -n \t--config=configs/misc/switch1.conf ]]
+ local 'message=\t--config=configs/misc/switch1.conf'
+ echo -e '\t--config=configs/misc/switch1.conf'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/misc/switch1.conf'
+ [[ -n \t--extract=.cache/resources/misc/switch1.conf ]]
+ local 'message=\t--extract=.cache/resources/misc/switch1.conf'
+ echo -e '\t--extract=.cache/resources/misc/switch1.conf'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71507
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=switch1.conf
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch3.conf ]]
+ set +e
+ detect_vendor configs/misc/switch3.conf
+ local config_file=configs/misc/switch3.conf
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/switch3.conf
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console --verbose
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/switch3.conf
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/switch3.conf
+ local target_output=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
++ basename configs/misc/switch3.conf
+ local logger_index=switch3.conf
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf
+ :
+ execute=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/misc/switch3.conf' '--extract=.cache/resources/misc/switch3.conf' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute[@]}"
+ message '\t--config=configs/misc/switch3.conf'
+ [[ -n \t--config=configs/misc/switch3.conf ]]
+ local 'message=\t--config=configs/misc/switch3.conf'
+ echo -e '\t--config=configs/misc/switch3.conf'
+ for item in "${execute[@]}"
+ message '\t--extract=.cache/resources/misc/switch3.conf'
+ [[ -n \t--extract=.cache/resources/misc/switch3.conf ]]
+ local 'message=\t--extract=.cache/resources/misc/switch3.conf'
+ echo -e '\t--extract=.cache/resources/misc/switch3.conf'
+ for item in "${execute[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console'
+ for item in "${execute[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=71560
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=switch3.conf
+ ((  12 > 0  ))
+ valid_extract_jobs_pid=()
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71107
+ logger=access-sw1-west.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71115
+ logger=branch-isr-02.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71131
+ logger=campus-sw-access01.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71159
+ logger=dmz-fw2-backup.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71200
+ logger=perimeter-fw1.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71241
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71288
++ which bash
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71334
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71392
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71451
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71507
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71560
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console --verbose
+ ((  7 > 0  ))
+ valid_extract_jobs_pid=()
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71241
+ logger=fg-branch-vpn-01.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71288
+ logger=fg-campus-core.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71334
+ logger=fg-testing-config.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71392
+ logger=fw1.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71451
+ logger=fw3.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71507
+ logger=switch1.conf
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71560
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_extract_jobs_pid=()
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 71560
+ logger=switch3.conf
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=branch-isr-02.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/branch-isr-02.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/branch-isr-02.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=fg-branch-vpn-01.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fg-branch-vpn-01.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fg-branch-vpn-01.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=switch3.conf
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/switch3.conf.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/switch3.conf.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=campus-sw-access01.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/campus-sw-access01.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/campus-sw-access01.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=switch1.conf
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/switch1.conf.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/switch1.conf.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=fg-campus-core.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fg-campus-core.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fg-campus-core.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=dmz-fw2-backup.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/dmz-fw2-backup.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/dmz-fw2-backup.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=perimeter-fw1.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/perimeter-fw1.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/perimeter-fw1.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=access-sw1-west.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/access-sw1-west.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/access-sw1-west.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=fg-testing-config.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fg-testing-config.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fg-testing-config.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=fw1.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fw1.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fw1.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ logger=fw3.cfg
+ console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fw3.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/fw3.cfg.console ]]
+ [[ true == true ]]
+ print_file logs/console/network-configs.console
+ [[ -n logs/console/network-configs.console ]]
+ local target_file=logs/console/network-configs.console
+ [[ -f logs/console/network-configs.console ]]
+ case "${target_file}" in
+ cat logs/console/network-configs.console
+ [[ -d .cache/resources ]]
+ mapfile -t extracted_configs
++ find .cache/resources -type f
++ sort -u
+ ((  12 > 0  ))
+ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/switch1.conf .cache/resources/misc/switch3.conf
+ [[ true == true ]]
+ message 'Updated .cache/configs.list with extracted configs: 12'
+ [[ -n Updated .cache/configs.list with extracted configs: 12 ]]
+ local 'message=Updated .cache/configs.list with extracted configs: 12'
+ echo -e 'Updated .cache/configs.list with extracted configs: 12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW
