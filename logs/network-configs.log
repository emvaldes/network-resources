+ [[ -n '' ]]
+ readonly __NETWORK_CONFIGS__=1
+ __NETWORK_CONFIGS__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias network-configs=main
+ [[ -z '' ]]
+ export script_name=./scripts/network-configs.shell
+ script_name=./scripts/network-configs.shell
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ script_filename=network-configs.shell
+ script_filename=network-configs
+ export network_configs__console=console/network-configs.console
+ network_configs__console=console/network-configs.console
+ touch console/network-configs.console
+ [[ 7 -eq 0 ]]
+ [[ --search=ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ main --search=ips.list --configs=devices.list --location=configs --extract=.cache/resources --update=true --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/network-configs--resources.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(cache|e)$ ]]
+ [[ search =~ ^(configs|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(location|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=ips.list
+ [[ search =~ ^(update|u)$ ]]
+ [[ search =~ ^(logger|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(cache|e)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ local search_configs=devices.list
+ [[ configs =~ ^(export|r)$ ]]
+ [[ configs =~ ^(extract|x)$ ]]
+ [[ configs =~ ^(location|l)$ ]]
+ [[ configs =~ ^(search|s)$ ]]
+ [[ configs =~ ^(update|u)$ ]]
+ [[ configs =~ ^(logger|o)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --location=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ location =~ ^(cache|e)$ ]]
+ [[ location =~ ^(configs|c)$ ]]
+ [[ location =~ ^(export|r)$ ]]
+ [[ location =~ ^(extract|x)$ ]]
+ [[ location =~ ^(location|l)$ ]]
+ local search_location=configs
+ [[ location =~ ^(search|s)$ ]]
+ [[ location =~ ^(update|u)$ ]]
+ [[ location =~ ^(logger|o)$ ]]
+ [[ location == \h\e\l\p ]]
+ [[ location == \d\e\b\u\g ]]
+ [[ location == \d\r\y\-\r\u\n ]]
+ [[ location == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(cache|e)$ ]]
+ [[ extract =~ ^(configs|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources
+ [[ extract =~ ^(location|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(update|u)$ ]]
+ [[ extract =~ ^(logger|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --update=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ update =~ ^(cache|e)$ ]]
+ [[ update =~ ^(configs|c)$ ]]
+ [[ update =~ ^(export|r)$ ]]
+ [[ update =~ ^(extract|x)$ ]]
+ [[ update =~ ^(location|l)$ ]]
+ [[ update =~ ^(search|s)$ ]]
+ [[ update =~ ^(update|u)$ ]]
+ local update_sources=true
+ [[ update =~ ^(logger|o)$ ]]
+ [[ update == \h\e\l\p ]]
+ [[ update == \d\e\b\u\g ]]
+ [[ update == \d\r\y\-\r\u\n ]]
+ [[ update == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/network-configs--resources.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(cache|e)$ ]]
+ [[ logger =~ ^(configs|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(location|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(update|u)$ ]]
+ [[ logger =~ ^(logger|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/network-configs--resources.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(cache|e)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(update|u)$ ]]
+ [[ verbose =~ ^(logger|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z .cache ]]
+ [[ -z .cache/resources ]]
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z ips.list ]]
+ [[ -z devices.list ]]
+ [[ -z configs ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/network-configs--resources.console ]]
+ [[ -z '' ]]
+ local script_helper=false
+ [[ false == true ]]
+ [[ ! -d .cache ]]
+ [[ true == true ]]
+ export active_ips_file=.cache/ips.list
+ active_ips_file=.cache/ips.list
+ export active_configs_file=.cache/configs.list
+ active_configs_file=.cache/configs.list
+ touch .cache/ips.list
+ touch .cache/configs.list
+ [[ true == true ]]
+ message 'Updating IPS listings in: [ .cache/ips.list ] (true)'
+ [[ -n Updating IPS listings in: [ .cache/ips.list ] (true) ]]
+ local 'message=Updating IPS listings in: [ .cache/ips.list ] (true)'
+ echo -e 'Updating IPS listings in: [ .cache/ips.list ] (true)'
+ message 'Updating Configs List in: [ .cache/configs.list ] (true)'
+ [[ -n Updating Configs List in: [ .cache/configs.list ] (true) ]]
+ local 'message=Updating Configs List in: [ .cache/configs.list ] (true)'
+ echo -e 'Updating Configs List in: [ .cache/configs.list ] (true)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f ips.list ]]
+ [[ ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ local 'prompt_message=Enter configuration file(s) or search path (comma-separated): '
+ [[ -z devices.list ]]
+ local 'prompt_message=Enter base directory to search configuration files: '
+ [[ -z configs ]]
+ [[ true == true ]]
+ message 'Search Patterns File: [ ips.list ]'
+ [[ -n Search Patterns File: [ ips.list ] ]]
+ local 'message=Search Patterns File: [ ips.list ]'
+ echo -e 'Search Patterns File: [ ips.list ]'
+ local count=2
+ ((  count == 0  ))
+ message 'Search Patterns (2): '
+ [[ -n Search Patterns (2):  ]]
+ local 'message=Search Patterns (2): '
+ echo -e 'Search Patterns (2): '
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count && i < 25 ))
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ (( i++ ))
+ cat -n
+ (( i < count && i < 25 ))
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ (( i++ ))
+ (( i < count && i < 25 ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ configs_listing=()
+ declare -a configs_listing
+ [[ -n devices.list ]]
+ raw_paths=()
+ declare -a raw_paths
+ [[ -f devices.list ]]
+ [[ devices.list != *,* ]]
+ IFS=
+ read -r line
++ echo access-sw1-west
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=access-sw1-west
+ [[ -z access-sw1-west ]]
+ [[ access-sw1-west =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo branch-isr-02
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=branch-isr-02
+ [[ -z branch-isr-02 ]]
+ [[ branch-isr-02 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo campus-sw-access01
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=campus-sw-access01
+ [[ -z campus-sw-access01 ]]
+ [[ campus-sw-access01 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo dmz-fw2-backup
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=dmz-fw2-backup
+ [[ -z dmz-fw2-backup ]]
+ [[ dmz-fw2-backup =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-branch-vpn-01
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-branch-vpn-01
+ [[ -z fg-branch-vpn-01 ]]
+ [[ fg-branch-vpn-01 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-campus-core
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-campus-core
+ [[ -z fg-campus-core ]]
+ [[ fg-campus-core =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fg-testing-config
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fg-testing-config
+ [[ -z fg-testing-config ]]
+ [[ fg-testing-config =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fw1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fw1
+ [[ -z fw1 ]]
+ [[ fw1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo fw3
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=fw3
+ [[ -z fw3 ]]
+ [[ fw3 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo perimeter-fw1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=perimeter-fw1
+ [[ -z perimeter-fw1 ]]
+ [[ perimeter-fw1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo switch1
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=switch1
+ [[ -z switch1 ]]
+ [[ switch1 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
++ echo switch3
++ sed 's/\r//'
++ sed 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ clean=switch3
+ [[ -z switch3 ]]
+ [[ switch3 =~ ^#.*$ ]]
+ raw_paths+=("${clean}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ [[ 12 -gt 0 ]]
+ mapfile -t configs_listing
++ find configs -type f
++ sed 's|^\./||'
++ sort -u
+++ IFS='|'
+++ echo 'access-sw1-west|branch-isr-02|campus-sw-access01|dmz-fw2-backup|fg-branch-vpn-01|fg-campus-core|fg-testing-config|fw1|fw3|perimeter-fw1|switch1|switch3'
++ egrep 'access-sw1-west|branch-isr-02|campus-sw-access01|dmz-fw2-backup|fg-branch-vpn-01|fg-campus-core|fg-testing-config|fw1|fw3|perimeter-fw1|switch1|switch3'
+ search_configs=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/configs.list
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch3.conf
+ matched_ips=()
+ declare -a matched_ips
+ matched_configs=()
+ declare -a matched_configs
+ local matched=
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/access-sw1-west.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/access-sw1-west.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/access-sw1-west.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-isr-02.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/branch-isr-02.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/branch-isr-02.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/campus-sw-access01.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/campus-sw-access01.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/campus-sw-access01.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/dmz-fw2-backup.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/dmz-fw2-backup.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/perimeter-fw1.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-branch-vpn-01.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-campus-core.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-campus-core.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-campus-core.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-testing-config.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-testing-config.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/fortinet/fg-testing-config.cfg
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw1.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw1.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/fw1.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw3.cfg ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw3.cfg
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/fw3.cfg
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch1.conf ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/switch1.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/switch1.conf
+ for cfg in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch3.conf ]]
+ matched=false
+ for ip in "${search_terms[@]}"
+ grep -qF 10.0.0.1 configs/misc/switch3.conf
+ matched_configs+=("${cfg}")
+ matched_ips+=("${ip}")
+ matched=true
+ for ip in "${search_terms[@]}"
+ grep -qF 203.0.113.25 configs/misc/switch3.conf
+ readarray -t matched_ips
++ printf '%s\n' 203.0.113.25 10.0.0.1 203.0.113.25 10.0.0.1 203.0.113.25 203.0.113.25 203.0.113.25 10.0.0.1 10.0.0.1
++ grep -v '^\s*$'
++ sort -u
+ [[ 2 -eq 0 ]]
+ [[ true == true ]]
+ message 'Processed Patterns: [ 2 ]'
+ [[ -n Processed Patterns: [ 2 ] ]]
+ local 'message=Processed Patterns: [ 2 ]'
+ echo -e 'Processed Patterns: [ 2 ]'
+ readarray -t configs_listing
++ printf '%s\n' configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch3.conf
++ grep -v '^\s*$'
++ sort -u
+ [[ 7 -eq 0 ]]
+ [[ true == true ]]
+ message 'Identified Matches: [ 9 ]'
+ [[ -n Identified Matches: [ 9 ] ]]
+ local 'message=Identified Matches: [ 9 ]'
+ echo -e 'Identified Matches: [ 9 ]'
+ ((  2 > 0  ))
+ printf '%s\n' 10.0.0.1 203.0.113.25
+ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n
+ search_pattern=.cache/ips.list
+ ((  7 > 0  ))
+ printf '%s\n' configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg configs/misc/switch1.conf configs/misc/switch3.conf
+ search_configs=.cache/configs.list
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Validated List exported to: [ .cache/ips.list ] = 2'
+ [[ -n Validated List exported to: [ .cache/ips.list ] = 2 ]]
+ local 'message=Validated List exported to: [ .cache/ips.list ] = 2'
+ echo -e 'Validated List exported to: [ .cache/ips.list ] = 2'
+ message 'Validated Configs saved to: [ .cache/configs.list ] = 7'
+ [[ -n Validated Configs saved to: [ .cache/configs.list ] = 7 ]]
+ local 'message=Validated Configs saved to: [ .cache/configs.list ] = 7'
+ echo -e 'Validated Configs saved to: [ .cache/configs.list ] = 7'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local network_extract__script=network-extract
+ extract_jobs_pid=()
+ declare -ga extract_jobs_pid
+ extract_jobs2cfg_mapping=()
+ declare -gA extract_jobs2cfg_mapping
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/dmz-fw2-backup.cfg ]]
+ set +e
+ detect_vendor configs/cisco/dmz-fw2-backup.cfg
+ local config_file=configs/cisco/dmz-fw2-backup.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/dmz-fw2-backup.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/dmz-fw2-backup.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/dmz-fw2-backup.cfg
+ local target_output=.cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
++ basename configs/cisco/dmz-fw2-backup.cfg
+ local logger_index=dmz-fw2-backup.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg
+ :
+ execute__network_extract=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/cisco/dmz-fw2-backup.cfg' '--extract=.cache/resources/cisco/dmz-fw2-backup.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console')
+ declare -a execute__network_extract
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__network_extract+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute__network_extract[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute__network_extract[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute__network_extract[@]}"
+ message '\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n \t--config=configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '\t--config=configs/cisco/dmz-fw2-backup.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/dmz-fw2-backup.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute__network_extract[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console'
+ for item in "${execute__network_extract[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=18034
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=dmz-fw2-backup.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/perimeter-fw1.cfg ]]
+ set +e
+ detect_vendor configs/cisco/perimeter-fw1.cfg
+ local config_file=configs/cisco/perimeter-fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/perimeter-fw1.cfg
++ which bash
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/perimeter-fw1.cfg
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--dmz-fw2-backup.cfg.console --verbose
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=cisco/perimeter-fw1.cfg
+ local target_output=.cache/resources/cisco/perimeter-fw1.cfg
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ local output_dir=.cache/resources/cisco
+ mkdir -p .cache/resources/cisco
+ :
++ basename configs/cisco/perimeter-fw1.cfg
+ local logger_index=perimeter-fw1.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg
+ :
+ execute__network_extract=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/cisco/perimeter-fw1.cfg' '--extract=.cache/resources/cisco/perimeter-fw1.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console')
+ declare -a execute__network_extract
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__network_extract+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute__network_extract[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute__network_extract[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute__network_extract[@]}"
+ message '\t--config=configs/cisco/perimeter-fw1.cfg'
+ [[ -n \t--config=configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=\t--config=configs/cisco/perimeter-fw1.cfg'
+ echo -e '\t--config=configs/cisco/perimeter-fw1.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n \t--extract=.cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '\t--extract=.cache/resources/cisco/perimeter-fw1.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute__network_extract[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console'
+ for item in "${execute__network_extract[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=18042
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=perimeter-fw1.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-branch-vpn-01.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-branch-vpn-01.cfg
+ local config_file=configs/fortinet/fg-branch-vpn-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-branch-vpn-01.cfg
++ which bash
+ return 1
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--perimeter-fw1.cfg.console --verbose
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Source Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=fortinet/fg-branch-vpn-01.cfg
+ local target_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local output_dir=.cache/resources/fortinet
+ mkdir -p .cache/resources/fortinet
+ :
++ basename configs/fortinet/fg-branch-vpn-01.cfg
+ local logger_index=fg-branch-vpn-01.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg
+ :
+ execute__network_extract=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/fortinet/fg-branch-vpn-01.cfg' '--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg' '--platform=fortinet' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console')
+ declare -a execute__network_extract
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__network_extract+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute__network_extract[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute__network_extract[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute__network_extract[@]}"
+ message '\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n \t--config=configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '\t--config=configs/fortinet/fg-branch-vpn-01.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n \t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '\t--extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--platform=fortinet'
+ [[ -n \t--platform=fortinet ]]
+ local 'message=\t--platform=fortinet'
+ echo -e '\t--platform=fortinet'
+ for item in "${execute__network_extract[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console'
+ for item in "${execute__network_extract[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=18058
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=fg-branch-vpn-01.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw1.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw1.cfg
+ local config_file=configs/misc/fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw1.cfg
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw1.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/fw1.cfg
+ local target_output=.cache/resources/misc/fw1.cfg
++ dirname .cache/resources/misc/fw1.cfg
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
++ basename configs/misc/fw1.cfg
+ local logger_index=fw1.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg
+ :
+ execute__network_extract=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/misc/fw1.cfg' '--extract=.cache/resources/misc/fw1.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console')
+ declare -a execute__network_extract
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__network_extract+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute__network_extract[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute__network_extract[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute__network_extract[@]}"
+ message '\t--config=configs/misc/fw1.cfg'
+ [[ -n \t--config=configs/misc/fw1.cfg ]]
+ local 'message=\t--config=configs/misc/fw1.cfg'
+ echo -e '\t--config=configs/misc/fw1.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--extract=.cache/resources/misc/fw1.cfg'
+ [[ -n \t--extract=.cache/resources/misc/fw1.cfg ]]
+ local 'message=\t--extract=.cache/resources/misc/fw1.cfg'
+ echo -e '\t--extract=.cache/resources/misc/fw1.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute__network_extract[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console'
+ for item in "${execute__network_extract[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=18083
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=fw1.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw3.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw3.cfg
+ local config_file=configs/misc/fw3.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw3.cfg
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw1.cfg.console --verbose
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw3.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/fw3.cfg
+ local target_output=.cache/resources/misc/fw3.cfg
++ dirname .cache/resources/misc/fw3.cfg
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
++ basename configs/misc/fw3.cfg
+ local logger_index=fw3.cfg
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg
+ :
+ execute__network_extract=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/misc/fw3.cfg' '--extract=.cache/resources/misc/fw3.cfg' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console')
+ declare -a execute__network_extract
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__network_extract+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute__network_extract[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute__network_extract[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute__network_extract[@]}"
+ message '\t--config=configs/misc/fw3.cfg'
+ [[ -n \t--config=configs/misc/fw3.cfg ]]
+ local 'message=\t--config=configs/misc/fw3.cfg'
+ echo -e '\t--config=configs/misc/fw3.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--extract=.cache/resources/misc/fw3.cfg'
+ [[ -n \t--extract=.cache/resources/misc/fw3.cfg ]]
+ local 'message=\t--extract=.cache/resources/misc/fw3.cfg'
+ echo -e '\t--extract=.cache/resources/misc/fw3.cfg'
+ for item in "${execute__network_extract[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute__network_extract[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console'
+ for item in "${execute__network_extract[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=18120
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=fw3.cfg
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch1.conf ]]
+ set +e
+ detect_vendor configs/misc/switch1.conf
+ local config_file=configs/misc/switch1.conf
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/switch1.conf
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--fw3.cfg.console --verbose
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/switch1.conf
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/switch1.conf ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/switch1.conf
+ local target_output=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
++ basename configs/misc/switch1.conf
+ local logger_index=switch1.conf
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf
+ :
+ execute__network_extract=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/misc/switch1.conf' '--extract=.cache/resources/misc/switch1.conf' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console')
+ declare -a execute__network_extract
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__network_extract+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute__network_extract[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute__network_extract[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute__network_extract[@]}"
+ message '\t--config=configs/misc/switch1.conf'
+ [[ -n \t--config=configs/misc/switch1.conf ]]
+ local 'message=\t--config=configs/misc/switch1.conf'
+ echo -e '\t--config=configs/misc/switch1.conf'
+ for item in "${execute__network_extract[@]}"
+ message '\t--extract=.cache/resources/misc/switch1.conf'
+ [[ -n \t--extract=.cache/resources/misc/switch1.conf ]]
+ local 'message=\t--extract=.cache/resources/misc/switch1.conf'
+ echo -e '\t--extract=.cache/resources/misc/switch1.conf'
+ for item in "${execute__network_extract[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute__network_extract[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console'
+ for item in "${execute__network_extract[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=18168
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=switch1.conf
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/switch3.conf ]]
+ set +e
+ detect_vendor configs/misc/switch3.conf
+ local config_file=configs/misc/switch3.conf
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/switch3.conf
++ which bash
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/switch3.conf
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch1.conf.console --verbose
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Source Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Source Config: [ configs/misc/switch3.conf ] ( cisco )'
+ local base_output=.cache/resources
+ [[ -n configs ]]
+ [[ configs != false ]]
+ rel_path=misc/switch3.conf
+ local target_output=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ local output_dir=.cache/resources/misc
+ mkdir -p .cache/resources/misc
+ :
++ basename configs/misc/switch3.conf
+ local logger_index=switch3.conf
+ local network_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf
+ :
+ execute__network_extract=('./scripts/network-extract.shell' '--search=.cache/ips.list' '--config=configs/misc/switch3.conf' '--extract=.cache/resources/misc/switch3.conf' '--platform=cisco' '--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console')
+ declare -a execute__network_extract
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__network_extract+=(--verbose)
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for item in "${execute__network_extract[@]}"
+ message '\t./scripts/network-extract.shell'
+ [[ -n \t./scripts/network-extract.shell ]]
+ local 'message=\t./scripts/network-extract.shell'
+ echo -e '\t./scripts/network-extract.shell'
+ for item in "${execute__network_extract[@]}"
+ message '\t--search=.cache/ips.list'
+ [[ -n \t--search=.cache/ips.list ]]
+ local 'message=\t--search=.cache/ips.list'
+ echo -e '\t--search=.cache/ips.list'
+ for item in "${execute__network_extract[@]}"
+ message '\t--config=configs/misc/switch3.conf'
+ [[ -n \t--config=configs/misc/switch3.conf ]]
+ local 'message=\t--config=configs/misc/switch3.conf'
+ echo -e '\t--config=configs/misc/switch3.conf'
+ for item in "${execute__network_extract[@]}"
+ message '\t--extract=.cache/resources/misc/switch3.conf'
+ [[ -n \t--extract=.cache/resources/misc/switch3.conf ]]
+ local 'message=\t--extract=.cache/resources/misc/switch3.conf'
+ echo -e '\t--extract=.cache/resources/misc/switch3.conf'
+ for item in "${execute__network_extract[@]}"
+ message '\t--platform=cisco'
+ [[ -n \t--platform=cisco ]]
+ local 'message=\t--platform=cisco'
+ echo -e '\t--platform=cisco'
+ for item in "${execute__network_extract[@]}"
+ message '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console'
+ [[ -n \t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console ]]
+ local 'message=\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console'
+ echo -e '\t--logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console'
+ for item in "${execute__network_extract[@]}"
+ message '\t--verbose'
+ [[ -n \t--verbose ]]
+ local 'message=\t--verbose'
+ echo -e '\t--verbose'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local job_pid=18223
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2cfg_mapping["$!"]=switch3.conf
+ ((  7 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18034
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18042
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18058
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18083
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18120
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18168
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18223
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
++ which bash
+ /usr/local/bin/bash -x ./scripts/network-extract.shell --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/network-extract--switch3.conf.console --verbose
+ ((  7 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18034
+ logger=dmz-fw2-backup.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18042
+ logger=perimeter-fw1.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18058
+ logger=fg-branch-vpn-01.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18083
+ logger=fw1.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18120
+ logger=fw3.cfg
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18168
+ logger=switch1.conf
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18223
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 18223
+ logger=switch3.conf
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ local logger=dmz-fw2-backup.cfg
+ local console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/dmz-fw2-backup.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/dmz-fw2-backup.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ local logger=perimeter-fw1.cfg
+ local console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/perimeter-fw1.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/perimeter-fw1.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ local logger=fw3.cfg
+ local console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/fw3.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/fw3.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ local logger=switch3.conf
+ local console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/switch3.conf.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/switch3.conf.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ local logger=fg-branch-vpn-01.cfg
+ local console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/fg-branch-vpn-01.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/fg-branch-vpn-01.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ local logger=fw1.cfg
+ local console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/fw1.cfg.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/fw1.cfg.console ]]
+ for pid in "${!extract_jobs2cfg_mapping[@]}"
+ local logger=switch1.conf
+ local console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/switch1.conf.console
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT/switch1.conf.console ]]
+ [[ true == true ]]
+ print_file console/network-configs.console
+ [[ -n console/network-configs.console ]]
+ local target_file=console/network-configs.console
+ [[ -f console/network-configs.console ]]
+ case "${target_file}" in
+ cat console/network-configs.console
+ [[ -d .cache/resources ]]
+ mapfile -t extracted_configs
++ find .cache/resources -type f
++ sort -u
+ ((  7 > 0  ))
+ printf '%s\n' .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/switch1.conf .cache/resources/misc/switch3.conf
+ [[ true == true ]]
+ message 'Updated .cache/configs.list with extracted configs: 7'
+ [[ -n Updated .cache/configs.list with extracted configs: 7 ]]
+ local 'message=Updated .cache/configs.list with extracted configs: 7'
+ echo -e 'Updated .cache/configs.list with extracted configs: 7'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m2RKNA6xBT
