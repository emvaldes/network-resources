$ bash -x scripts/network-configs.shell \
          --ips-list=ips.list \
          --config=./configs/fortinet/fg-lab-test-fw.cfg \
          --output=./resources/fg-lab-test-fw.cfg \
          --verbose ;

+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0hO9nrYlp
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0hO9nrYlp
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias display-help=display_help
+ alias new-line=newline
+ alias print-message=message
+ alias error-message=error_message
+ alias detect-vendor=detect_vendor
+ alias parse-cisco=main
+ [[ -z '' ]]
+ export script_name=scripts/network-configs.shell
+ script_name=scripts/network-configs.shell
+ [[ 4 -ge 1 ]]
+ [[ --ips-list=ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ main --ips-list=ips.list --config=./configs/fortinet/fg-lab-test-fw.cfg --output=./resources/fg-lab-test-fw.cfg --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ local target_addresses=ips.list
+ [[ ips-list =~ ^(config|c)$ ]]
+ [[ ips-list =~ ^(search|s)$ ]]
+ [[ ips-list =~ ^(location|l)$ ]]
+ [[ ips-list =~ ^(output|o)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=./configs/fortinet/fg-lab-test-fw.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(ips-list|i)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local source_config=./configs/fortinet/fg-lab-test-fw.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(location|l)$ ]]
+ [[ config =~ ^(output|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --output=./resources/fg-lab-test-fw.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ output =~ ^(ips-list|i)$ ]]
+ [[ output =~ ^(config|c)$ ]]
+ [[ output =~ ^(search|s)$ ]]
+ [[ output =~ ^(location|l)$ ]]
+ [[ output =~ ^(output|o)$ ]]
+ local output_config=./resources/fg-lab-test-fw.cfg
+ [[ output == \h\e\l\p ]]
+ [[ output == \d\e\b\u\g ]]
+ [[ output == \d\r\y\-\r\u\n ]]
+ [[ output == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(output|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local script_helper=false
+ [[ -z ./resources/fg-lab-test-fw.cfg ]]
+ [[ ./resources/fg-lab-test-fw.cfg =~ ^(/|\./?$|)$ ]]
+ [[ ! -d ./resources/fg-lab-test-fw.cfg ]]
+ mkdir -p ./resources/fg-lab-test-fw.cfg
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
+ configs_listing=()
+ declare -a configs_listing
+ local action_class=unknown
+ [[ -n ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ [[ -f ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ configs_listing=("${source_config}")
+ action_class=config
+ [[ -z '' ]]
+ [[ -n '' ]]
+ [[ -z '' ]]
+ [[ -z ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ [[ -z ips.list ]]
+ target_addresses_source=()
+ declare -a target_addresses_source
+ [[ -f ips.list ]]
+ mapfile -t target_addresses_source
++ tr -d '\r'
++ tr ' \t,;:|' '\n'
++ grep -v '^\s*$'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n -u
+ [[ true == true ]]
+ message 'Loaded (default) IPs addresses (count): 17'
+ [[ -n Loaded (default) IPs addresses (count): 17 ]]
+ local 'message=Loaded (default) IPs addresses (count): 17'
+ echo -e 'Loaded (default) IPs addresses (count): 17'
Loaded (default) IPs addresses (count): 17
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
  - 10.0.0.1
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
  - 10.0.1.2
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
  - 10.0.2.3
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
  - 10.10.10.10
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
  - 172.16.0.5
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
  - 172.16.1.6
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
  - 172.18.1.20
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
  - 172.31.255.254
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
  - 192.0.2.50
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
  - 192.168.0.1
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
  - 192.168.0.100
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
  - 192.168.1.10
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
  - 192.168.1.11
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
  - 192.168.2.12
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
  - 192.168.100.100
+ for ip in "${target_addresses_source[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
  - 198.51.100.75
+ for ip in "${target_addresses_source[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
  - 203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ IFS=,
++ echo -e 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ target_addresses=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ true == true ]]
+ message 'Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
+ [[ -n Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ] ]]
+ local 'message=Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
+ echo -e 'Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ -n '' ]]
+ [[ 1 -eq 0 ]]
+ [[ -n '' ]]
+ [[ -n '' ]]
+ [[ 1 -eq 0 ]]
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ set +e
+ detect_vendor ./configs/fortinet/fg-lab-test-fw.cfg
+ local config_file=./configs/fortinet/fg-lab-test-fw.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/fortinet/fg-lab-test-fw.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: config): '
+ [[ -n Parsing [ fortinet ] configs (by: config):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: config): '
+ echo -e 'Parsing [ fortinet ] configs (by: config): '
Parsing [ fortinet ] configs (by: config): 
+ [[ -n ./resources/fg-lab-test-fw.cfg ]]
+ base_output=./resources/fg-lab-test-fw.cfg
++ echo -e ./configs/fortinet/fg-lab-test-fw.cfg
++ sed 's|^\./||'
+ rel_path=configs/fortinet/fg-lab-test-fw.cfg
+ target_output=./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=./configs/fortinet/fg-lab-test-fw.cfg' '--output=./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=./configs/fortinet/fg-lab-test-fw.cfg --output=./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg ]'
+ [[ -n Configuration File [ ./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg ] ]]
+ local 'message=Configuration File [ ./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg ]'
+ echo -e 'Configuration File [ ./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg ]'
Configuration File [ ./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg
     1	#hostname="fg-lab-test-fw"
     2	#model="FortiGate-40F"
     3	
     4	config system interface
     5	 edit "lab"
     6	  set ip 10.0.2.3 255.255.255.0
     7	 next
     8	end
     9	
    10	config firewall address
    11	 edit "Phantom-Node"
    12	  set subnet 10.0.2.3 255.255.255.255
    13	  set comment "Lab test VM"
    14	 next
    15	end
    16	
    17	config system interface
    18	 edit "wan1"
    19	  set ip 198.51.100.75 255.255.255.0
    20	  set alias "Branch ISP"
    21	 next
    22	 edit "internal"
    23	  set ip 192.168.2.12 255.255.255.0
    24	  set alias "User LAN"
    25	 next
    26	end
    27	
    28	config firewall address
    29	 edit "Branch-Gateway"
    30	  set subnet 192.168.2.12 255.255.255.255
    31	  set comment "Primary LAN gateway"
    32	 next
    33	 edit "Branch-Public"
    34	  set subnet 198.51.100.75 255.255.255.255
    35	  set comment "Branch NAT"
    36	 next
    37	end
    38	
    39	config firewall address
    40	 edit "IronMan-HQ"
    41	  set subnet 10.0.0.1 255.255.255.255
    42	  set comment "Main node at Stark Tower"
    43	 next
    44	 edit "Spidey-Sandbox"
    45	  set subnet 10.0.1.2 255.255.255.255
    46	  set comment "QA node in Peter's Lab"
    47	 next
    48	 edit "Panther-Vault"
    49	  set subnet 192.168.1.10 255.255.255.255
    50	  set comment "Wakandan data store"
    51	 next
    52	 edit "Public-Test"
    53	  set subnet 203.0.113.25 255.255.255.255
    54	  set comment "Public NAT exposure for Red Skull trap"
    55	 next
    56	 edit "Guardians-Relay"
    57	  set subnet 192.168.0.1 255.255.255.255
    58	  set comment "Backup uplink for Milano crew"
    59	 next
    60	end
    61	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ tree ./resources/fg-lab-test-fw.cfg
./resources/fg-lab-test-fw.cfg
`-- configs
    `-- fortinet
        `-- fg-lab-test-fw.cfg

3 directories, 1 file
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0hO9nrYlp ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.T0hO9nrYlp

$ bash scripts/network-configs.shell \
       --ips-list=ips.list \
       --config=./configs/fortinet/fg-lab-test-fw.cfg \
       --output=./resources/fg-lab-test-fw.cfg \
       --verbose ;

Loaded (default) IPs addresses (count): 17

  - 10.0.0.1
  - 10.0.1.2
  - 10.0.2.3
  - 10.10.10.10
  - 172.16.0.5
  - 172.16.1.6
  - 172.18.1.20
  - 172.31.255.254
  - 192.0.2.50
  - 192.168.0.1
  - 192.168.0.100
  - 192.168.1.10
  - 192.168.1.11
  - 192.168.2.12
  - 192.168.100.100
  - 198.51.100.75
  - 203.0.113.25

Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]

Parsing [ fortinet ] configs (by: config): 
Configuration File [ ./resources/fg-lab-test-fw.cfg/configs/fortinet/fg-lab-test-fw.cfg ]

     1	#hostname="fg-lab-test-fw"
     2	#model="FortiGate-40F"
     3	
     4	config system interface
     5	 edit "lab"
     6	  set ip 10.0.2.3 255.255.255.0
     7	 next
     8	end
     9	
    10	config firewall address
    11	 edit "Phantom-Node"
    12	  set subnet 10.0.2.3 255.255.255.255
    13	  set comment "Lab test VM"
    14	 next
    15	end
    16	
    17	config system interface
    18	 edit "wan1"
    19	  set ip 198.51.100.75 255.255.255.0
    20	  set alias "Branch ISP"
    21	 next
    22	 edit "internal"
    23	  set ip 192.168.2.12 255.255.255.0
    24	  set alias "User LAN"
    25	 next
    26	end
    27	
    28	config firewall address
    29	 edit "Branch-Gateway"
    30	  set subnet 192.168.2.12 255.255.255.255
    31	  set comment "Primary LAN gateway"
    32	 next
    33	 edit "Branch-Public"
    34	  set subnet 198.51.100.75 255.255.255.255
    35	  set comment "Branch NAT"
    36	 next
    37	end
    38	
    39	config firewall address
    40	 edit "IronMan-HQ"
    41	  set subnet 10.0.0.1 255.255.255.255
    42	  set comment "Main node at Stark Tower"
    43	 next
    44	 edit "Spidey-Sandbox"
    45	  set subnet 10.0.1.2 255.255.255.255
    46	  set comment "QA node in Peter's Lab"
    47	 next
    48	 edit "Panther-Vault"
    49	  set subnet 192.168.1.10 255.255.255.255
    50	  set comment "Wakandan data store"
    51	 next
    52	 edit "Public-Test"
    53	  set subnet 203.0.113.25 255.255.255.255
    54	  set comment "Public NAT exposure for Red Skull trap"
    55	 next
    56	 edit "Guardians-Relay"
    57	  set subnet 192.168.0.1 255.255.255.255
    58	  set comment "Backup uplink for Milano crew"
    59	 next
    60	end
    61	

./resources/fg-lab-test-fw.cfg
`-- configs
    `-- fortinet
        `-- fg-lab-test-fw.cfg

3 directories, 1 file
