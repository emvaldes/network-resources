$ bash -x ./scripts/network-configs.shell \
          --ip-addr="198.51.100.75,203.0.113.10" \
          --location=./configs \
          --output=./.outputs \
          --verbose ;

+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3dRxhvHn9y
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3dRxhvHn9y
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias display-help=display_help
+ alias new-line=newline
+ alias print-message=message
+ alias detect-vendor=detect_vendor
+ alias parse-cisco=main
+ [[ -z '' ]]
+ export script_name=./scripts/network-configs.shell
+ script_name=./scripts/network-configs.shell
+ [[ 4 -ge 1 ]]
+ [[ --ip-addr=198.51.100.75,203.0.113.10 =~ ^-*(h|help)$ ]]
+ main --ip-addr=198.51.100.75,203.0.113.10 --location=./configs --output=./.outputs --verbose
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=198.51.100.75,203.0.113.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ export search_pattern=198.51.100.75,203.0.113.10
+ search_pattern=198.51.100.75,203.0.113.10
+ [[ ip-addr =~ ^(config|c)$ ]]
+ [[ ip-addr =~ ^(search|s)$ ]]
+ [[ ip-addr =~ ^(location|l)$ ]]
+ [[ ip-addr =~ ^(output|o)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --location=./configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ location =~ ^(ip-addr|i)$ ]]
+ [[ location =~ ^(config|c)$ ]]
+ [[ location =~ ^(search|s)$ ]]
+ [[ location =~ ^(location|l)$ ]]
+ export search_location=./configs
+ search_location=./configs
+ [[ location =~ ^(output|o)$ ]]
+ [[ location == \h\e\l\p ]]
+ [[ location == \d\e\b\u\g ]]
+ [[ location == \d\r\y\-\r\u\n ]]
+ [[ location == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --output=./.outputs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ output =~ ^(ip-addr|i)$ ]]
+ [[ output =~ ^(config|c)$ ]]
+ [[ output =~ ^(search|s)$ ]]
+ [[ output =~ ^(location|l)$ ]]
+ [[ output =~ ^(output|o)$ ]]
+ export output_config=./.outputs
+ output_config=./.outputs
+ [[ output == \h\e\l\p ]]
+ [[ output == \d\e\b\u\g ]]
+ [[ output == \d\r\y\-\r\u\n ]]
+ [[ output == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(output|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS='
'
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
+ configs_listing=()
+ declare -a configs_listing
+ [[ -z 198.51.100.75,203.0.113.10 ]]
+ configs_listing=()
+ [[ -n '' ]]
+ [[ -n '' ]]
+ [[ -n ./configs ]]
+ [[ -d ./configs ]]
+ mapfile -t configs_listing
++ find ./configs -type f
+ [[ 31 -eq 0 ]]
+ matched_configs=()
+ declare -a matched_configs
+ IFS=,
+ read -ra ip_list
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/fw5.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/switch2.conf
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/misc/switch2.conf
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/fw6.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/misc/fw6.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/fw3.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/misc/fw3.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/fw2.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/switch3.conf
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/misc/switch3.conf
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/switch4.conf
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/misc/switch4.conf
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/switch1.conf
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/misc/switch1.conf
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/myname
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/myname
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/f5/bigip1.ignore
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/f5/bigip1.ignore
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/access-sw1-west.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/access-sw1-west.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/core-router-01.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/core-router-01.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/core-fw-dmz-01.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/datacenter-fw-core.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/datacenter-fw-core.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/access-switch-07.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/access-switch-07.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/campus-sw-access01.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/campus-sw-access01.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/branch-fw-03.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/hq-core-rtr-02.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/perimeter-fw1.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/perimeter-fw1.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/hq-core-rtr.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/hq-core-rtr.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/branch-fw-snmp.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/branch-fw-snmp.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/paloalto/pa1.ignore
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/paloalto/pa1.ignore
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/juniper/srx1.ignore
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-campus-core.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/fortinet/fg-campus-core.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-fw-dmz-01.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-lab-test-fw.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-testing-config.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/fortinet/fg-testing-config.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-datacenter-east.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/fortinet/fg-datacenter-east.cfg
+ [[ 12 -gt 0 ]]
+ message 'Matching IPs found in 12 files:'
+ [[ -n Matching IPs found in 12 files: ]]
+ local 'message=Matching IPs found in 12 files:'
+ echo -e 'Matching IPs found in 12 files:'
Matching IPs found in 12 files:
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/misc/fw5.cfg'
+ [[ -n   - ./configs/misc/fw5.cfg ]]
+ local 'message=  - ./configs/misc/fw5.cfg'
+ echo -e '  - ./configs/misc/fw5.cfg'
  - ./configs/misc/fw5.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/misc/fw2.cfg'
+ [[ -n   - ./configs/misc/fw2.cfg ]]
+ local 'message=  - ./configs/misc/fw2.cfg'
+ echo -e '  - ./configs/misc/fw2.cfg'
  - ./configs/misc/fw2.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/core-fw-dmz-01.cfg'
+ [[ -n   - ./configs/cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - ./configs/cisco/core-fw-dmz-01.cfg'
+ echo -e '  - ./configs/cisco/core-fw-dmz-01.cfg'
  - ./configs/cisco/core-fw-dmz-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/branch-isr-02.cfg'
+ [[ -n   - ./configs/cisco/branch-isr-02.cfg ]]
+ local 'message=  - ./configs/cisco/branch-isr-02.cfg'
+ echo -e '  - ./configs/cisco/branch-isr-02.cfg'
  - ./configs/cisco/branch-isr-02.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/branch-fw-03.cfg'
+ [[ -n   - ./configs/cisco/branch-fw-03.cfg ]]
+ local 'message=  - ./configs/cisco/branch-fw-03.cfg'
+ echo -e '  - ./configs/cisco/branch-fw-03.cfg'
  - ./configs/cisco/branch-fw-03.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/hq-core-rtr-02.cfg'
+ [[ -n   - ./configs/cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - ./configs/cisco/hq-core-rtr-02.cfg'
+ echo -e '  - ./configs/cisco/hq-core-rtr-02.cfg'
  - ./configs/cisco/hq-core-rtr-02.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n   - ./configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - ./configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '  - ./configs/cisco/dmz-fw2-backup.cfg'
  - ./configs/cisco/dmz-fw2-backup.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/juniper/srx1.ignore'
+ [[ -n   - ./configs/juniper/srx1.ignore ]]
+ local 'message=  - ./configs/juniper/srx1.ignore'
+ echo -e '  - ./configs/juniper/srx1.ignore'
  - ./configs/juniper/srx1.ignore
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - ./configs/fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - ./configs/fortinet/fg-fw-dmz-01.cfg'
  - ./configs/fortinet/fg-fw-dmz-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - ./configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - ./configs/fortinet/fg-branch-vpn-01.cfg'
  - ./configs/fortinet/fg-branch-vpn-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - ./configs/fortinet/fg-lab-test-fw.cfg'
  - ./configs/fortinet/fg-lab-test-fw.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-testing-config.cfg'
+ [[ -n   - ./configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-testing-config.cfg'
+ echo -e '  - ./configs/fortinet/fg-testing-config.cfg'
  - ./configs/fortinet/fg-testing-config.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ configs_listing=("${matched_configs[@]}")
+ [[ 12 -eq 0 ]]
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/misc/fw5.cfg ]]
+ set +e
+ detect_vendor ./configs/misc/fw5.cfg
+ local config_file=./configs/misc/fw5.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/misc/fw5.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/misc/fw5.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ -n ./.outputs ]]
+ base_output=./.outputs
++ echo ./configs/misc/fw5.cfg
++ sed 's|^\./||'
+ rel_path=configs/misc/fw5.cfg
+ target_output=./.outputs/configs/misc/fw5.cfg
++ dirname ./.outputs/configs/misc/fw5.cfg
+ local output_dir=./.outputs/configs/misc
+ [[ ! -d ./.outputs/configs/misc ]]
+ mkdir -p ./.outputs/configs/misc
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/misc/fw5.cfg' '--output=./.outputs/configs/misc/fw5.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/misc/fw5.cfg --output=./.outputs/configs/misc/fw5.cfg --verbose
+ [[ true == true ]]
+ newline 1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ ./.outputs/configs/misc/fw5.cfg ]'
+ [[ -n Configuration File [ ./.outputs/configs/misc/fw5.cfg ] ]]
+ local 'message=Configuration File [ ./.outputs/configs/misc/fw5.cfg ]'
+ echo -e 'Configuration File [ ./.outputs/configs/misc/fw5.cfg ]'
Configuration File [ ./.outputs/configs/misc/fw5.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./.outputs/configs/misc/fw5.cfg
     1
     2	object-group network Hydra-Edge
     3	 description Remote site uplink
     4	 network-object host 192.168.2.12
     5	 network-object host 198.51.100.75
     6
     7	object network Hydra-Link
     8	 host 198.51.100.75
     9
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/misc/fw2.cfg ]]
+ set +e
+ detect_vendor ./configs/misc/fw2.cfg
+ local config_file=./configs/misc/fw2.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/misc/fw2.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/misc/fw2.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ -n ./.outputs ]]
+ base_output=./.outputs
++ echo ./configs/misc/fw2.cfg
++ sed 's|^\./||'
+ rel_path=configs/misc/fw2.cfg
+ target_output=./.outputs/configs/misc/fw2.cfg
++ dirname ./.outputs/configs/misc/fw2.cfg
+ local output_dir=./.outputs/configs/misc
+ [[ ! -d ./.outputs/configs/misc ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/misc/fw2.cfg' '--output=./.outputs/configs/misc/fw2.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/misc/fw2.cfg --output=./.outputs/configs/misc/fw2.cfg --verbose
+ [[ true == true ]]
+ newline 1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ ./.outputs/configs/misc/fw2.cfg ]'
+ [[ -n Configuration File [ ./.outputs/configs/misc/fw2.cfg ] ]]
+ local 'message=Configuration File [ ./.outputs/configs/misc/fw2.cfg ]'
+ echo -e 'Configuration File [ ./.outputs/configs/misc/fw2.cfg ]'
Configuration File [ ./.outputs/configs/misc/fw2.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./.outputs/configs/misc/fw2.cfg
     1
     2	object-group network Wayne-DMZ
     3	 description External public resources
     4	 network-object host 203.0.113.25
     5	 network-object host 198.51.100.75
     6
     7	object network Gotham-VPN
     8	 host 198.51.100.75
     9	 description Encrypted edge gateway
    10
    11	access-list OUTSIDE extended permit ip any host 198.51.100.75
    12
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/core-fw-dmz-01.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/core-fw-dmz-01.cfg
+ local config_file=./configs/cisco/core-fw-dmz-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/core-fw-dmz-01.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/core-fw-dmz-01.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ -n ./.outputs ]]
+ base_output=./.outputs
++ echo ./configs/cisco/core-fw-dmz-01.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/core-fw-dmz-01.cfg
+ target_output=./.outputs/configs/cisco/core-fw-dmz-01.cfg
++ dirname ./.outputs/configs/cisco/core-fw-dmz-01.cfg
+ local output_dir=./.outputs/configs/cisco
+ [[ ! -d ./.outputs/configs/cisco ]]
+ mkdir -p ./.outputs/configs/cisco
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/core-fw-dmz-01.cfg' '--output=./.outputs/configs/cisco/core-fw-dmz-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/core-fw-dmz-01.cfg --output=./.outputs/configs/cisco/core-fw-dmz-01.cfg --verbose
+ [[ true == true ]]
+ newline 1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ ./.outputs/configs/cisco/core-fw-dmz-01.cfg ]'
+ [[ -n Configuration File [ ./.outputs/configs/cisco/core-fw-dmz-01.cfg ] ]]
+ local 'message=Configuration File [ ./.outputs/configs/cisco/core-fw-dmz-01.cfg ]'
+ echo -e 'Configuration File [ ./.outputs/configs/cisco/core-fw-dmz-01.cfg ]'
Configuration File [ ./.outputs/configs/cisco/core-fw-dmz-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./.outputs/configs/cisco/core-fw-dmz-01.cfg
     1	ASA Version 9.16(2)
     2	hostname core-fw-dmz-01
     3	domain-name corp.dmz.local
     4
     5	object-group network Wayne-DMZ
     6	 description External public resources
     7	 network-object host 203.0.113.25
     8	 network-object host 198.51.100.75
     9
    10	object network Gotham-VPN
    11	 host 198.51.100.75
    12	 description Encrypted edge gateway
    13
    14	access-list OUTSIDE extended permit ip any host 198.51.100.75
    15
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/branch-isr-02.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/branch-isr-02.cfg
+ local config_file=./configs/cisco/branch-isr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/branch-isr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/branch-isr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ -n ./.outputs ]]
+ base_output=./.outputs
++ echo ./configs/cisco/branch-isr-02.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/branch-isr-02.cfg
+ target_output=./.outputs/configs/cisco/branch-isr-02.cfg
++ dirname ./.outputs/configs/cisco/branch-isr-02.cfg
+ local output_dir=./.outputs/configs/cisco
+ [[ ! -d ./.outputs/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/branch-isr-02.cfg' '--output=./.outputs/configs/cisco/branch-isr-02.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/branch-isr-02.cfg --output=./.outputs/configs/cisco/branch-isr-02.cfg --verbose
+ [[ true == true ]]
+ newline 1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ ./.outputs/configs/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ ./.outputs/configs/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ ./.outputs/configs/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ ./.outputs/configs/cisco/branch-isr-02.cfg ]'
Configuration File [ ./.outputs/configs/cisco/branch-isr-02.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./.outputs/configs/cisco/branch-isr-02.cfg
     1	hostname branch-isr-02
     2
     3	object network Hydra-Link
     4	 host 198.51.100.75
     5	 description Branch NAT egress
     6
     7	object-group network Hydra-Edge
     8	 description Remote site uplink
     9	 network-object host 192.168.2.12
    10	 network-object host 198.51.100.75
    11
    12	access-list OUTSIDE extended permit ip any host 198.51.100.75
    13
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/branch-fw-03.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/branch-fw-03.cfg
+ local config_file=./configs/cisco/branch-fw-03.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/branch-fw-03.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/branch-fw-03.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ -n ./.outputs ]]
+ base_output=./.outputs
++ echo ./configs/cisco/branch-fw-03.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/branch-fw-03.cfg
+ target_output=./.outputs/configs/cisco/branch-fw-03.cfg
++ dirname ./.outputs/configs/cisco/branch-fw-03.cfg
+ local output_dir=./.outputs/configs/cisco
+ [[ ! -d ./.outputs/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/branch-fw-03.cfg' '--output=./.outputs/configs/cisco/branch-fw-03.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/branch-fw-03.cfg --output=./.outputs/configs/cisco/branch-fw-03.cfg --verbose
+ [[ true == true ]]
+ newline 1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ ./.outputs/configs/cisco/branch-fw-03.cfg ]'
+ [[ -n Configuration File [ ./.outputs/configs/cisco/branch-fw-03.cfg ] ]]
+ local 'message=Configuration File [ ./.outputs/configs/cisco/branch-fw-03.cfg ]'
+ echo -e 'Configuration File [ ./.outputs/configs/cisco/branch-fw-03.cfg ]'
Configuration File [ ./.outputs/configs/cisco/branch-fw-03.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./.outputs/configs/cisco/branch-fw-03.cfg
     1	ASA Version 9.9(2)
     2	hostname branch-fw-03
     3	domain-name remote.corp.com
     4
     5	interface GigabitEthernet0/0
     6	 nameif outside
     7	 ip address 198.51.100.75 255.255.255.0
     8	 security-level 0
     9	 description ISP Link
    10
    11	object network Hydra-Link
    12	 host 198.51.100.75
    13	 description Public NAT IP
    14
    15	object-group network Hydra-Edge
    16	 description Remote site uplink
    17	 network-object host 192.168.2.12
    18	 network-object host 198.51.100.75
    19
    20	access-list OUTSIDE extended permit ip any host 198.51.100.75
    21
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/hq-core-rtr-02.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/hq-core-rtr-02.cfg
+ local config_file=./configs/cisco/hq-core-rtr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/hq-core-rtr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/hq-core-rtr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ -n ./.outputs ]]
+ base_output=./.outputs
++ echo ./configs/cisco/hq-core-rtr-02.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/hq-core-rtr-02.cfg
+ target_output=./.outputs/configs/cisco/hq-core-rtr-02.cfg
++ dirname ./.outputs/configs/cisco/hq-core-rtr-02.cfg
+ local output_dir=./.outputs/configs/cisco
+ [[ ! -d ./.outputs/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/hq-core-rtr-02.cfg' '--output=./.outputs/configs/cisco/hq-core-rtr-02.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/hq-core-rtr-02.cfg --output=./.outputs/configs/cisco/hq-core-rtr-02.cfg --verbose
+ [[ true == true ]]
+ newline 1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ ./.outputs/configs/cisco/hq-core-rtr-02.cfg ]'
+ [[ -n Configuration File [ ./.outputs/configs/cisco/hq-core-rtr-02.cfg ] ]]
+ local 'message=Configuration File [ ./.outputs/configs/cisco/hq-core-rtr-02.cfg ]'
+ echo -e 'Configuration File [ ./.outputs/configs/cisco/hq-core-rtr-02.cfg ]'
Configuration File [ ./.outputs/configs/cisco/hq-core-rtr-02.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./.outputs/configs/cisco/hq-core-rtr-02.cfg
     1	hostname hq-core-rtr-02
     2
     3	ntp server 198.51.100.75 prefer
     4
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/dmz-fw2-backup.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/dmz-fw2-backup.cfg
+ local config_file=./configs/cisco/dmz-fw2-backup.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/dmz-fw2-backup.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/dmz-fw2-backup.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ -n ./.outputs ]]
+ base_output=./.outputs
++ echo ./configs/cisco/dmz-fw2-backup.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/dmz-fw2-backup.cfg
+ target_output=./.outputs/configs/cisco/dmz-fw2-backup.cfg
++ dirname ./.outputs/configs/cisco/dmz-fw2-backup.cfg
+ local output_dir=./.outputs/configs/cisco
+ [[ ! -d ./.outputs/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/dmz-fw2-backup.cfg' '--output=./.outputs/configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/dmz-fw2-backup.cfg --output=./.outputs/configs/cisco/dmz-fw2-backup.cfg --verbose
+ [[ true == true ]]
+ newline 1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ ./.outputs/configs/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ ./.outputs/configs/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ ./.outputs/configs/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ ./.outputs/configs/cisco/dmz-fw2-backup.cfg ]'
Configuration File [ ./.outputs/configs/cisco/dmz-fw2-backup.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./.outputs/configs/cisco/dmz-fw2-backup.cfg
     1	ASA Version 9.12(4)
     2	hostname dmz-fw2-backup
     3	domain-name global.dmz.example.net
     4
     5	interface GigabitEthernet0/2
     6	 nameif outside
     7	 ip address 198.51.100.75 255.255.255.0
     8	 description Outbound Internet NAT interface
     9
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/juniper/srx1.ignore ]]
+ set +e
+ detect_vendor ./configs/juniper/srx1.ignore
+ local config_file=./configs/juniper/srx1.ignore
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/juniper/srx1.ignore
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/juniper/srx1.ignore
+ return 3
+ local vendor_code=3
+ set -e
+ case "${vendor_code}" in
+ message 'Unsupported configuration type: ./configs/juniper/srx1.ignore'
+ [[ -n Unsupported configuration type: ./configs/juniper/srx1.ignore ]]
+ local 'message=Unsupported configuration type: ./configs/juniper/srx1.ignore'
+ echo -e 'Unsupported configuration type: ./configs/juniper/srx1.ignore'
Unsupported configuration type: ./configs/juniper/srx1.ignore
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ exit 3
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3dRxhvHn9y ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3dRxhvHn9y
