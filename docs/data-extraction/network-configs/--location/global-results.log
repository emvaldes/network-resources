$ bash -x ./scripts/network-configs.shell \
           --ip-addr="198.51.100.75,203.0.113.10" \
           --location=./configs \
           --verbose ;

+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s5ehWmJuv6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s5ehWmJuv6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias display-help=display_help
+ alias new-line=newline
+ alias print-message=message
+ alias detect-vendor=detect_vendor
+ alias parse-cisco=main
+ [[ -z '' ]]
+ export script_name=./scripts/network-configs.shell
+ script_name=./scripts/network-configs.shell
+ [[ 3 -ge 1 ]]
+ [[ --ip-addr=198.51.100.75,203.0.113.10 =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ main --ip-addr=198.51.100.75,203.0.113.10 --location=./configs --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=198.51.100.75,203.0.113.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local search_pattern=198.51.100.75,203.0.113.10
+ [[ ip-addr =~ ^(config|c)$ ]]
+ [[ ip-addr =~ ^(search|s)$ ]]
+ [[ ip-addr =~ ^(location|l)$ ]]
+ [[ ip-addr =~ ^(output|o)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --location=./configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ location =~ ^(ip-addr|i)$ ]]
+ [[ location =~ ^(config|c)$ ]]
+ [[ location =~ ^(search|s)$ ]]
+ [[ location =~ ^(location|l)$ ]]
+ local search_location=./configs
+ [[ location =~ ^(output|o)$ ]]
+ [[ location == \h\e\l\p ]]
+ [[ location == \d\e\b\u\g ]]
+ [[ location == \d\r\y\-\r\u\n ]]
+ [[ location == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(output|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local script_helper=false
+ [[ -z '' ]]
+ export output_config=./resources
+ output_config=./resources
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
+ configs_listing=()
+ declare -a configs_listing
+ local action_class=unknown
+ [[ -n '' ]]
+ [[ -z ./configs ]]
+ [[ -z 198.51.100.75,203.0.113.10 ]]
+ [[ -n '' ]]
+ [[ 0 -eq 0 ]]
+ [[ -n ./configs ]]
+ [[ -d ./configs ]]
+ mapfile -t configs_listing
++ find ./configs -type f -name '*.cfg'
+ [[ 23 -eq 0 ]]
+ [[ 23 -gt 0 ]]
+ [[ -n ./configs ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ action_class=location
+ [[ -n '' ]]
+ [[ -n ./configs ]]
+ matched_configs=()
+ declare -a matched_configs
+ IFS=,
+ read -ra ip_list
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/fw5.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/fw6.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/misc/fw6.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/fw3.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/misc/fw3.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/misc/fw2.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/access-sw1-west.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/access-sw1-west.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/core-router-01.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/core-router-01.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/core-fw-dmz-01.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/datacenter-fw-core.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/datacenter-fw-core.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/access-switch-07.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/access-switch-07.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/campus-sw-access01.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/campus-sw-access01.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/branch-fw-03.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/hq-core-rtr-02.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/perimeter-fw1.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/perimeter-fw1.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/hq-core-rtr.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/hq-core-rtr.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/branch-fw-snmp.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/cisco/branch-fw-snmp.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-campus-core.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/fortinet/fg-campus-core.cfg
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-fw-dmz-01.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-lab-test-fw.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-testing-config.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/fortinet/fg-testing-config.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-datacenter-east.cfg
+ for ip in "${ip_list[@]}"
+ grep -qF 203.0.113.10 ./configs/fortinet/fg-datacenter-east.cfg
+ [[ 11 -gt 0 ]]
+ message 'Matching IPs found in 11 files:'
+ [[ -n Matching IPs found in 11 files: ]]
+ local 'message=Matching IPs found in 11 files:'
+ echo -e 'Matching IPs found in 11 files:'
Matching IPs found in 11 files:
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/misc/fw5.cfg'
+ [[ -n   - ./configs/misc/fw5.cfg ]]
+ local 'message=  - ./configs/misc/fw5.cfg'
+ echo -e '  - ./configs/misc/fw5.cfg'
  - ./configs/misc/fw5.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/misc/fw2.cfg'
+ [[ -n   - ./configs/misc/fw2.cfg ]]
+ local 'message=  - ./configs/misc/fw2.cfg'
+ echo -e '  - ./configs/misc/fw2.cfg'
  - ./configs/misc/fw2.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/core-fw-dmz-01.cfg'
+ [[ -n   - ./configs/cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - ./configs/cisco/core-fw-dmz-01.cfg'
+ echo -e '  - ./configs/cisco/core-fw-dmz-01.cfg'
  - ./configs/cisco/core-fw-dmz-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/branch-isr-02.cfg'
+ [[ -n   - ./configs/cisco/branch-isr-02.cfg ]]
+ local 'message=  - ./configs/cisco/branch-isr-02.cfg'
+ echo -e '  - ./configs/cisco/branch-isr-02.cfg'
  - ./configs/cisco/branch-isr-02.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/branch-fw-03.cfg'
+ [[ -n   - ./configs/cisco/branch-fw-03.cfg ]]
+ local 'message=  - ./configs/cisco/branch-fw-03.cfg'
+ echo -e '  - ./configs/cisco/branch-fw-03.cfg'
  - ./configs/cisco/branch-fw-03.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/hq-core-rtr-02.cfg'
+ [[ -n   - ./configs/cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - ./configs/cisco/hq-core-rtr-02.cfg'
+ echo -e '  - ./configs/cisco/hq-core-rtr-02.cfg'
  - ./configs/cisco/hq-core-rtr-02.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n   - ./configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - ./configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '  - ./configs/cisco/dmz-fw2-backup.cfg'
  - ./configs/cisco/dmz-fw2-backup.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - ./configs/fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - ./configs/fortinet/fg-fw-dmz-01.cfg'
  - ./configs/fortinet/fg-fw-dmz-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - ./configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - ./configs/fortinet/fg-branch-vpn-01.cfg'
  - ./configs/fortinet/fg-branch-vpn-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - ./configs/fortinet/fg-lab-test-fw.cfg'
  - ./configs/fortinet/fg-lab-test-fw.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-testing-config.cfg'
+ [[ -n   - ./configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-testing-config.cfg'
+ echo -e '  - ./configs/fortinet/fg-testing-config.cfg'
  - ./configs/fortinet/fg-testing-config.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ configs_listing=("${matched_configs[@]}")
+ [[ 11 -eq 0 ]]
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/misc/fw5.cfg ]]
+ set +e
+ detect_vendor ./configs/misc/fw5.cfg
+ local config_file=./configs/misc/fw5.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/misc/fw5.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/misc/fw5.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/misc/fw5.cfg
++ sed 's|^\./||'
+ rel_path=configs/misc/fw5.cfg
+ target_output=./resources/configs/misc/fw5.cfg
++ dirname ./resources/configs/misc/fw5.cfg
+ local output_dir=./resources/configs/misc
+ [[ ! -d ./resources/configs/misc ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/misc/fw5.cfg' '--output=./resources/configs/misc/fw5.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/misc/fw5.cfg --output=./resources/configs/misc/fw5.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/misc/fw5.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/misc/fw5.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/misc/fw5.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/misc/fw5.cfg ]'
Configuration File [ ./resources/configs/misc/fw5.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/misc/fw5.cfg
     1	object-group network Hydra-Edge
     2	 description Remote site uplink
     3	 network-object host 192.168.2.12
     4	 network-object host 198.51.100.75
     5	
     6	object network Hydra-Link
     7	 host 198.51.100.75
     8	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/misc/fw2.cfg ]]
+ set +e
+ detect_vendor ./configs/misc/fw2.cfg
+ local config_file=./configs/misc/fw2.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/misc/fw2.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/misc/fw2.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/misc/fw2.cfg
++ sed 's|^\./||'
+ rel_path=configs/misc/fw2.cfg
+ target_output=./resources/configs/misc/fw2.cfg
++ dirname ./resources/configs/misc/fw2.cfg
+ local output_dir=./resources/configs/misc
+ [[ ! -d ./resources/configs/misc ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/misc/fw2.cfg' '--output=./resources/configs/misc/fw2.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/misc/fw2.cfg --output=./resources/configs/misc/fw2.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/misc/fw2.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/misc/fw2.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/misc/fw2.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/misc/fw2.cfg ]'
Configuration File [ ./resources/configs/misc/fw2.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/misc/fw2.cfg
     1	object-group network Wayne-DMZ
     2	 description External public resources
     3	 network-object host 203.0.113.25
     4	 network-object host 198.51.100.75
     5	
     6	object network Gotham-VPN
     7	 host 198.51.100.75
     8	 description Encrypted edge gateway
     9	
    10	access-list OUTSIDE extended permit ip any host 198.51.100.75
    11	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/core-fw-dmz-01.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/core-fw-dmz-01.cfg
+ local config_file=./configs/cisco/core-fw-dmz-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/core-fw-dmz-01.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/core-fw-dmz-01.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/cisco/core-fw-dmz-01.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/core-fw-dmz-01.cfg
+ target_output=./resources/configs/cisco/core-fw-dmz-01.cfg
++ dirname ./resources/configs/cisco/core-fw-dmz-01.cfg
+ local output_dir=./resources/configs/cisco
+ [[ ! -d ./resources/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/core-fw-dmz-01.cfg' '--output=./resources/configs/cisco/core-fw-dmz-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/core-fw-dmz-01.cfg --output=./resources/configs/cisco/core-fw-dmz-01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/cisco/core-fw-dmz-01.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/cisco/core-fw-dmz-01.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/cisco/core-fw-dmz-01.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/cisco/core-fw-dmz-01.cfg ]'
Configuration File [ ./resources/configs/cisco/core-fw-dmz-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/cisco/core-fw-dmz-01.cfg
     1	ASA Version 9.16(2)
     2	hostname core-fw-dmz-01
     3	domain-name corp.dmz.local
     4	
     5	object-group network Wayne-DMZ
     6	 description External public resources
     7	 network-object host 203.0.113.25
     8	 network-object host 198.51.100.75
     9	
    10	object network Gotham-VPN
    11	 host 198.51.100.75
    12	 description Encrypted edge gateway
    13	
    14	access-list OUTSIDE extended permit ip any host 198.51.100.75
    15	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/branch-isr-02.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/branch-isr-02.cfg
+ local config_file=./configs/cisco/branch-isr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/branch-isr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/branch-isr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/cisco/branch-isr-02.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/branch-isr-02.cfg
+ target_output=./resources/configs/cisco/branch-isr-02.cfg
++ dirname ./resources/configs/cisco/branch-isr-02.cfg
+ local output_dir=./resources/configs/cisco
+ [[ ! -d ./resources/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/branch-isr-02.cfg' '--output=./resources/configs/cisco/branch-isr-02.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/branch-isr-02.cfg --output=./resources/configs/cisco/branch-isr-02.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]'
Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/cisco/branch-isr-02.cfg
     1	hostname branch-isr-02
     2	
     3	object network Hydra-Link
     4	 host 198.51.100.75
     5	 description Branch NAT egress
     6	
     7	object-group network Hydra-Edge
     8	 description Remote site uplink
     9	 network-object host 192.168.2.12
    10	 network-object host 198.51.100.75
    11	
    12	access-list OUTSIDE extended permit ip any host 198.51.100.75
    13	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/branch-fw-03.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/branch-fw-03.cfg
+ local config_file=./configs/cisco/branch-fw-03.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/branch-fw-03.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/branch-fw-03.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/cisco/branch-fw-03.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/branch-fw-03.cfg
+ target_output=./resources/configs/cisco/branch-fw-03.cfg
++ dirname ./resources/configs/cisco/branch-fw-03.cfg
+ local output_dir=./resources/configs/cisco
+ [[ ! -d ./resources/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/branch-fw-03.cfg' '--output=./resources/configs/cisco/branch-fw-03.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/branch-fw-03.cfg --output=./resources/configs/cisco/branch-fw-03.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/cisco/branch-fw-03.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/cisco/branch-fw-03.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/cisco/branch-fw-03.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/cisco/branch-fw-03.cfg ]'
Configuration File [ ./resources/configs/cisco/branch-fw-03.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/cisco/branch-fw-03.cfg
     1	ASA Version 9.9(2)
     2	hostname branch-fw-03
     3	domain-name remote.corp.com
     4	
     5	interface GigabitEthernet0/0
     6	 nameif outside
     7	 ip address 198.51.100.75 255.255.255.0
     8	 security-level 0
     9	 description ISP Link
    10	
    11	object network Hydra-Link
    12	 host 198.51.100.75
    13	 description Public NAT IP
    14	
    15	object-group network Hydra-Edge
    16	 description Remote site uplink
    17	 network-object host 192.168.2.12
    18	 network-object host 198.51.100.75
    19	
    20	access-list OUTSIDE extended permit ip any host 198.51.100.75
    21	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/hq-core-rtr-02.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/hq-core-rtr-02.cfg
+ local config_file=./configs/cisco/hq-core-rtr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/hq-core-rtr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/hq-core-rtr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/cisco/hq-core-rtr-02.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/hq-core-rtr-02.cfg
+ target_output=./resources/configs/cisco/hq-core-rtr-02.cfg
++ dirname ./resources/configs/cisco/hq-core-rtr-02.cfg
+ local output_dir=./resources/configs/cisco
+ [[ ! -d ./resources/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/hq-core-rtr-02.cfg' '--output=./resources/configs/cisco/hq-core-rtr-02.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/hq-core-rtr-02.cfg --output=./resources/configs/cisco/hq-core-rtr-02.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/cisco/hq-core-rtr-02.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/cisco/hq-core-rtr-02.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/cisco/hq-core-rtr-02.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/cisco/hq-core-rtr-02.cfg ]'
Configuration File [ ./resources/configs/cisco/hq-core-rtr-02.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/cisco/hq-core-rtr-02.cfg
     1	hostname hq-core-rtr-02
     2	
     3	ntp server 198.51.100.75 prefer
     4	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/dmz-fw2-backup.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/dmz-fw2-backup.cfg
+ local config_file=./configs/cisco/dmz-fw2-backup.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/dmz-fw2-backup.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/dmz-fw2-backup.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/cisco/dmz-fw2-backup.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/dmz-fw2-backup.cfg
+ target_output=./resources/configs/cisco/dmz-fw2-backup.cfg
++ dirname ./resources/configs/cisco/dmz-fw2-backup.cfg
+ local output_dir=./resources/configs/cisco
+ [[ ! -d ./resources/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/dmz-fw2-backup.cfg' '--output=./resources/configs/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/dmz-fw2-backup.cfg --output=./resources/configs/cisco/dmz-fw2-backup.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/cisco/dmz-fw2-backup.cfg ]'
Configuration File [ ./resources/configs/cisco/dmz-fw2-backup.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/cisco/dmz-fw2-backup.cfg
     1	ASA Version 9.12(4)
     2	hostname dmz-fw2-backup
     3	domain-name global.dmz.example.net
     4	
     5	interface GigabitEthernet0/2
     6	 nameif outside
     7	 ip address 198.51.100.75 255.255.255.0
     8	 description Outbound Internet NAT interface
     9	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/fortinet/fg-fw-dmz-01.cfg ]]
+ set +e
+ detect_vendor ./configs/fortinet/fg-fw-dmz-01.cfg
+ local config_file=./configs/fortinet/fg-fw-dmz-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/fortinet/fg-fw-dmz-01.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/fortinet/fg-fw-dmz-01.cfg
++ sed 's|^\./||'
+ rel_path=configs/fortinet/fg-fw-dmz-01.cfg
+ target_output=./resources/configs/fortinet/fg-fw-dmz-01.cfg
++ dirname ./resources/configs/fortinet/fg-fw-dmz-01.cfg
+ local output_dir=./resources/configs/fortinet
+ [[ ! -d ./resources/configs/fortinet ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/fortinet/fg-fw-dmz-01.cfg' '--output=./resources/configs/fortinet/fg-fw-dmz-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/fortinet/fg-fw-dmz-01.cfg --output=./resources/configs/fortinet/fg-fw-dmz-01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/fortinet/fg-fw-dmz-01.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/fortinet/fg-fw-dmz-01.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/fortinet/fg-fw-dmz-01.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/fortinet/fg-fw-dmz-01.cfg ]'
Configuration File [ ./resources/configs/fortinet/fg-fw-dmz-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/fortinet/fg-fw-dmz-01.cfg
     1	#config-version=FGT_100E-v7.0.10.F-build0485-230512
     2	#conf_file_ver=4.00
     3	#buildno=0485
     4	#serial=FGT100ETK21001234
     5	#hostname="fg-fw-dmz-01"
     6	#model="FortiGate-100E"
     7	#platform="FortiOS"
     8	#vd="root"
     9	
    10	config firewall address
    11	 edit "Falcon-Uplink"
    12	  set subnet 198.51.100.75 255.255.255.255
    13	  set comment "Encrypted relay via flight pack"
    14	 next
    15	end
    16	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/fortinet/fg-branch-vpn-01.cfg ]]
+ set +e
+ detect_vendor ./configs/fortinet/fg-branch-vpn-01.cfg
+ local config_file=./configs/fortinet/fg-branch-vpn-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/fortinet/fg-branch-vpn-01.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/fortinet/fg-branch-vpn-01.cfg
++ sed 's|^\./||'
+ rel_path=configs/fortinet/fg-branch-vpn-01.cfg
+ target_output=./resources/configs/fortinet/fg-branch-vpn-01.cfg
++ dirname ./resources/configs/fortinet/fg-branch-vpn-01.cfg
+ local output_dir=./resources/configs/fortinet
+ [[ ! -d ./resources/configs/fortinet ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/fortinet/fg-branch-vpn-01.cfg' '--output=./resources/configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/fortinet/fg-branch-vpn-01.cfg --output=./resources/configs/fortinet/fg-branch-vpn-01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/fortinet/fg-branch-vpn-01.cfg ]'
Configuration File [ ./resources/configs/fortinet/fg-branch-vpn-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/fortinet/fg-branch-vpn-01.cfg
     1	#hostname="fg-branch-vpn-01"
     2	#model="FortiGate-60F"
     3	#config-version=FGT_60F-v7.2.5.F-build1517-230421
     4	
     5	config system interface
     6	 edit "wan1"
     7	  set ip 198.51.100.75 255.255.255.0
     8	  set alias "Branch ISP"
     9	 next
    10	end
    11	
    12	config firewall address
    13	 edit "Branch-Public"
    14	  set subnet 198.51.100.75 255.255.255.255
    15	  set comment "Branch NAT"
    16	 next
    17	end
    18	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ set +e
+ detect_vendor ./configs/fortinet/fg-lab-test-fw.cfg
+ local config_file=./configs/fortinet/fg-lab-test-fw.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/fortinet/fg-lab-test-fw.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/fortinet/fg-lab-test-fw.cfg
++ sed 's|^\./||'
+ rel_path=configs/fortinet/fg-lab-test-fw.cfg
+ target_output=./resources/configs/fortinet/fg-lab-test-fw.cfg
++ dirname ./resources/configs/fortinet/fg-lab-test-fw.cfg
+ local output_dir=./resources/configs/fortinet
+ [[ ! -d ./resources/configs/fortinet ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/fortinet/fg-lab-test-fw.cfg' '--output=./resources/configs/fortinet/fg-lab-test-fw.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/fortinet/fg-lab-test-fw.cfg --output=./resources/configs/fortinet/fg-lab-test-fw.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]'
Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/fortinet/fg-lab-test-fw.cfg
     1	#hostname="fg-lab-test-fw"
     2	#model="FortiGate-40F"
     3	
     4	config system interface
     5	 edit "wan1"
     6	  set ip 198.51.100.75 255.255.255.0
     7	  set alias "Branch ISP"
     8	 next
     9	end
    10	
    11	config firewall address
    12	 edit "Branch-Public"
    13	  set subnet 198.51.100.75 255.255.255.255
    14	  set comment "Branch NAT"
    15	 next
    16	end
    17	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/fortinet/fg-testing-config.cfg ]]
+ set +e
+ detect_vendor ./configs/fortinet/fg-testing-config.cfg
+ local config_file=./configs/fortinet/fg-testing-config.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/fortinet/fg-testing-config.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/fortinet/fg-testing-config.cfg
++ sed 's|^\./||'
+ rel_path=configs/fortinet/fg-testing-config.cfg
+ target_output=./resources/configs/fortinet/fg-testing-config.cfg
++ dirname ./resources/configs/fortinet/fg-testing-config.cfg
+ local output_dir=./resources/configs/fortinet
+ [[ ! -d ./resources/configs/fortinet ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/fortinet/fg-testing-config.cfg' '--output=./resources/configs/fortinet/fg-testing-config.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/fortinet/fg-testing-config.cfg --output=./resources/configs/fortinet/fg-testing-config.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/fortinet/fg-testing-config.cfg ]'
Configuration File [ ./resources/configs/fortinet/fg-testing-config.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/fortinet/fg-testing-config.cfg
     1	#hostname="fg-branch-vpn-01"
     2	#model="FortiGate-60F"
     3	#config-version=FGT_60F-v7.2.5.F-build1517-230421
     4	
     5	config firewall policy
     6	 edit 13
     7	  set name "Remote NAT"
     8	  set srcintf "dmz"
     9	  set dstintf "wan1"
    10	  set srcaddr "10.10.10.10"
    11	  set dstaddr "203.0.113.10"
    12	  set action accept
    13	  set logtraffic all
    14	 next
    15	end
    16	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ tree ./resources
./resources
`-- configs
    |-- cisco
    |   |-- branch-fw-03.cfg
    |   |-- branch-isr-02.cfg
    |   |-- core-fw-dmz-01.cfg
    |   |-- dmz-fw2-backup.cfg
    |   `-- hq-core-rtr-02.cfg
    |-- fortinet
    |   |-- fg-branch-vpn-01.cfg
    |   |-- fg-fw-dmz-01.cfg
    |   |-- fg-lab-test-fw.cfg
    |   `-- fg-testing-config.cfg
    `-- misc
        |-- fw2.cfg
        `-- fw5.cfg

5 directories, 11 files
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s5ehWmJuv6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.s5ehWmJuv6

$ bash ./scripts/network-configs.shell \
       --ip-addr="198.51.100.75,203.0.113.10" \
       --location=./configs \
       --verbose ;

Matching IPs found in 11 files:

  - ./configs/misc/fw5.cfg
  - ./configs/misc/fw2.cfg
  - ./configs/cisco/core-fw-dmz-01.cfg
  - ./configs/cisco/branch-isr-02.cfg
  - ./configs/cisco/branch-fw-03.cfg
  - ./configs/cisco/hq-core-rtr-02.cfg
  - ./configs/cisco/dmz-fw2-backup.cfg
  - ./configs/fortinet/fg-fw-dmz-01.cfg
  - ./configs/fortinet/fg-branch-vpn-01.cfg
  - ./configs/fortinet/fg-lab-test-fw.cfg
  - ./configs/fortinet/fg-testing-config.cfg

Parsing [ cisco ] configs (by: location): 
Configuration File [ ./resources/configs/misc/fw5.cfg ]

     1	object-group network Hydra-Edge
     2	 description Remote site uplink
     3	 network-object host 192.168.2.12
     4	 network-object host 198.51.100.75
     5	
     6	object network Hydra-Link
     7	 host 198.51.100.75
     8	

Parsing [ cisco ] configs (by: location): 
Configuration File [ ./resources/configs/misc/fw2.cfg ]

     1	object-group network Wayne-DMZ
     2	 description External public resources
     3	 network-object host 203.0.113.25
     4	 network-object host 198.51.100.75
     5	
     6	object network Gotham-VPN
     7	 host 198.51.100.75
     8	 description Encrypted edge gateway
     9	
    10	access-list OUTSIDE extended permit ip any host 198.51.100.75
    11	

Parsing [ cisco ] configs (by: location): 
Configuration File [ ./resources/configs/cisco/core-fw-dmz-01.cfg ]

     1	ASA Version 9.16(2)
     2	hostname core-fw-dmz-01
     3	domain-name corp.dmz.local
     4	
     5	object-group network Wayne-DMZ
     6	 description External public resources
     7	 network-object host 203.0.113.25
     8	 network-object host 198.51.100.75
     9	
    10	object network Gotham-VPN
    11	 host 198.51.100.75
    12	 description Encrypted edge gateway
    13	
    14	access-list OUTSIDE extended permit ip any host 198.51.100.75
    15	

Parsing [ cisco ] configs (by: location): 
Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]

     1	hostname branch-isr-02
     2	
     3	object network Hydra-Link
     4	 host 198.51.100.75
     5	 description Branch NAT egress
     6	
     7	object-group network Hydra-Edge
     8	 description Remote site uplink
     9	 network-object host 192.168.2.12
    10	 network-object host 198.51.100.75
    11	
    12	access-list OUTSIDE extended permit ip any host 198.51.100.75
    13	

Parsing [ cisco ] configs (by: location): 
Configuration File [ ./resources/configs/cisco/branch-fw-03.cfg ]

     1	ASA Version 9.9(2)
     2	hostname branch-fw-03
     3	domain-name remote.corp.com
     4	
     5	interface GigabitEthernet0/0
     6	 nameif outside
     7	 ip address 198.51.100.75 255.255.255.0
     8	 security-level 0
     9	 description ISP Link
    10	
    11	object network Hydra-Link
    12	 host 198.51.100.75
    13	 description Public NAT IP
    14	
    15	object-group network Hydra-Edge
    16	 description Remote site uplink
    17	 network-object host 192.168.2.12
    18	 network-object host 198.51.100.75
    19	
    20	access-list OUTSIDE extended permit ip any host 198.51.100.75
    21	

Parsing [ cisco ] configs (by: location): 
Configuration File [ ./resources/configs/cisco/hq-core-rtr-02.cfg ]

     1	hostname hq-core-rtr-02
     2	
     3	ntp server 198.51.100.75 prefer
     4	

Parsing [ cisco ] configs (by: location): 
Configuration File [ ./resources/configs/cisco/dmz-fw2-backup.cfg ]

     1	ASA Version 9.12(4)
     2	hostname dmz-fw2-backup
     3	domain-name global.dmz.example.net
     4	
     5	interface GigabitEthernet0/2
     6	 nameif outside
     7	 ip address 198.51.100.75 255.255.255.0
     8	 description Outbound Internet NAT interface
     9	

Parsing [ fortinet ] configs (by: location): 
Configuration File [ ./resources/configs/fortinet/fg-fw-dmz-01.cfg ]

     1	#config-version=FGT_100E-v7.0.10.F-build0485-230512
     2	#conf_file_ver=4.00
     3	#buildno=0485
     4	#serial=FGT100ETK21001234
     5	#hostname="fg-fw-dmz-01"
     6	#model="FortiGate-100E"
     7	#platform="FortiOS"
     8	#vd="root"
     9	
    10	config firewall address
    11	 edit "Falcon-Uplink"
    12	  set subnet 198.51.100.75 255.255.255.255
    13	  set comment "Encrypted relay via flight pack"
    14	 next
    15	end
    16	

Parsing [ fortinet ] configs (by: location): 
Configuration File [ ./resources/configs/fortinet/fg-branch-vpn-01.cfg ]

     1	#hostname="fg-branch-vpn-01"
     2	#model="FortiGate-60F"
     3	#config-version=FGT_60F-v7.2.5.F-build1517-230421
     4	
     5	config system interface
     6	 edit "wan1"
     7	  set ip 198.51.100.75 255.255.255.0
     8	  set alias "Branch ISP"
     9	 next
    10	end
    11	
    12	config firewall address
    13	 edit "Branch-Public"
    14	  set subnet 198.51.100.75 255.255.255.255
    15	  set comment "Branch NAT"
    16	 next
    17	end
    18	

Parsing [ fortinet ] configs (by: location): 
Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]

     1	#hostname="fg-lab-test-fw"
     2	#model="FortiGate-40F"
     3	
     4	config system interface
     5	 edit "wan1"
     6	  set ip 198.51.100.75 255.255.255.0
     7	  set alias "Branch ISP"
     8	 next
     9	end
    10	
    11	config firewall address
    12	 edit "Branch-Public"
    13	  set subnet 198.51.100.75 255.255.255.255
    14	  set comment "Branch NAT"
    15	 next
    16	end
    17	

Parsing [ fortinet ] configs (by: location): 
Configuration File [ ./resources/configs/fortinet/fg-testing-config.cfg ]

     1	#hostname="fg-branch-vpn-01"
     2	#model="FortiGate-60F"
     3	#config-version=FGT_60F-v7.2.5.F-build1517-230421
     4	
     5	config firewall policy
     6	 edit 13
     7	  set name "Remote NAT"
     8	  set srcintf "dmz"
     9	  set dstintf "wan1"
    10	  set srcaddr "10.10.10.10"
    11	  set dstaddr "203.0.113.10"
    12	  set action accept
    13	  set logtraffic all
    14	 next
    15	end
    16	

./resources
`-- configs
    |-- cisco
    |   |-- branch-fw-03.cfg
    |   |-- branch-isr-02.cfg
    |   |-- core-fw-dmz-01.cfg
    |   |-- dmz-fw2-backup.cfg
    |   `-- hq-core-rtr-02.cfg
    |-- fortinet
    |   |-- fg-branch-vpn-01.cfg
    |   |-- fg-fw-dmz-01.cfg
    |   |-- fg-lab-test-fw.cfg
    |   `-- fg-testing-config.cfg
    `-- misc
        |-- fw2.cfg
        `-- fw5.cfg

5 directories, 11 files
