$ bash -x ./scripts/network-configs.shell \
          --ip-addr="198.51.100.75,203.0.113.10" \
          --search="branch-isr-02.cfg,fg-lab-test-fw.cfg,edge-router-01.cfg" \
          --location=./configs \
          --verbose;

+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ed6qHIhiub
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ed6qHIhiub
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias display-help=display_help
+ alias new-line=newline
+ alias print-message=message
+ alias detect-vendor=detect_vendor
+ alias parse-cisco=main
+ [[ -z '' ]]
+ export script_name=./scripts/network-configs.shell
+ script_name=./scripts/network-configs.shell
+ [[ 4 -ge 1 ]]
+ [[ --ip-addr=198.51.100.75,203.0.113.10 =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ main --ip-addr=198.51.100.75,203.0.113.10 --search=branch-isr-02.cfg,fg-lab-test-fw.cfg,edge-router-01.cfg --location=./configs --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=198.51.100.75,203.0.113.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local search_pattern=198.51.100.75,203.0.113.10
+ [[ ip-addr =~ ^(config|c)$ ]]
+ [[ ip-addr =~ ^(search|s)$ ]]
+ [[ ip-addr =~ ^(location|l)$ ]]
+ [[ ip-addr =~ ^(output|o)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=branch-isr-02.cfg,fg-lab-test-fw.cfg,edge-router-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(ip-addr|i)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_configs=branch-isr-02.cfg,fg-lab-test-fw.cfg,edge-router-01.cfg
+ [[ search =~ ^(location|l)$ ]]
+ [[ search =~ ^(output|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --location=./configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ location =~ ^(ip-addr|i)$ ]]
+ [[ location =~ ^(config|c)$ ]]
+ [[ location =~ ^(search|s)$ ]]
+ [[ location =~ ^(location|l)$ ]]
+ local search_location=./configs
+ [[ location =~ ^(output|o)$ ]]
+ [[ location == \h\e\l\p ]]
+ [[ location == \d\e\b\u\g ]]
+ [[ location == \d\r\y\-\r\u\n ]]
+ [[ location == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(output|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local script_helper=false
+ [[ -z '' ]]
+ export output_config=./resources
+ output_config=./resources
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
+ configs_listing=()
+ declare -a configs_listing
+ local action_class=unknown
+ [[ -n '' ]]
+ [[ -z ./configs ]]
+ [[ -z 198.51.100.75,203.0.113.10 ]]
+ [[ -n branch-isr-02.cfg,fg-lab-test-fw.cfg,edge-router-01.cfg ]]
+ IFS=,
+ read -r -a search_items
+ found_configs=()
+ declare -a found_configs
+ for item in "${search_items[@]}"
++ find ./configs -type f -name branch-isr-02.cfg
+ result=./configs/cisco/branch-isr-02.cfg
+ [[ -n ./configs/cisco/branch-isr-02.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find ./configs -type f -name fg-lab-test-fw.cfg
+ result=./configs/fortinet/fg-lab-test-fw.cfg
+ [[ -n ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find ./configs -type f -name edge-router-01.cfg
+ result=
+ [[ -n '' ]]
+ [[ 2 -gt 0 ]]
+ configs_listing=("${found_configs[@]}")
+ action_class=search
+ [[ 2 -eq 0 ]]
+ [[ -n branch-isr-02.cfg,fg-lab-test-fw.cfg,edge-router-01.cfg ]]
+ matched_configs=()
+ declare -a matched_configs
+ IFS=,
+ read -ra ip_list
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${cfg}")
+ break
+ for cfg in "${configs_listing[@]}"
+ for ip in "${ip_list[@]}"
+ grep -qF 198.51.100.75 ./configs/fortinet/fg-lab-test-fw.cfg
+ matched_configs+=("${cfg}")
+ break
+ [[ 2 -gt 0 ]]
+ message 'Matching IPs found in 2 files:'
+ [[ -n Matching IPs found in 2 files: ]]
+ local 'message=Matching IPs found in 2 files:'
+ echo -e 'Matching IPs found in 2 files:'
Matching IPs found in 2 files:
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/cisco/branch-isr-02.cfg'
+ [[ -n   - ./configs/cisco/branch-isr-02.cfg ]]
+ local 'message=  - ./configs/cisco/branch-isr-02.cfg'
+ echo -e '  - ./configs/cisco/branch-isr-02.cfg'
  - ./configs/cisco/branch-isr-02.cfg
+ for item in "${matched_configs[@]}"
+ message '  - ./configs/fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - ./configs/fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - ./configs/fortinet/fg-lab-test-fw.cfg'
  - ./configs/fortinet/fg-lab-test-fw.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ configs_listing=("${matched_configs[@]}")
+ [[ 2 -eq 0 ]]
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/cisco/branch-isr-02.cfg ]]
+ set +e
+ detect_vendor ./configs/cisco/branch-isr-02.cfg
+ local config_file=./configs/cisco/branch-isr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/cisco/branch-isr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' ./configs/cisco/branch-isr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ message 'Parsing [ cisco ] configs (by: search): '
+ [[ -n Parsing [ cisco ] configs (by: search):  ]]
+ local 'message=Parsing [ cisco ] configs (by: search): '
+ echo -e 'Parsing [ cisco ] configs (by: search): '
Parsing [ cisco ] configs (by: search): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/cisco/branch-isr-02.cfg
++ sed 's|^\./||'
+ rel_path=configs/cisco/branch-isr-02.cfg
+ target_output=./resources/configs/cisco/branch-isr-02.cfg
++ dirname ./resources/configs/cisco/branch-isr-02.cfg
+ local output_dir=./resources/configs/cisco
+ [[ ! -d ./resources/configs/cisco ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/cisco/branch-isr-02.cfg' '--output=./resources/configs/cisco/branch-isr-02.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/cisco/branch-isr-02.cfg --output=./resources/configs/cisco/branch-isr-02.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]'
Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/cisco/branch-isr-02.cfg
     1	hostname branch-isr-02
     2	
     3	object network Hydra-Link
     4	 host 198.51.100.75
     5	 description Branch NAT egress
     6	
     7	object-group network Hydra-Edge
     8	 description Remote site uplink
     9	 network-object host 192.168.2.12
    10	 network-object host 198.51.100.75
    11	
    12	access-list OUTSIDE extended permit ip any host 198.51.100.75
    13	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ set +e
+ detect_vendor ./configs/fortinet/fg-lab-test-fw.cfg
+ local config_file=./configs/fortinet/fg-lab-test-fw.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/fortinet/fg-lab-test-fw.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ message 'Parsing [ fortinet ] configs (by: search): '
+ [[ -n Parsing [ fortinet ] configs (by: search):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: search): '
+ echo -e 'Parsing [ fortinet ] configs (by: search): '
Parsing [ fortinet ] configs (by: search): 
+ [[ -n ./resources ]]
+ base_output=./resources
++ echo ./configs/fortinet/fg-lab-test-fw.cfg
++ sed 's|^\./||'
+ rel_path=configs/fortinet/fg-lab-test-fw.cfg
+ target_output=./resources/configs/fortinet/fg-lab-test-fw.cfg
++ dirname ./resources/configs/fortinet/fg-lab-test-fw.cfg
+ local output_dir=./resources/configs/fortinet
+ [[ ! -d ./resources/configs/fortinet ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=198.51.100.75,203.0.113.10' '--config=./configs/fortinet/fg-lab-test-fw.cfg' '--output=./resources/configs/fortinet/fg-lab-test-fw.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=198.51.100.75,203.0.113.10 --config=./configs/fortinet/fg-lab-test-fw.cfg --output=./resources/configs/fortinet/fg-lab-test-fw.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]'
+ [[ -n Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ] ]]
+ local 'message=Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]'
+ echo -e 'Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]'
Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./resources/configs/fortinet/fg-lab-test-fw.cfg
     1	#hostname="fg-lab-test-fw"
     2	#model="FortiGate-40F"
     3	
     4	config system interface
     5	 edit "wan1"
     6	  set ip 198.51.100.75 255.255.255.0
     7	  set alias "Branch ISP"
     8	 next
     9	end
    10	
    11	config firewall address
    12	 edit "Branch-Public"
    13	  set subnet 198.51.100.75 255.255.255.255
    14	  set comment "Branch NAT"
    15	 next
    16	end
    17	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ tree ./resources
./resources
`-- configs
    |-- cisco
    |   |-- branch-fw-03.cfg
    |   |-- branch-isr-02.cfg
    |   |-- core-fw-dmz-01.cfg
    |   |-- dmz-fw2-backup.cfg
    |   `-- hq-core-rtr-02.cfg
    |-- fortinet
    |   |-- fg-branch-vpn-01.cfg
    |   |-- fg-fw-dmz-01.cfg
    |   |-- fg-lab-test-fw.cfg
    |   `-- fg-testing-config.cfg
    `-- misc
        |-- fw2.cfg
        `-- fw5.cfg

5 directories, 11 files
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ed6qHIhiub ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ed6qHIhiub

$ bash ./scripts/network-configs.shell \
       --ip-addr="198.51.100.75,203.0.113.10" \
       --search="branch-isr-02.cfg,fg-lab-test-fw.cfg,edge-router-01.cfg" \
       --location=./configs \
       --verbose;

Matching IPs found in 2 files:

  - ./configs/cisco/branch-isr-02.cfg
  - ./configs/fortinet/fg-lab-test-fw.cfg

Parsing [ cisco ] configs (by: search): 
Configuration File [ ./resources/configs/cisco/branch-isr-02.cfg ]

     1	hostname branch-isr-02
     2	
     3	object network Hydra-Link
     4	 host 198.51.100.75
     5	 description Branch NAT egress
     6	
     7	object-group network Hydra-Edge
     8	 description Remote site uplink
     9	 network-object host 192.168.2.12
    10	 network-object host 198.51.100.75
    11	
    12	access-list OUTSIDE extended permit ip any host 198.51.100.75
    13	

Parsing [ fortinet ] configs (by: search): 
Configuration File [ ./resources/configs/fortinet/fg-lab-test-fw.cfg ]

     1	#hostname="fg-lab-test-fw"
     2	#model="FortiGate-40F"
     3	
     4	config system interface
     5	 edit "wan1"
     6	  set ip 198.51.100.75 255.255.255.0
     7	  set alias "Branch ISP"
     8	 next
     9	end
    10	
    11	config firewall address
    12	 edit "Branch-Public"
    13	  set subnet 198.51.100.75 255.255.255.255
    14	  set comment "Branch NAT"
    15	 next
    16	end
    17	

./resources
`-- configs
    |-- cisco
    |   |-- branch-fw-03.cfg
    |   |-- branch-isr-02.cfg
    |   |-- core-fw-dmz-01.cfg
    |   |-- dmz-fw2-backup.cfg
    |   `-- hq-core-rtr-02.cfg
    |-- fortinet
    |   |-- fg-branch-vpn-01.cfg
    |   |-- fg-fw-dmz-01.cfg
    |   |-- fg-lab-test-fw.cfg
    |   `-- fg-testing-config.cfg
    `-- misc
        |-- fw2.cfg
        `-- fw5.cfg

5 directories, 11 files
